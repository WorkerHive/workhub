
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http{
  include /etc/nginx/mime.types;

  ssl_certificate /etc/letsencrypt-live/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt-live/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;



  upstream graph {
    server graph:4002;
  }

  upstream yjs {
    server yjs:1234;
  }

  upstream signal {
    server signal:6969;
  }

  server {
    listen 80 default_server;
    server_name _;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
  
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types
            text/plain
            text/css
            application/json
            application/javascript
            application/x-javascript
            text/xml
            application/xml
            application/xml+rss
            text/javascript
            application/vnd.ms-fontobject
            application/x-font-ttf
            font/opentype
            image/svg+xml
            image/x-icon;
    gzip_disable "MSIE [1-6]\.";

    location / {
      root /data/web-ui;
      index index.html;
      try_files $uri $uri /index.html;
    }

    location ~ /static/ {
      root /data/web-ui/;
    }
    location ~* .css$ {
        add_header  Content-Type    text/css;
    }
    location ~* .js$ {
        expires 2d;
        add_header Cache-Control "public";
        add_header  Content-Type    application/x-javascript;
    }


    location /yjs/ {  
      proxy_pass http://yjs/;
      proxy_http_version 1.1;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    location /graphql {
      proxy_pass http://graph/graphql;
      proxy_http_version 1.1;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    location /socket.io-next/ {
      proxy_pass http://signal/socket.io-next/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    location /socket.io/ {
      proxy_pass http://signal/socket.io/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    location /api/ {
        proxy_pass http://graph/;
        proxy_http_version 1.1;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Upgrade $http_upgrade;
    }
    
  }
}

