{"version":3,"sources":["components/more-menu/index.js","graph/yjs.js","components/dashboard-header/index.js","components/search-table/index.js","components/permission-form/index.js","actions/types.js","graph/index.js","actions/projectActions.js","views/Projects/index.js","actions/adminActions.js","nodes/ProjectItemNode.js","actions/authActions.js","tabs/project/calendar.js","actions/fileActions.js","components/dialogs/file-dialog/index.js","components/team-circles/index.js","components/graph-kanban/index.js","tabs/project/index.js","tabs/project/files.js","tabs/project/plan.js","tabs/project/team.js","components/file-drop/index.js","components/dialogs/plan-dialog/index.js","views/ProjectView/index.js","views/Dashboard/index.js","components/dialogs/file-upload-dialog/index.js","components/dialogs/converter-dialog/index.js","views/Files/index.js","actions/calendarActions.js","components/dialogs/calendar-dialog/index.js","views/Calendar/index.js","views/Settings/index.js","actions/teamActions.js","views/Team/index.js","actions/equipmentActions.js","views/Equipment/index.js","nodes/TypeDefNode.js","nodes/MSSQLNode.js","nodes/MSSQLServerNode.js","views/Admin/index.js","components/sidebar/index.js","controllers/DashboardController/index.js","views/Login/index.js","reducers/projects.js","reducers/dashboard.js","reducers/files.js","reducers/auth.js","reducers/equipment.js","reducers/team.js","reducers/calendar.js","reducers/index.js","configureStore.js","App.js","reportWebVitals.js","index.js","graph/ipfs/index.js","components/file-browser/index.js","components/file-browser/folder-dialog.js","graph/ipfs/p2p-stack.js","components/dialogs/file-preview-dialog/index.js","components/glb-card/index.js","components/pdf-card/index.js"],"names":["MoreMenu","props","React","useState","menuOpen","openMenu","IconButton","className","onClick","e","preventDefault","stopPropagation","currentTarget","MoreVert","Menu","open","menu","length","onClose","anchorEl","map","x","MenuItem","action","style","color","icon","Typography","marginLeft","label","YContext","createContext","YProvider","Y","ydoc","websocketProvider","setWebsocketProvider","status","setStatus","useEffect","WebsocketProvider","on","event","console","info","Provider","value","children","connect","state","auth","user","jwt_decode","token","dispatch","useContext","Paper","variant","title","Tabs","tabs","toLowerCase","indexOf","selectedTab","onChange","newVal","onTabSelect","Tab","Notifications","name","SearchTable","search","setSearch","flex","marginTop","height","display","flexDirection","TextField","InputProps","startAdornment","InputAdornment","position","Search","target","size","ButtonGroup","Button","ViewHeadline","ViewModule","Divider","List","data","filter","a","ListItem","renderItem","PermissionForm","dialogOpen","openDialog","changes","setChanges","dataObj","setDataObj","permissions","type","selected","Dialog","fullWidth","DialogTitle","DialogContent","fields","typeKey","k","typeDef","push","d","Object","assign","changed","FormControlLabel","control","Checkbox","checked","renderFields","DialogActions","onSave","create","Fab","bottom","right","Add","SET_PROJECTS","ADD_PROJECT","REMOVE_PROJECT","UPDATE_PROJECT","SET_TEAM","ADD_TEAM_MEMBER","REMOVE_TEAM_MEMBER","UPDATE_TEAM_MEMBER","SET_EQUIPMENT","ADD_EQUIPMENT","UPDATE_EQUIPMENT","REMOVE_EQUIPMENT","SET_FILES","SET_BOOKINGS","ADD_BOOKING","SET_TOKEN","SET_STATUS","SET_NODE_CONF","ADD_FILE","SET_DASHBOARD_TYPES","SET_DASHBOARD_PERMS","ApolloClient","link","createUploadLink","uri","process","REACT_APP_GRAPH_URL","cache","InMemoryCache","addTypename","log","client","GClient","projects","list","dashboard","types","getProjects","query","gql","then","r","y","cloneDeep","__typename","addProject","project","mutate","mutation","variables","newProject","updateProject","id","projectId","removeProject","query_string","qs","parse","location","ignoreQueryPrefix","setSelected","Set","undefined","trim","toUpperCase","tab","history","window","pathname","stringify","obj","item","button","match","url","concat","admin","UPDATE_INTEGRATION_MAP","getTypes","getState","adminTypes","getTables","store","connectionLayout","getColumns","table","bucketLayout","modal","withEditor","tables","setTables","source","getSource","links","editor","node","nodes","disabled","error","Autocomplete","updateNode","availableColumns","provides","options","getOptionLabel","autoHighlight","renderInput","params","margin","typedef","ret","changeKey","alignItems","width","rows","placeholder","dueDate","moment","Date","format","yDoc","LOGIN","localizer","momentLocalizer","setNodes","doc","setDoc","docProject","setProject","observer","toJSON","unobserve","_doc","getMap","observe","init","events","allDay","start","end","startAccessor","endAccessor","UPLOAD_FILE","uploadFile","file","cb","duplicate","addFile","getConverters","converters","files","selectedFiles","filename","onAttach","hashCode","str","hash","i","charCodeAt","intToRGB","c","toString","substring","team","members","Array","isArray","mbr","member","Avatar","backgroundColor","split","cards","graph","columns","setColumns","renderCard","card","Infinity","textAlign","description","onCardDragEnd","destination","cols","slice","fromIx","fromColumnId","toIx","toColumnId","spliced","splice","fromPosition","toPosition","onStatusChange","template","onColumnDragEnd","col","sort","b","parents","CalendarTab","FileTab","setFiles","fileId","attachFileToProject","PlanTab","columnMap","setView","view","padding","Dashboard","EmojiNature","exploreNode","renderPlan","TeamTab","FileDrop","onDrop","useCallback","acceptedFiles","useDropzone","noClick","getRootProps","getInputProps","isDragActive","ID","setID","setTitle","setDescription","setDueDate","setMembers","attachments","setAttachments","memberAnchor","setMemberAnchor","plan","valueOf","toggleUser","m","newFile","attachFile","cid","justifyContent","top","zIndex","left","fontWeight","multiline","rowsMax","toggleMembersMenu","transformOrigin","vertical","horizontal","anchorOrigin","Check","marginRight","ownProps","setSelectedTab","projectDoc","selectedCard","setSelectedCard","setLinks","_setNodes","set","_setLinks","nodeTypes","ProjectItemNode","_setAttachments","onNodeAdd","onLinkAdd","onLinkRemove","_links","onNodeRemove","_nodes","onNodeUpdate","ix","n","mergeWith","objValue","srcValue","debug","statusColors","unfinished","blocked","doing","complete","onNodeChange","onLinkChange","update","replace","path","render","ResponsiveGridLayout","WidthProvider","GridLayout","isBounded","autoSize","rowHeight","innerHeight","containerPadding","layout","w","h","data-grid","parseInt","upload","setUpload","uploading","setUploading","uuidv4","minHeight","maxHeight","overflowY","borderRadius","border","evt","f","Clear","Backup","fontSize","async","each","u","err","ConverterDialog","outputFormat","setOutputFormat","formats","setFormats","from","sourceFormat","to","targetFormat","extension","Forward","FormControl","InputLabel","Select","convertFile","getFiles","progress","setProgress","useMutation","convertDoc","setConvertDoc","selectedData","setData","viewable","LinearProgress","onDownloadProgress","onDownloadEnd","onFileOpen","equipment","addBooking","time","booking","step","setStep","searchTab","setSearchTab","date","setDate","setAllDay","startTime","setStart","endTime","setEnd","selectedItems","setSelectedItems","renderStepTitle","s","renderStep","sTime","eTime","get","_booking","items","bookings","calendar","getBookings","setBookings","Settings","setConverters","installed","converterId","getTeam","addTeamMember","newMember","removeTeamMember","memberId","updateTeamMember","Schedule","SupervisorAccount","SupervisedUserCircle","Share","Edit","Delete","getEquipment","addEquipment","newItem","updateEquipment","equipmentId","removeEquipment","src","host","db","username","password","draggable","updateIntegrationMap","integrationMap","integrations","TypeDefNode","MSSQLNode","MSSQLServer","withRouter","CalendarToday","AccountTree","BusinessCenter","Description","Drawer","swarmKey","getPermissions","typePermissions","perms","exact","component","DashboardView","Calendar","Projects","Teams","Equipment","SettingsView","AdminView","updated","setToken","getNodeConf","connectNode","quote","setQuote","setError","setUsername","setPassword","doLogin","login","fetch","json","q","paddingBottom","marginBottom","onKeyDown","keyCode","INIT","tIx","combineReducers","pIx","eIx","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","App","utils","MomentUtils","loading","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","setChonkyDefaults","iconComponent","ChonkyIconFA","pdfjs","GlobalWorkerOptions","workerSrc","version","ReactDOM","StrictMode","document","getElementById","IPFSContext","withIPFS","withContext","IPFSProvider","isReady","setReady","ipfs","setIPFS","IPFS","repo","config","Addresses","Swarm","relay","enabled","hop","libp2p","P2PStack","decode","timeEnd","startIPFS","stop","catch","folderDialog","dialogFolder","isDir","folderChain","useMemo","ChonkyActions","CreateFolder","DeleteFiles","folders","setFolders","onAdd","fileActions","UploadFiles","DownloadFiles","disableDragAndDropProvider","instanceId","onFileAction","payload","targetFile","downloadSize","reduce","buff","Buffer","cat","chunk","content","results","downloadjs","Blob","zip","JSZip","binary","generateAsync","saveAs","ext","FolderDialog","setName","addFolder","transportKey","WebRTCStar","prototype","Symbol","toStringTag","modules","transport","streamMuxer","MPLEX","connEncryption","NOISE","connProtector","Protector","peerDiscovery","autoDial","tag","URL","revokeObjectURL","createObjectURL","maxWidth","renderContent","GLBCard","canvas","scene","engine","onResizeWindow","resize","BABYLON","Engine","Scene","createDefaultEnvironment","camera","ArcRotateCamera","Math","PI","Vector3","setTarget","Zero","minZ","wheelPrecision","speed","SceneLoader","ImportMesh","attachControl","addEventListener","runRenderLoop","stopRenderLoop","dispose","removeEventListener","ref","PDFCard","numPages","setNumPages","onLoadSuccess","el","index","pageNumber"],"mappings":"mnDAae,SAASA,EAASC,GAAO,IAAD,EACJC,IAAMC,SAAS,MADX,mBAC3BC,EAD2B,KACjBC,EADiB,KASnC,MAAO,CACH,cAACC,EAAA,EAAD,CAAYC,UAAU,YAAYC,QAPnB,SAACC,GAChBA,EAAEC,iBACFD,EAAEE,kBACFN,EAASI,EAAEG,gBAIX,SACI,cAACC,EAAA,EAAD,MAEJ,cAACC,EAAA,EAAD,CAAMC,KAAMd,EAAMe,KAAKC,OAAS,GAAKb,EAAUc,QAAS,kBAAMb,EAAS,OAAOc,SAAUf,EAAxF,SACKH,EAAMe,KAAKI,KAAI,SAACC,GACb,OACI,eAACC,EAAA,EAAD,CAAUd,QAAS,SAACC,GAChBA,EAAEE,kBACFN,EAAS,MACTgB,EAAEE,UACHC,MAAO,CAACC,MAAOJ,EAAEI,OAAS,SAJ7B,UAKKJ,EAAEK,KACH,cAACC,EAAA,EAAD,CAAYH,MAAO,CAACI,WAAY,GAAhC,SACKP,EAAEQ,iB,mDCjBlBC,EAAW5B,IAAM6B,gBAEjBC,EAAY,SAAC/B,GAAW,IAAD,EACVC,IAAMC,SAAS,IAAI8B,KADT,mBAC5BC,EAD4B,aAEgBhC,IAAMC,SAAS,OAF/B,mBAE5BgC,EAF4B,KAETC,EAFS,OAGNlC,IAAMC,SAAS,gBAHT,mBAG5BkC,EAH4B,KAGpBC,EAHoB,KAoBlC,OAfApC,IAAMqC,WAAU,YAGdJ,EAAoB,IAAIK,IAAJ,gBAFT,kCAES,SAA4C,UAAWN,IAEzDO,GAAG,UAAU,SAAAC,GAC7BC,QAAQC,KAAK,gBAAiBF,EAAML,QACpCC,EAAUI,EAAML,WAGlBD,EAAqBD,KACpB,IAII,cAACL,EAASe,SAAV,CAAmBC,MAAO,CAACZ,OAAMG,UAAjC,SACFpC,EAAM8C,Y,OCEEC,yBAAQ,SAACC,GAAD,MAAY,CAC/BZ,OAAQY,EAAMC,KAAKb,OACnBc,KAAMC,YAAWH,EAAMC,KAAKG,WAC5B,SAACC,GAAD,MAAe,KAHJN,EA3Bf,SAAyB/C,GAAO,IACpBoC,EAAWnC,IAAMqD,WAAWzB,GAA5BO,OAER,OACI,eAACmB,EAAA,EAAD,CAAOjD,UAAU,iBAAjB,UACA,cAACoB,EAAA,EAAD,CAAY8B,QAAQ,KAApB,SAA0BxD,EAAMyD,QAChC,qBAAKnD,UAAU,uBAAf,SACI,cAACoD,EAAA,EAAD,CAAMb,MAAO7C,EAAM2D,KAAKxC,KAAI,SAACC,GAAD,OAAOA,EAAEwC,iBAAeC,QAAQ7D,EAAM8D,YAAYF,eAAgBG,SAAU,SAACvD,EAAGwD,GACxGhE,EAAMiE,YAAYjE,EAAM2D,KAAKK,KADjC,UAGEhE,EAAM2D,MAAQ,IAAIxC,KAAI,SAACC,GAAD,OACpB,cAAC8C,EAAA,EAAD,CAAKtC,MAAOR,WAKpB,sBAAKd,UAAU,cAAf,UACE,cAAC6D,EAAA,EAAD,IACA,sBAAK7D,UAAU,YAAf,UACE,cAACoB,EAAA,EAAD,CAAY8B,QAAQ,YAApB,SAAiCxD,EAAMkD,KAAKkB,OAC5C,sBAAK9D,UAAW8B,EAAhB,UAAwB,qBAAK9B,UAAU,WAAsB,aAAV8B,EAAwB,SAAW,yB,8FChBnF,SAASiC,EAAYrE,GAAO,IAAD,EACRC,IAAMC,SAAS,IADP,mBAC9BoE,EAD8B,KACtBC,EADsB,KAGtC,OACI,eAAChB,EAAA,EAAD,CAAOhC,MAAO,CAACiD,KAAM,WAAYC,UAAW,GAAIC,OAAQ,EAAGC,QAAS,OAAQC,cAAe,UAA3F,UACI,sBAAKtE,UAAU,cAAf,UACI,cAACuE,EAAA,EAAD,CACIC,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACC,EAAA,EAAD,OAErDtD,MAAM,SACNiB,MAAOyB,EACPP,SAAU,SAACvD,GACP+D,EAAU/D,EAAE2E,OAAOtC,QAEvBW,QAAQ,WACR4B,KAAK,UACT,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAQ,cAACC,EAAA,EAAD,MACR,cAACD,EAAA,EAAD,UAAQ,cAACE,EAAA,EAAD,YAGhB,cAACC,EAAA,EAAD,IACA,qBAAKnF,UAAU,YAAf,SACI,cAACoF,EAAA,EAAD,UACK1F,EAAM2F,KAAKC,QAAO,SAACC,GAChB,QAAG7F,EAAM4F,QAAUtB,EAAOtD,OAAS,IACxBhB,EAAM4F,OAAOC,EAAGvB,MAG5BnD,KAAI,SAACC,GAAD,OACP,cAAC0E,EAAA,EAAD,UACK9F,EAAM+F,WAAW3E,e,0FCjC3B,SAAS4E,GAAehG,GAAO,IAAD,EACRC,IAAMC,UAAS,GADP,mBAClC+F,EADkC,KACtBC,EADsB,OAGTjG,IAAMC,SAAS,IAHN,mBAGjCiG,EAHiC,KAGxBC,EAHwB,OAITnG,IAAMC,SAAS,IAJN,mBAIjCmG,EAJiC,KAIxBC,EAJwB,KAMnCC,EAAcvG,EAAMuG,aAAevG,EAAMuG,YAAY,IAAM,GAC3DC,EAAOxG,EAAMwG,MAAQxG,EAAMwG,KAAK,IAAM,GAE5CvG,IAAMqC,WAAU,WACTtC,EAAMyG,UACLH,EAAWtG,EAAMyG,YAEtB,CAACzG,EAAMyG,WAEV,IAuCMxF,EAAU,WACZjB,EAAMiB,UACNiF,GAAW,GACXI,EAAW,KAQf,OACI,sBAAKhG,UAAU,kBAAkBiB,MAAOvB,EAAMuB,MAA9C,UACI,eAACmF,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMyG,UAAYR,EAAYhF,QAAS,WAC5DA,KADH,UAGI,cAAC2F,EAAA,EAAD,UAAcJ,EAAKpC,OACnB,cAACyC,GAAA,EAAD,CAAetF,MAAO,CAACoD,QAAS,OAAQC,cAAe,UAAvD,SAxDS,SAAC4B,GAClB,IAAIM,EAAS,GADc,aAIvB,IAAMC,EAAUC,EAChB,OAAOR,EAAKS,QAAQD,IAChB,IAAK,SACLF,EAAOI,KACH,cAACrC,EAAA,EAAD,CAAWhC,MAAOwD,EAAQU,GAAUhD,SAAU,SAACvD,GAC3C,IAAI2G,EAAIC,OAAOC,OAAO,GAAIhB,GACtBiB,EAAUF,OAAOC,OAAO,GAAIlB,GAChCgB,EAAEJ,GAAWvG,EAAE2E,OAAOtC,MACtByE,EAAQP,GAAWvG,EAAE2E,OAAOtC,MAC5ByD,EAAWa,GACXf,EAAWkB,IACZ1F,MAAOmF,KAEd,MACA,IAAK,UACDD,EAAOI,KACH,cAACK,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CAAUC,QAASrB,EAAQU,GAAUhD,SAAU,SAACvD,GAC5C,IAAI2G,EAAIC,OAAOC,OAAO,GAAIhB,GACtBiB,EAAUF,OAAOC,OAAO,GAAIlB,GAChCgB,EAAEJ,GAAWvG,EAAE2E,OAAOuC,QACtBJ,EAAQP,GAAWvG,EAAE2E,OAAOuC,QAC5BpB,EAAWa,GACXf,EAAWkB,MAGnB1F,MAAOmF,OA5B3B,IAAI,IAAIC,KAAKR,EAAKS,QAAS,IAiC3B,OAAOH,EAqBMa,CAAanB,KAElB,eAACoB,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAAS,WAAOU,KAAxB,oBACA,cAACqE,EAAA,EAAD,CAAQ/E,QAAS,kBAf7BP,EAAM6H,OAAOxB,EAASF,QACtBlF,KAc6CO,MAAM,UAAUgC,QAAQ,YAAzD,wBAGR,qBAAKlD,UAAU,yBAAf,SACKN,EAAM8C,WAEVyD,EAAYuB,QACT,cAACC,GAAA,EAAD,CAAKxH,QAAS,kBAAM2F,GAAW,IAAO1E,MAAM,UAAUD,MAAO,CAAC0D,SAAU,WAAY+C,OAAQ,GAAIC,MAAO,IAAvG,SACI,cAACC,EAAA,EAAD,S,aCvGPC,GAAe,eACfC,GAAc,cACdC,GAAiB,iBACjBC,GAAiB,iBAGjBC,GAAW,WACXC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAAqB,qBAGrBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAmB,mBAEnBC,GAAY,YAGZC,GAAe,eACfC,GAAc,cAEdC,GAAY,YACZC,GAAa,aAEbC,GAAgB,gBAEhBC,GAAW,WAEXC,GAAsB,sBACtBC,GAAsB,sB,gCC7BpB,cACb,IACA,OAAO,IAAIC,eAAa,CACtBC,KAAMC,KAAiB,CACrBC,IAEEC,mIAAYC,qBAAuB,aAEvCC,MAAO,IAAIC,gBAAc,CACvBC,aAAa,MAGhB,MAAMxJ,GACLkC,QAAQuH,IAAIzJ,K,8gCCXhB,IAAM0J,GAASC,K,4BC0GApH,0BAAQ,SAACC,GAAD,MAAY,CACjCE,KAAMC,YAAWH,EAAMC,KAAKG,OAC5BgH,SAAUpH,EAAMoH,SAASC,KACzB7D,KAAMxD,EAAMsH,UAAUC,MAAM3E,QAAO,SAACC,GAAD,MAAiB,YAAVA,EAAEzB,QAC5CmC,YAAavD,EAAMsH,UAAU/D,YAAYX,QAAO,SAACC,GAAD,MAAiB,YAAVA,EAAEW,YACvD,SAACnD,GAAD,MAAe,CACjBmH,YAAa,kBAAMnH,GD/CZ,SAACA,GACN,OAAO6G,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAcJC,MAAK,SAACC,GACPvH,EAAS,CAACmD,KAAM+D,GAAoBH,SAAUQ,EAAEjF,KAAKyE,SAASjJ,KAAI,SAACC,GACjE,IAAIyJ,EAAIC,qBAAU1J,GAElB,cADOyJ,EAAEE,WACFF,cC4BbG,WAAY,SAACC,GAAD,OAAa5H,ED/GD,SAAC4H,GACzB,OAAO,SAAC5H,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAUVU,UAAW,CACTH,QAASA,KAERN,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKqF,cAAYL,MAAK,SAACC,GACtCvH,EAAS,CAACmD,KAAM+D,GAAmBc,WAAYT,QC8FjBI,CAAWC,KAC7CK,cAAe,SAACC,EAAIN,GAAL,OAAiB5H,ED1FL,SAACmI,EAAWP,GACvC,OAAO,SAAC5H,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAUdU,UAAW,CACTI,UAAWA,EACXP,QAASA,KACPN,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK2F,iBAAeX,MAAK,SAACC,GAC1CvH,EAAS,CAACmD,KAAM+D,GAAsBU,QAASA,EAASM,GAAIC,QCyEnBF,CAAcC,EAAIN,KAC3DQ,cAAe,SAACF,GAAD,OAAQlI,GDrEOmI,ECqEgBD,EDpErC,SAAClI,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAKNU,UAAW,CACTI,UAAWA,KAEdb,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK8F,iBAAed,MAAK,SAACC,GACtCA,GAAGvH,EAAS,CAACmD,KAAM+D,GAAsBgB,GAAIC,UAZzB,IAACA,MC4DjBzI,EA5Ef,SAAkB/C,GAChB,IAAM0L,EAAeC,KAAGC,MAAM5L,EAAM6L,SAASvH,OAAQ,CAACwH,mBAAmB,IADnD,EAEY7L,IAAMC,SAAS,MAF3B,mBAEduG,EAFc,KAEJsF,EAFI,KAQtB,OAJA9L,IAAMqC,WAAU,WACdtC,EAAMwK,gBACL,IAEI,CACL,cAAC,EAAD,CACA7G,KAAM,CAAC,OAAD,mBAAW,IAAIqI,IAAIhM,EAAMoK,SAASxE,QAAO,SAACC,GAAD,OAAmB,MAAZA,EAAEzD,aAA8B6J,GAAZpG,EAAEzD,UAAqBjB,KAAI,SAACC,GAAD,OAAOA,EAAEgB,OAAO8J,OAAOC,qBAAoB,GAChJlI,YAAa,SAACmI,GACF,OAAPA,UACMV,EAAatJ,OACpBpC,EAAMqM,QAAQnF,KAAd,UAAsBoF,OAAOT,SAASU,SAAtC,YAAkDZ,KAAGa,UAAUd,OAE/DA,EAAatJ,OAASgK,EACtBpM,EAAMqM,QAAQnF,KAAd,UAAsBoF,OAAOT,SAASU,SAAtC,YAAkDZ,KAAGa,UAAUd,OAKnE5H,YAAa4H,EAAatJ,QAAUsJ,EAAatJ,OAAO+J,eAAiB,MACzE1I,MAAO,aACP,cAACuC,GAAD,CACE6B,OAAQ,SAAC4E,EAAK9G,GACZ,GAAG8G,EAAIlB,GAAG,CACR,IAAIpE,EAAIC,OAAOC,OAAO,GAAI1B,UACnBwB,EAAEoE,GACTvL,EAAMsL,cAAcmB,EAAIlB,GAAIpE,QAE5BnH,EAAMgL,WAAWrF,IAGrB1E,QAAS,kBAAM8K,EAAY,OAC3BtF,SAAUA,EACVD,KAAMxG,EAAMwG,KACZD,YAAavG,EAAMuG,YAbrB,SAcE,cAAClC,EAAD,CACEuB,OAAQ,SAAC8G,EAAMpI,GAAP,OAAkBoI,EAAKtI,KAAKP,QAAQS,IAAW,GACvDqB,KAAM3F,EAAMoK,SAASxE,QAAO,SAACC,GAC3B,SAAG6F,EAAatJ,QAAUyD,EAAEzD,QAAUsJ,EAAatJ,UAEzCsJ,EAAatJ,UAItBwD,QAAO,SAACC,GAAD,OAAOA,EAAEzB,QACnB2B,WAAY,SAAC2G,GAAD,MAAU,CACpB,sBAAKpM,UAAU,eAAf,UACE,cAACwF,EAAA,EAAD,CAAU6G,QAAM,EAACpM,QAAS,WACxBP,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM4M,MAAMC,IAAlC,YAAyCH,EAAKnB,GAA9C,WADF,SAGE,cAAC7J,EAAA,EAAD,CAAYH,MAAO,CAACiD,KAAM,GAAIhB,QAAQ,YAAtC,SAAmDkJ,EAAKtI,SAE1D,cAACrE,EAAD,CACEgB,KAAM,GACJ+L,OAAO9M,EAAMkD,KAAK6J,MAAQ,CAC1B,CACEnL,MAAO,OACPN,OAAQ,kBAAMyK,EAAYW,KAE5B,CACE9K,MAAO,SACPJ,MAAO,MACPF,OAAQ,kBAAMtB,EAAMyL,cAAciB,EAAKnB,OAEvC,mB,gqDCjGlB,IAAMrB,GAASC,KAEF6C,GAAyBtC,cAAH,MAmEtBuC,GAAW,WACtB,OAAO,SAAC5J,EAAU6J,GAChB,OAAOhD,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAQJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKwH,cAAYxC,MAAK,SAACC,GACtClI,QAAQuH,IAAIW,GACZvH,EAAS,CAACmD,KAAM+D,GAA2BA,MAAOK,SAM3CwC,GAAY,SAACC,GACtB,OAAOnD,GAAOO,MAAM,CAClBA,MAAOC,cAAF,KAE4B2C,KAKhC1C,MAAK,SAACC,GACP,OAAOA,EAAEjF,KAAK2H,qBAIPC,GAAa,SAACF,EAAOG,GAC9B,OAAOtD,GAAOO,MAAM,CAChBA,MAAOC,cAAF,KAEwB2C,EAAsBG,KAMlD7C,MAAK,SAACC,GACP,OAAOA,EAAEjF,KAAK8H,iB,+BCrGTjH,I,OAAO,gBAEPkH,GAAQC,cAAW,SAAC3N,GAAW,IAAD,EAEXC,IAAMC,SAAS,IAFJ,mBAEjC0N,EAFiC,KAEzBC,EAFyB,OAIb5N,IAAMC,SAAS,MAJF,gCAMTD,IAAMC,SAAS,KANN,6BAQzCD,IAAMqC,WAAU,WACd,IAAIwL,EAASC,IACbX,GAAUU,EAAOvC,IAAIZ,MAAK,SAACiD,GACzBC,EAAUD,MAEZlL,QAAQuH,IAAI8D,OACX,IAEH,IAAMA,EAAY,WACd,IAAIC,EAAQhO,EAAMiO,OAAOD,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEiI,QAAU9N,EAAMkO,KAAK3C,MACpE,GAAGyC,GAASA,EAAMhN,OAAS,EAAE,CAC3B,IAAImN,EAAQH,EAAM7M,KAAI,SAACC,GAAD,OAAOpB,EAAMiO,OAAOE,MAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMnK,EAAE+D,UAAQ,MAChF,GAAGgJ,GAASA,EAAMnN,OAAS,EACvB,OAAOmN,EAAM,KA2CvB,OACE,sBAAK5M,MAAO,CAACoD,QAAS,OAAQH,KAAM,EAAGI,cAAe,UAAtD,UACI,cAACC,EAAA,EAAD,CAAWuJ,UAAQ,EAACC,OAAQN,IAAanM,MAAM,kBAAkBiB,MAAOkL,IAAYpI,KAAK/D,QAEzF,cAAC0M,GAAA,EAAD,CACEzL,MAAO7C,EAAMkO,KAAKvI,KAAK6H,MACvBzJ,SAAU,SAACvD,EAAGwD,GACZtB,QAAQuH,IAAIzJ,EAAGwD,GACZA,GAAUA,EAAOI,OAElBpE,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK6H,MAAQxJ,EACXkK,KAETX,GAAWQ,IAAYxC,GAAIvH,EAAOI,MAAMuG,MAAK,SAACC,GAC5ClI,QAAQuH,IAAI,qBAAsBjG,EAAOI,KAAMwG,GAC/C5K,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAGtC,OAFAA,EAAKvI,KAAK6I,iBAAmB5D,EAC7BsD,EAAKvI,KAAK8I,SAAW,GACdP,UAKfQ,QAASd,EACTe,eAAgB,SAACvN,GAAD,OAAOA,EAAEgD,MACzBwK,eAAa,EACbC,YAAa,SAACC,GAAD,OACX,cAACjK,EAAA,EAAD,2BAAeiK,GAAf,IAAuBC,OAAO,SAASnN,MAAM,cAEjD,qBAAKL,MAAO,CAACkD,UAAW,GAAxB,SApEe,WACnB,IAAIuJ,EAAQhO,EAAMiO,OAAOD,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEV,QAAUnF,EAAMkO,KAAK3C,MACpE,GAAGyC,GAASA,EAAMhN,OAAS,EAAE,CACzB,IAAImN,EAAQH,EAAM7M,KAAI,SAACC,GAAD,OAAOpB,EAAMiO,OAAOE,MAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMnK,EAAE0M,UAAQ,MAChF,GAAGK,GAASA,EAAMnN,OAAS,EAAE,CACzB,IAAIwF,EAAO2H,EAAM,GAAGxI,KAAKqJ,QACrBC,EAAM,GAFe,aAIrB,IAAIC,EAAYlI,EAChBiI,EAAI/H,KACJ,sBAAK3F,MAAO,CAACkD,UAAW,EAAGE,QAAS,OAAQwK,WAAY,UAAxD,UACI,qBAAK5N,MAAO,CAAC6N,MAAO,KAApB,SACGpI,IAFP,IAII,wBACEnE,MAAO7C,EAAMkO,MAAQlO,EAAMkO,KAAKvI,MAAQ3F,EAAMkO,KAAKvI,KAAK8I,UAAYzO,EAAMkO,KAAKvI,KAAK8I,SAASzH,GAC7FjD,SAAU,SAACvD,GAETR,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAItC,OAHIA,EAAKvI,KAAK8I,WAAUP,EAAKvI,KAAK8I,SAAW,IAC7C/L,QAAQuH,IAAIzJ,EAAE2E,OAAOtC,MAAO,aAAcqM,GAC1ChB,EAAKvI,KAAK8I,SAASS,GAAa1O,EAAE2E,OAAOtC,MAClCqL,MARb,UAWIlO,EAAMkO,KAAKvI,KAAK6I,kBAAoB,IAAI1B,OAAO,CAAC,CAAC1I,KAAM,SAASjD,KAAI,SAACC,GAAD,OACpE,wBAAQyB,MAAOzB,EAAEgD,KAAjB,SACGhD,EAAEgD,iBApBjB,IAAI,IAAI4C,KAAKR,EAAM,IA0BnB,OAAOyI,IAoCVtH,WAMIuG,GAAOP,cAAW,SAAC3N,GAC5B,OACA,eAAC,KAAD,2BAAiBA,GAAjB,cACI,0BACE+D,SAAU,SAACvD,GAAD,OAAOR,EAAMiO,OAAOM,WAAWvO,EAAMuL,IAAI,SAAC2C,GAAU,MAAO,CAACvI,KAAM,CAAC/D,MAAOpB,EAAE2E,OAAOtC,YAC7FA,MAAO7C,EAAM2F,MAAQ3F,EAAM2F,KAAK/D,MAChCyN,KAAM,EACNC,YAAY,kBACd,sBAAK/N,MAAO,CAACoD,QAAS,QAAtB,UACK3E,EAAM2F,MAAQ3F,EAAM2F,KAAK4J,SAAW,OADzC,IACkDvP,EAAM2F,MAAQ6J,KAAO,IAAIC,KAA0B,IAArBzP,EAAM2F,KAAK4J,UAAiBG,OAAO,wB,qgBC5H3H,ICGIC,GDHEzF,GAASC,KAEFyF,GAAQlF,cAAH,MAoCLrI,GAAY,SAACD,GACtB,OAAO,SAACiB,GACJA,EAAS,CAACmD,KAAM+D,GAAkBnI,OAAQA,M,UCnC5CyN,I,OAAYC,aAAgBN,OAyDnBzM,yBAAQ,MAAM,SAACM,GAAD,MAAe,CAC1ChB,UAAW,SAACD,GAAD,OAAYiB,EAAShB,GAAUD,QAD7BW,EAxDf,SAAqB/C,GAAO,IACjBiC,EAAQhC,IAAMqD,WAAWzB,GAAzBI,KADgB,EAGWhC,IAAMC,SAAS,IAH1B,gCAIKD,IAAMC,SAAS,KAJpB,mBAIfiO,EAJe,KAIR4B,EAJQ,OAKC9P,IAAMC,SAAS,MALhB,mBAKf8P,EALe,KAKVC,EALU,OAMYhQ,IAAMC,SAAS,IAN3B,mBAMfgQ,EANe,KAMHC,EANG,KAQjBC,EAAW,WACb,GAAGT,GAAK,CACN,IAAIlD,EAAMkD,GAAKU,SACf3N,QAAQuH,IAAI,UAAWwC,GACP,MAAbA,EAAI0B,OACL4B,EAAStD,EAAI0B,MAAMhN,KAAI,SAACC,GAAD,OAAOgG,OAAOC,OAAO,GAAIjG,SAyBxD,OAnBEnB,IAAMqC,WAAU,WAEd,GADAI,QAAQuH,IAAI,MAAOjK,GAChBA,EAAMiL,SAAWhJ,GAAQjC,EAAMiL,QAAQM,IAAM2E,EAAW3E,GAAG,CACzDyE,GAAKA,EAAIM,UAAUF,GAEtB1N,QAAQuH,IAAI,mBACZ,IAAIsG,EAAOtO,EAAKuO,OAAL,eAAoBxQ,EAAMiL,QAAQM,KAC7CoE,GAAOY,EACLN,EAAOM,GACTA,EAAKE,QAAQL,GAEbD,EAAWnQ,EAAMiL,SAEjB,IAAIyF,EAAOH,EAAKF,SAEC,MAAdK,EAAKvC,OAAe4B,EAASW,EAAKvC,UAEtC,CAACnO,EAAMiL,QAAS+E,IAGjB,qBAAK1P,UAAU,eAAf,SACI,cAAC,KAAD,CACIuP,UAAWA,GACXc,OAAQxC,EAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAEF,MAAQE,EAAEF,KAAK4J,WAASpO,KAAI,SAACC,GAAD,MAAQ,CAC9DmK,GAAInK,EAAEmK,GACN9H,MAAOrC,EAAEuE,KAAK/D,MACdgP,QAAQ,EACRC,MAAO,IAAIpB,KAAuB,IAAhBrO,EAAEuE,KAAK4J,QAAkB,KAC3CuB,IAAK,IAAIrB,KAAuB,IAAjBrO,EAAEuE,KAAK4J,aAE1BwB,cAAc,QACdC,YAAY,MACZzP,MAAO,CAAEiD,KAAM,U,0gDCzD/B,IAAM0F,GAASC,KAEF8G,GAAcvG,cAAH,MAcXwG,GAAa,SAACC,EAAMC,GAC/B,OAAO,SAAC/N,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAU8F,GACV7F,UAAW,CACT+F,KAAMA,KAEPxG,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKuL,cAAYvG,MAAK,SAACC,GACtClI,QAAQuH,IAAI,eACZmH,EAAGxG,EAAEuG,MACDvG,EAAEyG,WACJhO,EAASiO,GAAQ1G,EAAEuG,YA2CdI,GAAgB,WAC3B,OAAOrH,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAWJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK6L,eAgBXF,GAAU,SAACH,GACtB,OAAO,SAAC9N,GACNA,EAAS,CAACmD,KAAM+D,GAAgB4G,KAAMA,MC1C3BpO,0BAAQ,SAACC,GAAD,MAAY,CAC/ByO,MAAOzO,EAAMyO,MAAMpH,QADRtH,EA3Cf,SAAoB/C,GAAO,IAAD,EACQC,IAAMC,SAAS,IADvB,mBACdoE,EADc,KACNC,EADM,OAGiBtE,IAAMC,SAAS,IAHhC,mBAGdwR,EAHc,KAGC3F,EAHD,KAYtB,OACI,eAACrF,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAnD,UACI,cAAC2F,EAAA,EAAD,oBACA,eAACC,GAAA,EAAD,WACI,cAAChC,EAAA,EAAD,CACI8B,WAAS,EACT9D,MAAOyB,EACPP,SAAU,SAACvD,GAAD,OAAO+D,EAAU/D,EAAE2E,OAAOtC,QACpCjB,MAAM,SACNkD,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACC,EAAA,EAAD,SAEzD,cAACQ,EAAA,EAAD,UACK1F,EAAMyR,MAAM7L,QAAO,SAACC,GAAD,OAAOA,EAAE8L,UAAY9L,EAAE8L,SAAS/N,cAAcC,QAAQS,EAAOV,gBAAkB,KAAGzC,KAAI,SAACC,GAAD,OACtG,eAAC0E,EAAA,EAAD,CAAU6G,QAAM,EAAhB,UAAiB,cAAClF,EAAA,EAAD,CAAUC,QAASgK,EAActQ,EAAEmK,IAAKxH,SAAU,SAACvD,GAChE,IAAIiR,EAAQC,EACZD,EAAMrQ,EAAEmK,IAAM/K,EAAE2E,OAAOuC,QACvBqE,EAAY0F,MACXrQ,EAAEuQ,oBAInB,eAAC/J,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAASP,EAAMiB,QAAvB,mBACA,cAACqE,EAAA,EAAD,CAAQ9D,MAAM,UAAUgC,QAAQ,YAAYjD,QA/BpC,WACbP,EAAM4R,WACL5R,EAAM4R,SAASF,GACf3F,EAAY,IACZ/L,EAAMiB,YA2BF,6B,8FChDhB,SAAS4Q,GAASC,GAEd,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIF,EAAI9Q,OAAQgR,IAC7BD,EAAOD,EAAIG,WAAWD,KAAOD,GAAQ,GAAKA,GAE7C,OAAOA,EAGX,SAASG,GAASF,GACd,IAAIG,GAAS,SAAJH,GACJI,SAAS,IACTjG,cAEL,MAAO,QAAQkG,UAAU,EAAG,EAAIF,EAAEnR,QAAUmR,EAkBjCpP,0BAAQ,SAACC,GAAD,MAAY,CAC/BsP,KAAMtP,EAAMsP,KAAKjI,QADNtH,EAff,SAAqB/C,GAKjB,OADA0C,QAAQuH,IAAIjK,EAAMuS,QAASC,MAAMC,QAAQzS,EAAMuS,UAE3C,qBAAKjS,UAAU,eAAf,SACKN,EAAMuS,UAAYC,MAAMC,QAAQzS,EAAMuS,SAAWvS,EAAMuS,QAAU,IAAIpR,KAAI,SAACuR,GACvE,IAPKnH,EAODoH,GAPCpH,EAOkBmH,EANxB1S,EAAMsS,KAAK1M,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMA,KAAI,IAOpC,OAAO,cAACqH,GAAA,EAAD,CAAQrR,MAAO,CAACsR,gBAAiB,IAAKX,GAASL,GAASc,EAAOvO,QAA/D,SAAyEuO,EAAOvO,KAAK0O,MAAM,KAAK3R,KAAI,SAACC,GAAD,OAAOA,EAAEiR,UAAU,EAAG,gB,gBC0FlItP,0BAAQ,SAACC,GAAD,MAAY,CAC/BsP,KAAMtP,EAAMsP,KAAKjI,QADNtH,EAjHf,SAAqB/C,GAAO,IAAD,EACSC,IAAMC,SAAS,CAC3C,CACIqL,GAAI,EACJ9H,MAAO,UACPsP,MAAO,IAEX,CACIxH,GAAI,EACJ9H,MAAO,UACPsP,MAAO/S,EAAMgT,MAAM7E,MAAMvI,QAAO,SAACC,GAAD,MAAmB,aAAZA,EAAEzD,QAAqC,WAAZyD,EAAEzD,UAAqBjB,KAAI,SAACC,GAAD,MAAQ,CACjGmK,GAAInK,EAAEmK,GACN9H,MAAOrC,EAAEuE,KAAK/D,WAGtB,CACI2J,GAAI,EACJ9H,MAAO,QACPsP,MAAO,IAEX,CACIxH,GAAI,EACJ9H,MAAO,OACPsP,MAAO,MAvBQ,mBACfE,EADe,KACNC,EADM,KA8DvB,OACI,cAAC,KAAD,CACIC,WAAY,SAACC,GACT,OACI,sBAAK7S,QAAS,WACPP,EAAMO,SACLP,EAAMO,QAAQ6S,IAEnB9S,UAAU,oBAJb,UAKI,qBAAKA,UAAU,2BAAf,SACK8S,EAAK3P,QAGT2P,EAAKzN,KAAK4J,SAAW8D,KAAY,sBAAK9R,MAAO,CAAC+R,UAAW,QAAxB,kBACpB9D,KAAO,IAAIC,KAAyB,IAApB2D,EAAKzN,KAAK4J,UAAiBG,OAAO,iBAEhE,8BACK0D,EAAKG,cAEV,cAAC,GAAD,CAAahB,SAAWC,MAAMC,QAAQW,EAAKb,UAAoC,iBAAjBa,EAAKb,UAA6Ba,EAAKb,SAAV,SAKvGiB,cAAe,SAACJ,EAAMtF,EAAQ2F,GAC1B/Q,QAAQuH,IAAI6D,EAAQ2F,GACpB,IAAIC,EAAOT,EAAQU,QAEfC,EAASF,EAAKvS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQiK,EAAO+F,cAC9CC,EAAOJ,EAAKvS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQ4P,EAAYM,YAEjDC,EAAUN,EAAKE,GAAQb,MAAMkB,OAAOnG,EAAOoG,aAAc,GAC7DR,EAAKI,GAAMf,MAAMkB,OAAOR,EAAYU,WAAY,EAAGH,EAAQ,IAGxDhU,EAAMoU,gBAAgBpU,EAAMoU,eAAehB,EAAMpT,EAAMqU,SAASzO,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMkI,EAAYM,cAAY,GAAG3R,QACjHpC,EAAM+D,UAAS/D,EAAM+D,SAAS2P,GACjCR,EAAWQ,IAEfY,gBAAiB,SAAC7H,EAAKqB,EAAQ2F,GAC3B,IAAIC,EAAOT,EAAQU,QAEfK,EAAUN,EAAKO,OAAOnG,EAAOoG,aAAc,GAAG,GAClDR,EAAKO,OAAOR,EAAYU,WAAY,EAAGH,GACpChU,EAAM+D,UAAS/D,EAAM+D,SAAS2P,GACjCR,EAAWQ,IAEf5Q,SAAU,CAACmQ,QAlFA,WACf,IAAIoB,EAAW,GAKf,OAJGrU,EAAMqU,WACLA,EAAWrU,EAAMqU,UAAY,IAG1BA,EAASlT,KAAI,SAACoT,GACJA,EAAIhJ,GAAjB,IAEIwH,EAAQ/S,EAAMgT,MAAM7E,MAAMvI,QAAO,SAACC,GAClC,OAAOA,EAAEF,KAAKvD,QAAUmS,EAAInS,WAC1B,GAGN,OADAM,QAAQuH,IAAI8I,GACL,2BACAwB,GADP,IAEIxB,MAAOA,EAAMyB,MAAK,SAAC3O,EAAG4O,GAKlB,OAHK5O,EAAEF,MAAQE,EAAEF,KAAK4J,UAAU1J,EAAEF,KAAK4J,QAAU8D,KAC5CoB,EAAE9O,MAAQ8O,EAAE9O,KAAK4J,UAAUkF,EAAE9O,KAAK4J,QAAU8D,KAE1CxN,EAAEF,KAAK4J,QAAUkF,EAAE9O,KAAK4J,WAChCpO,KAAI,SAACC,GACJ,IAAIsT,EAAU1U,EAAMgT,MAAMhF,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEV,QAAU/D,EAAEmK,MAAIpK,KAAI,SAAC0J,GAAD,OAAO7K,EAAMgT,MAAM7E,MAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMV,EAAEiD,UAAQ,MACjJ,OAAO,2BACgB1M,GADvB,IAEoBqC,MAAOrC,EAAEuE,KAAK/D,MACd2R,YAAamB,EAAQ1T,OAAS,GAAK0T,EAAQ,GAAG/O,KAAK/D,gBAuDvC2L,S,eCnHjB,QACXoH,eACAC,QCYW,SAAiB5U,GAAO,IAAD,EAECC,IAAMC,UAAS,GAFhB,mBAE1B+F,EAF0B,KAEdC,EAFc,OAGNjG,IAAMC,SAAS,IAHT,mBAG1BuR,EAH0B,KAGnBoD,EAHmB,KAYlC,OAPA5U,IAAMqC,WAAU,WACTtC,EAAM6K,IACLnI,QAAQuH,IAAI,IAAKjK,EAAM6K,EAAEwF,UACzBwE,EAAS7U,EAAM6K,EAAEwF,SAAR,aAAmC,OAEjD,CAACrQ,EAAM6K,IAGN,sBAAKtJ,MAAO,CAACiD,KAAM,EAAGG,QAAS,QAA/B,UACI,cAAC,KAAD,CAAalB,MAAOzD,EAAMiL,QAAQ7G,KAAMqN,MAAOA,IAC/C,cAAC,GAAD,CAAYG,SAAU,SAACnL,GACnB,IAAI,IAAIO,KAAKP,ELGF+E,EKFIxL,EAAMiL,QAAQM,GLEPuJ,EKFW9N,ELG/CkD,GAAOgB,OAAO,CACZC,SAAUT,cAAF,MASRU,UAAW,CACTI,UAAWA,EACXsJ,OAAQA,KAETnK,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKoP,uBAAqBpK,MAAK,SAACC,GAC7ClI,QAAQuH,IAAIW,MAhBQ,IAACY,EAAWsJ,GKEvBhU,KAAMmF,EAAYhF,QAAS,kBAAMiF,GAAW,MAC/C,cAAC6B,GAAA,EAAD,CAAKxG,MAAO,CAAC0D,SAAU,WAAY+C,OAAQ,GAAIC,MAAO,IAAKzG,MAAM,UAAUjB,QAAS,kBAAM2F,GAAW,IAArG,SACI,cAACgC,EAAA,EAAD,UDlCZ8M,QE+JWjS,kBAAQ,MAAM,SAACM,GAAD,MAAe,CAC1ChB,UAAW,SAACD,GAAD,OAAYiB,EAAShB,GAAUD,QAD7BW,CAEX4K,cApIJ,SAAiB3N,GACAC,IAAMqD,WAAWzB,GAAzBI,KADe,IAAD,EAGsBhC,IAAMC,SAAS,MAHrC,mBAIjBuK,GAJiB,UAITkB,KAAGC,MAAMU,OAAOT,SAASvH,OAAQ,CAACwH,mBAAmB,KAJ5C,EAKc7L,IAAMC,SAAS,QAL7B,gCASeD,IAAMC,SAAS,CAAC,UAT/B,gCAWgBD,IAAMC,SAAS,KAX/B,gCAYKD,IAAMC,SAAS,OAZpB,gCAgBiBD,IAAMC,SAAS,KAhBhC,mBAgBX+U,EAhBW,KAoGbC,GApGa,KAoGH,SAACC,GACX1K,IAAOA,EAAQ,IACnBA,EAAM0K,KAAOA,EACbnV,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM6L,SAASU,SAArC,YAAiDZ,KAAGa,UAAU/B,OAG5D0K,EAAO1K,EAAM0K,MAAQ,SAEzB,OAEI,sBAAK5T,MAAO,CAAC6T,QAAS,EAAGzQ,QAAS,OAAQH,KAAM,EAAGS,SAAU,WAAYL,cAAe,SAAUwK,MAAO,oBAAzG,UAEI,sBAAK9O,UAAU,cAAf,UACE,wBAGA,eAAC+E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQ9B,QAAiB,UAAR2R,GAAoB,YAAa5U,QAAS,kBAAM2U,EAAQ,WAAzE,SAAoF,cAACG,GAAA,EAAD,MACpF,cAAC/P,EAAA,EAAD,CAAQ9B,QAAiB,QAAR2R,GAAkB,YAAa5U,QAAS,kBAAM2U,EAAQ,SAAvE,SAAgF,cAAC,KAAD,MAChF,cAAC5P,EAAA,EAAD,CAAQ9B,QAAiB,QAAR2R,GAAkB,YAAa5U,QAAS,kBAAM2U,EAAQ,SAAvE,SAAgF,cAACI,GAAA,EAAD,YAGpF,cAAC7P,EAAA,EAAD,IACA,qBAAKnF,UAAU,iBAAf,SArCW,WAEjB,OADWmK,EAAM0K,MAAQ,UAEvB,IAAK,SACH,OAtEF,cAAC,GAAD,CACE5U,QAAS,SAAC6S,GACRpT,EAAMiO,OAAOsH,YAAYnC,EAAK7H,KAEhC6I,eAAgB,SAAChB,EAAMhR,GACrBpC,EAAMiO,OAAOM,WAAW6E,EAAK7H,IAAI,SAAC2C,GAChC,MAAO,CAACvI,KAAM,CACZvD,OAAQA,QAId2B,SAAU,SAAC2P,KASXW,SAAU,CACR,CACE9I,GAAI,EACJ9H,MAAO,UACPrB,OAAQ,WAEV,CACEmJ,GAAI,EACJ9H,MAAO,mBACPrB,OAAQ,cAEV,CACEmJ,GAAI,EACJ9H,MAAO,QACPrB,OAAQ,eAEV,CACEmJ,GAAI,EACJ9H,MAAO,OACPrB,OAAQ,aAGZjB,IAAK8T,EACLjC,MAAO,CAAC7E,MAAOnO,EAAMiO,OAAOE,MAAOH,MAAOhO,EAAMiO,OAAOD,SA4BzD,IAAK,OACH,OAxBYhO,EAAMiO,OAAOE,MAAMvI,QAAO,SAACxE,GAAD,OAAoE,GAA7DpB,EAAMiO,OAAOD,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEV,QAAU/D,EAAEmK,MAAIvK,UAIlG,wBAqBA,IAAK,OACH,OAhBF,sBAAKV,UAAU,YAAf,UACA,cAAC,KAAD,IACA,cAAC,KAAD,OAeA,QACE,QA4BGkV,YFxJTC,QGPW,SAAiBzV,GAC5B,OACI,0B,+BCEO,SAAS0V,GAAS1V,GAE7B,IAAM2V,EAAS1V,IAAM2V,aAAY,SAAAC,GAC5B7V,EAAM2V,QAAQ3V,EAAM2V,OAAOE,MAHG,EAKiBC,aAAY,CAACH,SAAQI,QAAS/V,EAAM+V,UAAW,IAA5FC,EAL4B,EAK5BA,aAAcC,EALc,EAKdA,cAAeC,EALD,EAKCA,aAEpC,OACI,8CAAK5V,UAAS,oBAAe4V,GAAgB,WAAgBF,KAA7D,cACI,qCAAWC,MACVjW,EAAM8C,SAASoT,O,uBCuMbnT,0BAAQ,SAACC,GAAD,MAAY,CAC/BE,KAAMC,YAAWH,EAAMC,KAAKG,OAC5BkP,KAAMtP,EAAMsP,KAAKjI,SACjB,SAAChH,GAAD,MAAe,CACf6N,WAAY,SAACC,EAAMC,GAAP,OAAc/N,EAAS6N,GAAWC,EAAMC,QAJzCrO,CAKX4K,cA5LJ,SAAoB3N,GAAO,IAAD,EACAC,IAAMC,SAAS,IADf,mBACdiW,EADc,KACVC,EADU,OAEMnW,IAAMC,SAAS,IAFrB,mBAEduD,EAFc,KAEP4S,EAFO,OAGkBpW,IAAMC,SAAS,IAHjC,mBAGdqT,EAHc,KAGD+C,EAHC,OAIUrW,IAAMC,SAAS,MAJzB,mBAIdqP,EAJc,KAILgH,EAJK,OAKUtW,IAAMC,SAAS,IALzB,mBAKdqS,EALc,KAKLiE,EALK,OAMkBvW,IAAMC,SAAS,IANjC,mBAMduW,EANc,KAMDC,EANC,OAQoBzW,IAAMC,SAAS,MARnC,mBAQdyW,EARc,KAQAC,EARA,KAUtB3W,IAAMqC,WAAU,WACTtC,EAAM6W,MAAQ7W,EAAM6W,KAAKlR,OACrB3F,EAAM6W,KAAKtL,IAAI6K,EAAMpW,EAAM6W,KAAKtL,IAChCvL,EAAM6W,KAAKlR,KAAK/D,OAAOyU,EAASrW,EAAM6W,KAAKlR,KAAK/D,OAChD5B,EAAM6W,KAAKlR,KAAK4N,aAAa+C,EAAetW,EAAM6W,KAAKlR,KAAK4N,aAC/D7Q,QAAQuH,IAAI,UAAWjK,EAAM6W,KAAKtE,SAC/BvS,EAAM6W,KAAKtE,SAASiE,EAAWhE,MAAMC,QAAQzS,EAAM6W,KAAKtE,SAAWvS,EAAM6W,KAAKtE,QAAU,IACxFvS,EAAM6W,KAAKJ,aAAaC,EAAe1W,EAAM6W,KAAKlR,KAAK8Q,aAAe,IACtEzW,EAAM6W,KAAKlR,KAAK4J,SAASgH,EAAW/G,KAAO,IAAIC,KAA+B,IAA1BzP,EAAM6W,KAAKlR,KAAK4J,cAE5E,CAACvP,EAAM6W,OAEV,IAAMhP,EAAS,WACX,IAAIgP,EAAO,CACPtL,GAAI4K,EACJ1S,MAAOA,EACP8P,YAAaA,EACbhB,QAAS,YAAI,IAAIvG,IAAIuG,KAAa,GAClChD,QAASA,GAAWA,EAAQuH,UAAY,KAKzC9W,EAAM6H,SACL7H,EAAM6H,OAAOgP,GACb7W,EAAMiB,YA8BR8V,EAAa,SAAC7T,GAChBR,QAAQuH,IAAIkM,GAIZ,IAAIa,EAAIzE,EAAQoB,QAChBjR,QAAQuH,IAAI+M,EAAG9T,EAAM8T,EAAEnT,QAAQX,IAC5B8T,EAAEnT,QAAQX,IAAS,GAClB8T,EAAE/C,OAAO+C,EAAEnT,QAAQX,GAAO,GAC1BR,QAAQuH,IAAI,cAEZ+M,EAAE9P,KAAKhE,GAEPR,QAAQuH,IAAR,YAAgB,IAAI+B,IAAIgL,KACxBR,EAAW,YAAI,IAAIxK,IAAIgL,MAM/B,OAEI,cAACtQ,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAnD,SACI,cAACyU,GAAD,CAAUC,OAjDK,SAAClE,GACpB,GAAGA,EAAMzQ,OAAS,EAAE,CAChB,IAAI,IAAIgR,EAAI,EAAGA,EAAIP,EAAMzQ,OAAQgR,IAC7BhS,EAAMkR,WAAWO,EAAMO,IAAI,SAACiF,GACxBjX,EAAMiO,OAAOiJ,WAAWD,EAAQtF,SAAUsF,EAAQE,KAClDnX,EAAMiO,OAAOM,WAAW4H,GAAI,SAACjI,GACzB,MAAO,CAACvI,KAAM,CACV8Q,aAAcvI,EAAKvI,KAAK8Q,aAAe,IAAI3J,OAAO,CAAC,CAAC1I,KAAM6S,EAAQtF,SAAUwF,IAAKF,EAAQE,YAGjGT,EAAeD,EAAY3J,OAAO,CAAC,CAC/B1I,KAAM6S,EAAQtF,SACdwF,IAAKF,EAAQE,WAIzBzU,QAAQuH,IAAIwH,KAiCsBsE,SAAO,EAAzC,SACC,SAACG,GAAD,OACG,qCACJ,8BAAMA,GACF,qBAAK3U,MAAO,CACR0D,SAAU,WACVN,QAAS,OACTwK,WAAY,SACZiI,eAAgB,SAChBC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNtP,MAAO,EACPD,OAAQ,EACR6K,gBAAiB,4BAClBvS,UAAU,eAXb,SAYI,cAACoB,EAAA,EAAD,CAAY8B,QAAQ,KAAKjC,MAAO,CAACiW,WAAY,QAA7C,iCAGR,cAAC5Q,EAAA,EAAD,UACI,cAAC/B,EAAA,EAAD,CAAWhC,MAAOY,EAAOM,SAAU,SAACvD,GAAD,OAAO6V,EAAS7V,EAAE2E,OAAOtC,QAAQ8D,WAAS,EAAC/E,MAAM,YAExF,eAACiF,GAAA,EAAD,CAAevG,UAAU,uBAAzB,UACI,sBAAKA,UAAU,YAAf,UACI,cAACuE,EAAA,EAAD,CACIhC,MAAO0Q,EACPxP,SAAU,SAACvD,GAAD,OAAO8V,EAAe9V,EAAE2E,OAAOtC,QACzC8D,WAAS,EACT/E,MAAM,cACNyN,KAAM,EAAGoI,WAAS,EAACC,QAAS,IAEhC,gCACI,cAAChW,EAAA,EAAD,CAAYH,MAAO,CAACiW,WAAY,OAAQ/S,UAAW,GAAIjB,QAAQ,YAA/D,yBACCiT,EAAYtV,KAAI,SAACC,GAAD,OACb,8BAAMA,EAAEgD,aAGhB,gCACI,cAAC1C,EAAA,EAAD,CAAY8B,QAAQ,YAApB,qBACA,cAAC,GAAD,CAAa+O,QAASA,UAI9B,sBAAKjS,UAAU,eAAf,UACI,cAACgF,EAAA,EAAD,CACI/E,QAAS,WACLwW,EAAW/W,EAAMkD,KAAKqI,KAE1B/J,MAAO,YAAI+Q,GAAS1O,QAAQ7D,EAAMkD,KAAKqI,KAAO,EAAI,GAAK,UACvD/H,QAAQ,YALZ,SAKyB,YAAI+O,GAAS1O,QAAQ7D,EAAMkD,KAAKqI,KAAO,EAAI,QAAU,SAC9E,cAACjG,EAAA,EAAD,CAAQ9D,MAAM,UAAUgC,QAAQ,YAAYjD,QAAS,SAACC,IA/E5C,SAACA,GAEvBoW,EAAiBD,EAAiC,KAAlBnW,EAAEG,eA8ElBgX,CAAkBnX,IADtB,qBAGA,eAACK,EAAA,EAAD,CACII,QAAS,kBAAM2V,EAAgB,OAC/BgB,gBAAiB,CAACC,SAAU,MAAOC,WAAY,UAC/CC,aAAc,CAACF,SAAU,SAAUC,WAAY,UAC/ChX,KAAM6V,EACNzV,SAAUyV,EALd,UAMQ,cAAClR,EAAA,EAAD,IACJ,qBAAKlE,MAAO,CAAC6T,QAAS,GAAtB,SACA,cAACvQ,EAAA,EAAD,CAAWjD,MAAM,WAEjB,cAAC8D,EAAA,EAAD,UACK1F,EAAMsS,KAAKnR,KAAI,SAACC,GAAD,OACZ,eAAC0E,EAAA,EAAD,CAAU6G,QAAM,EAACpM,QAAS,WACvBwW,EAAW3V,EAAEmK,KADhB,UAGI,YAAIgH,GAAS1O,QAAQzC,EAAEmK,KAAO,GAAK,cAACyM,GAAA,EAAD,CAAOzW,MAAO,CAAC0W,YAAa,KAHnE,IAG2E7W,EAAEgD,gBAKzF,cAAC,KAAD,CACI7C,MAAO,CAACkD,UAAW,GACnB7C,MAAM,WACNiB,MAAO0M,EACPxL,SAAU,SAACvD,GACP+V,EAAW/V,IAEfkP,OAAQ,eACZ,cAACpK,EAAA,EAAD,CAAQ9D,MAAM,UAAUgC,QAAQ,YAAYjC,MAAO,CAACkD,UAAW,GAA/D,+BAGR,eAACmD,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAASP,EAAMiB,QAAvB,oBACA,cAACqE,EAAA,EAAD,CAAQ/E,QAASsH,EAAQrG,MAAM,UAAUgC,QAAQ,YAAjD,iC,QCCDT,0BAAQ,SAACC,EAAOkV,GAAR,MAAsB,CACzCjN,QAASjI,EAAMoH,SAASC,KAAKzE,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAM2M,EAAStL,MAAMkC,OAAOvD,SAD9DxI,EAvLf,SAAqB/C,GAAO,IACjBiC,EAAQhC,IAAMqD,WAAWzB,GAAzBI,KADgB,EAGShC,IAAMC,SAAS,IAHxB,mBAGf+K,EAHe,KAGNkF,EAHM,OAIiBlQ,IAAMC,SAAS,MAJhC,mBAIf4D,EAJe,KAIFqU,EAJE,OAMQlY,IAAMC,SAAS,MANvB,mBAMfkY,EANe,KAMHnI,EANG,OAQmBhQ,IAAMC,SAAS,MARlC,mBAQfmY,EARe,KAQDC,EARC,OAUKrY,IAAMC,SAAS,IAVpB,mBAUfiO,EAVe,KAUR4B,EAVQ,OAWK9P,IAAMC,SAAS,IAXpB,mBAWf8N,EAXe,KAWRuK,EAXQ,OAYiBtY,IAAMC,SAAS,IAZhC,mBAYfuW,EAZe,KAYFC,EAZE,KAcjBtG,EAAW,WACb,GAAGgI,EAAW,CACZ,IAAI3L,EAAM2L,EAAW/H,SACrB3N,QAAQuH,IAAI,UAAWwC,GACP,MAAbA,EAAI0B,OACL4B,EAAStD,EAAI0B,MAAMhN,KAAI,SAACC,GAAD,OAAOgG,OAAOC,OAAO,GAAIjG,OAElC,MAAbqL,EAAIuB,OACLuK,EAAS9L,EAAIuB,MAAM7M,KAAI,SAACC,GAAD,OAAOgG,OAAOC,OAAO,GAAIjG,OAE5B,MAAnBqL,EAAIgK,aACLC,EAAejK,EAAIgK,YAAYtV,KAAI,SAACC,GAAD,OAAOgG,OAAOC,OAAO,GAAIjG,SAMpEnB,IAAMqC,WAAU,WACZ,GAAGtC,EAAMiL,SAAWjL,EAAMiL,QAAQjK,OAAS,EAAE,CACtCoX,GAAYA,EAAW9H,UAAUF,GAEpC,IAAInF,EAAUjL,EAAMiL,QAAQ,GACxB+E,EAAM/N,EAAKuO,OAAL,eAAoBvF,EAAQM,KACtCyE,EAAIS,QAAQL,GACZH,EAAOD,GACPG,EAAWnQ,EAAMiL,QAAQ,IAEzB,IAAIwB,EAAMuD,EAAIK,SACE,MAAb5D,EAAI0B,OAAe4B,EAAStD,EAAI0B,OACnB,MAAb1B,EAAIuB,OAAeuK,EAAS9L,EAAIuB,OACb,MAAnBvB,EAAIgK,aAAqBC,EAAejK,EAAIgK,gBAEpD,CAACzW,EAAMiL,UAEV,IAAMuN,EAAY,SAACrK,GACZiK,GACCA,EAAWK,IAAI,QAAStK,GAE5B4B,EAAS5B,IAGPuK,EAAY,SAAC1K,GACZoK,GACCA,EAAWK,IAAI,QAASzK,GAE5BuK,EAASvK,IAWPrK,EAAO,CAAC,OAAQ,WAAY,OAAQ,SAE1C,OACI,cAAC,KAAD,CAAc0J,MAAO,CACjBc,MAAOA,EACPH,MAAOA,EACP2K,UAAW,CAACC,GACZnC,YAAaA,EACbS,WAAY,SAAC9S,EAAM+S,IAhBH,SAACV,GAClB2B,GACCA,EAAWK,IAAI,cAAehC,GAElCC,EAAeD,GAaToC,CAAgB,YAAI,IAAI7M,IAAIyK,EAAY3J,OAAO,CAAC,CAAC1I,OAAM+S,aAEzD5B,YAAa,SAAChK,GACZ,IAAI2C,EAAOC,EAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMA,KAAI,GAC3C+M,EAAgB,CACd/M,GAAIA,EACJ9H,MAAOyK,EAAKvI,KAAK/D,MACjB2R,YAAarF,EAAKvI,KAAK4N,YACvBhE,QAASrB,EAAKvI,KAAK4J,QACnBgD,QAASrE,EAAKqE,QACdkE,YAAavI,EAAKvI,KAAK8Q,eAG3BqC,UAAW,SAAC5K,GAAD,OAAUsK,EAAUrK,EAAMrB,OAAOoB,KAC5C6K,UAAW,SAACtP,GAAD,OAAUiP,EAAU1K,EAAMlB,OAAOrD,KAC5CuP,aAAc,SAACC,GACbP,EAAU1K,EAAMpI,QAAO,SAACC,GAAD,OAAOoT,EAAO9X,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQgC,EAAE0F,IAAM,OAExE2N,aAAc,SAACC,GACbX,EAAUrK,EAAMvI,QAAO,SAACC,GAAD,OAAOsT,EAAOhY,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQgC,EAAE0F,IAAM,OAExE6N,aAAc,SAAC7N,EAAI2C,GACjBxL,QAAQuH,IAAI,eACZ,IAAIoP,EAAKlL,EAAMhN,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQ0H,GACpC+N,EAAInL,EAAMwF,QAEdjR,QAAQuH,IAAIiE,GAQZoL,EAAED,GAAME,qBAAUD,EAAED,GAAKnL,GAPzB,SAAoBsL,EAAUC,GAE5B,GADA/W,QAAQgX,MAAM,aAAcF,EAAUC,GAClCjH,MAAMC,QAAQ+G,GAChB,OAAOC,KAMX/W,QAAQuH,IAAIqP,EAAED,IACdb,EAAUc,IAEZK,aAAc,CACZC,WAAY,SACZC,QAAS,MACTC,MAAO,UACPC,SAAU,SAGZC,aAAc,SAAC7L,GAAD,OAAWqK,EAAUrK,IACnC8L,aAAc,SAACjM,GAAD,OAAW0K,EAAU1K,KArDvC,SAuDK,SAACC,GAAD,OACC,qCACF,cAAC,GAAD,CACEhD,QAASjL,EAAMiL,QACfpD,OAAQ,SAACgP,GACPnU,QAAQuH,IAAI4M,GACZ5I,EAAOM,WAAWsI,EAAKtL,IAAI,SAAC2C,GACxB,IAAIgM,EAAS,CAACvU,KAAM,IASpB,OAPGkR,EAAKpT,QAAOyW,EAAOvU,KAAK/D,MAAQiV,EAAKpT,OACrCoT,EAAKtD,cAAa2G,EAAOvU,KAAK4N,YAAcsD,EAAKtD,aACjDsD,EAAKtH,UAAS2K,EAAOvU,KAAK4J,QAAUsH,EAAKtH,SAC5C7M,QAAQuH,IAAI4M,EAAKtE,SACdsE,EAAKtE,UAAS2H,EAAO3H,QAAWsE,EAAKtE,SAExC7P,QAAQuH,IAAIiQ,EAAQrD,EAAKtL,IAClB2O,KAEX5B,EAAgB,OAGlBxX,KAAMuX,EACNxB,KAAMwB,EAAejR,OAAOC,OAAO,GAAI8G,EAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAM8M,EAAa9M,MAAI,IAAM,GAC1FtK,QAAS,kBAAMqX,EAAgB,SACrC,cAAC,EAAD,CACI3U,KAAMA,EACNM,YAAa,SAACmI,GACV+L,EAAe/L,GACfpM,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM4M,MAAMC,IAAlC,YAAyCT,EAAIxI,iBAEjDE,YAAaA,GAAe9D,EAAM6L,SAASU,SAAS4N,QAAxB,UAAmCna,EAAM4M,MAAMC,IAA/C,KAAuD,IACnFpJ,MAAOwH,EAAQ7G,OACnB,cAACb,EAAA,EAAD,CAAOhC,MAAO,CAACiD,KAAM,EAAG4K,MAAO,OAAQ1K,OAAQ,qBAAsBD,UAAW,GAAIE,QAAS,QAA7F,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyV,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,SAA6BwN,OAAQ,SAACra,GAC7C,OAAO,cAAC,GAAYgV,QAAb,2BAAyBhV,GAAzB,IAAgC6K,EAAGuN,EAAYnN,QAASA,QAEnE,cAAC,IAAD,CAAOmP,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,aAAiCwN,OAAQ,SAACra,GACjD,OAAO,cAAC,GAAY2U,YAAb,2BAA6B3U,GAA7B,IAAoC6K,EAAG7K,EAAM6K,EAAGI,QAASA,QAEpE,cAAC,IAAD,CAAOmP,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,SAA6BwN,OAAQ,SAACra,GAC7C,OAAO,cAAC,GAAYyV,QAAb,2BAAyBzV,GAAzB,IAAgCiL,QAASA,QAEpD,cAAC,IAAD,CAAOmP,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,UAA8BwN,OAAQ,SAACra,GAC9C,OAAO,cAAC,GAAY4U,QAAb,2BAAyB5U,GAAzB,IAAgC6K,EAAGuN,EAAYnN,QAASA,sB,qBC1L7EqP,I,wBAAuBC,yBAAcC,OAC5B,SAASnF,GAAUrV,GAI9B,OACI,qBAAKM,UAAU,iBAAf,SACI,eAACga,GAAD,CACIG,WAAW,EACXC,UAAU,EACVpa,UAAU,SACViB,MAAO,CAACmD,OAAQ,sBAChBiW,UAAW,GACXjW,OAAQ4H,OAAOsO,YAAc,GAC7BC,iBAAkB,CAAC,EAAG,GACtBC,OAbG,CACX,CAAC9I,EAAG,IAAK5Q,EAAG,EAAGyJ,EAAG,EAAGkQ,EAAG,EAAGC,EAAG,IActBtH,KAAM,GAVV,UAWI,cAACnQ,EAAA,EAAD,CAAe0X,YAAW,CAACF,EAAG,EAAGC,EAAG,EAAG5Z,EAAG,EAAGyJ,EAAG,GAAhD,cAAW,KACX,cAACtH,EAAA,EAAD,CAAe0X,YAAW,CAACF,EAAG,EAAGC,EAAGE,SAAS5O,OAAOsO,YAAc,IAAM,EAAGxZ,EAAG,EAAGyJ,EAAG,GAApF,cAAW,U,8ECqFZ9H,yBAAQ,MAAM,SAACM,GAAD,MAAe,CACxC6N,WAAY,SAACC,EAAMC,GAAP,OAAc/N,EAAS6N,GAAWC,EAAMC,QADzCrO,EA1Ff,SAA0B/C,GAAO,IAAD,EACAC,IAAMC,SAAS,IADf,mBACpBuR,EADoB,KACboD,EADa,OAEE5U,IAAMC,UAAS,GAFjB,mBAEpBib,EAFoB,KAEZC,EAFY,OAGMnb,IAAMC,SAAS,IAHrB,mBAGrBmb,EAHqB,KAGVC,EAHU,KAKtB3F,EAAS1V,IAAM2V,YAAN,uCAAkB,WAAOC,GAAP,SAAAhQ,EAAA,sDAC7BnD,QAAQuH,IAAI4L,GACTA,GAAiBA,EAAc7U,OAAS,GACvC6T,EAASpD,EAAM3E,OAAO+I,EAAc1U,KAAI,SAACC,GAAD,MAAQ,CAC5C+P,KAAM/P,EACNmK,GAAIgQ,qBALiB,2CAAlB,sDAWV,CAAC9J,IAhBsB,EAmBwBqE,aAAY,CAACH,WAA1DK,EAnBqB,EAmBrBA,aAAcC,EAnBO,EAmBPA,cAAeC,EAnBR,EAmBQA,aAuBpC,OACI,eAACxP,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAnD,UACI,cAAC2F,EAAA,EAAD,2BACA,cAACC,GAAA,EAAD,UACI,8CAAKtF,MAAO,CACRia,UAAW,IACXC,UAAW,IACXC,UAAW,SACXC,aAAc,EACdvG,QAAS,EACTwG,OAAO,cAAD,OAAgB1F,EAAe,OAAS,UAC3CF,KAPP,cAQI,qCAAWC,MACX,cAACvQ,EAAA,EAAD,UACK+L,EAAMzQ,OAAS,EAAIyQ,EAAMtQ,KAAI,SAACC,EAAGiY,GAAJ,OAC1B,eAACvT,EAAA,EAAD,CAAUvE,MAAO,CAACoD,QAAS,OAAQyS,eAAgB,iBAAnD,UACG,sBAAK7V,MAAO,CAACoD,QAAS,OAAQwK,WAAY,UAA1C,UACCkM,EAAUja,EAAEmK,KAAO,cAAC,KAAD,CAASnH,KAAK,kBAChChD,EAAE+P,KAAK/M,QAER,cAAC/D,EAAA,EAAD,CAAYE,QAAS,SAACsb,GAClBA,EAAInb,kBACJ,IAAIob,EAAIrK,EAAMkC,QACdmI,EAAE7H,OAAOoF,EAAI,GACbxE,EAASiH,IAJb,SAMI,cAACC,GAAA,EAAD,YAIR,sBAAKxa,MAAO,CAACqD,cAAe,SAAUJ,KAAM,EAAGG,QAAS,OAAQwK,WAAY,SAAUiI,eAAgB,UAAtG,UACI,cAAC4E,GAAA,EAAD,CAAQza,MAAO,CAAC0a,SAAU,MAC1B,mEAQpB,eAACrU,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAASP,EAAMiB,QAAvB,oBACA,cAACqE,EAAA,EAAD,CAAQ8I,SAAU+M,EAAQ5a,QA/DjB,WACjB6a,GAAU,GACVc,KAAMC,KAAK1K,GAAO,SAAC/E,EAAM0E,GACrB,IAAIgL,EAAIhV,OAAOC,OAAO,GAAIgU,GAC1Be,EAAE1P,EAAKnB,KAAM,EACb7I,QAAQuH,IAAI,YAAaoR,GACzBC,EAAac,GACbpc,EAAMkR,WAAWxE,EAAKyE,MAAM,WACxBiL,EAAIhV,OAAOC,OAAO,GAAIgU,GACtB3Y,QAAQuH,IAAI,sBACZmS,EAAE1P,EAAKnB,KAAM,EACb+P,EAAac,GACbhL,UAEL,SAACiL,GACAjB,GAAU,GACVvG,EAAS,IACT7U,EAAMiB,cA8C+CO,MAAM,UAAUgC,QAAQ,YAAzE,6B,4CCvFD,SAAS8Y,GAAgBtc,GAAO,IAAD,EACAC,IAAMC,SAAS,IADf,mBAClCqc,EADkC,KACpBC,EADoB,OAGVvc,IAAMC,SAAS,IAHL,mBAGlCuc,EAHkC,KAGzBC,EAHyB,KAK1Czc,IAAMqC,WAAU,WACZiP,KAAgB5G,MAAK,SAAC6G,GAClBkL,EAAWlL,EAAWrQ,KAAI,SAACC,GAAD,MAAQ,CAC9Bub,KAAMvb,EAAEwb,aACRC,GAAI,CAACzb,EAAE0b,wBAGhB,IASH,OACI,eAACpW,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAnD,UACI,eAAC2F,EAAA,EAAD,sBAAsB5G,EAAMyG,UAAYzG,EAAMyG,SAASkL,YACvD,eAAC9K,GAAA,EAAD,CAAetF,MAAO,CAACoD,QAAS,OAAQwK,WAAY,UAApD,UACI,cAACtK,EAAA,EAAD,CACI8B,WAAS,EACTyH,UAAQ,EACRxM,MAAM,OACNiB,MAAO7C,EAAMyG,UAAYzG,EAAMyG,SAASsW,UAAU5Q,gBACtD,cAAC6Q,GAAA,EAAD,CAASzb,MAAO,CAACI,WAAY,EAAGsW,YAAa,KAC7C,eAACgF,GAAA,EAAD,CAAatW,WAAS,EAAtB,UACI,cAACuW,GAAA,EAAD,iBACA,cAACC,GAAA,EAAD,CAAQta,MAAO0Z,EAAcxY,SAAU,SAACvD,GACpCgc,EAAgBhc,EAAE2E,OAAOtC,QAC1B8D,WAAS,EAFZ,SAGK3G,EAAMyG,WAAagW,EAAQ7W,QAAO,SAACC,GAAD,OAAOA,EAAE8W,MAAQ3c,EAAMyG,SAASsW,aAAW,IAAM,CAACF,GAAI,KAAKA,GAAG1b,KAAI,SAACC,GAAD,OACjG,cAACC,EAAA,EAAD,CAAUwB,MAAOzB,EAAjB,SAAqBA,EAAE+K,2BAMvC,eAACvE,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAASP,EAAMiB,QAAvB,oBACA,cAACqE,EAAA,EAAD,CAAQ/E,QA/BJ,WbuBO,IAACuU,EAAQgI,EAARhI,EatBR9U,EAAMyG,SAAS8E,GbsBCuR,EatBGP,EAAa3Y,cbuBlDsG,GAAOgB,OAAO,CACZC,SAAUT,cAAF,MAQRU,UAAW,CACT0J,SACAgI,kBAEDnS,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKyX,eanChBpd,EAAMiB,UACNub,EAAgB,KA4BkBhb,MAAM,UAAUgC,QAAQ,YAAlD,yB,QCgHDT,0BAAQ,SAACC,GAAD,MAAY,CACjCyO,MAAOzO,EAAMyO,MAAMpH,SACjB,SAAChH,GAAD,MAAe,CACjBiO,QAAS,SAACH,GAAD,OAAU9N,EAASiO,GAAQH,KACpCkM,SAAU,kBAAMha,GdvET,SAACA,EAAU6J,GAChB,OAAOhD,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAcJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK8L,SAAO9G,MAAK,SAACC,GACjCvH,EAAS,CAACmD,KAAM+D,GAAiBkH,MAAO7G,cckD/B7H,EA7If,SAAe/C,GAAO,IAAD,EACeC,IAAMC,SAAS,MAD9B,mBACXod,EADW,KACDC,EADC,OAEgBtd,IAAMC,UAAS,GAF/B,mBAEX+F,EAFW,KAECC,EAFD,OAGYsX,sBAAYvM,IAHxB,mBAGXC,EAHW,KAGEvL,EAHF,KAGEA,KAHF,EAImB1F,IAAMC,SAAS,MAJlC,mBAIXud,EAJW,KAICC,EAJD,OAKezd,IAAMC,SAAS,MAL9B,mBAKXyd,EALW,KAKGC,EALH,KAObjI,EAASC,sBAAW,uCAAC,WAAOC,GAAP,SAAAhQ,EAAA,sDACtBgQ,GAAiBA,EAAc7U,OAAS,IACzC0B,QAAQuH,IAAI4L,GACZ3E,EAAW,CAAC9F,UAAW,CAAC+F,KAAM0E,EAAc,MAAMlL,MAAK,SAACC,GACnDA,EAAEjF,MAAQiF,EAAEjF,KAAKuL,aAAetG,EAAEjF,KAAKuL,WAAWG,WACnDrR,EAAMsR,QAAQ1G,EAAEjF,KAAKuL,WAAWC,UALb,2CAAD,sDAWvB,CAACxL,IAlBe,EAqBiCmQ,aAAY,CAACH,SAAQI,SAAS,IAA9CG,GArBjB,EAqBZF,aArBY,EAqBEC,cArBF,EAqBiBC,cArBjB,EAuBSjW,IAAMC,SAAS,IAvBxB,gCAwBED,IAAMC,SAAS,CAAC,MAAO,MAAO,SAA3C2d,EAxBW,oBA6BnB,OAJA5d,IAAMqC,WAAU,WACdtC,EAAMqd,aACL,IAEI,CACL,cAAC,EAAD,CACA1Z,KAAM,GACNM,YAAa,SAACmI,KAIdtI,YAAa,GACbL,MAAO,UAEP,eAACuC,GAAD,CACEzE,MAAO,CAACkD,UAAW,IACnB+B,KAAMxG,EAAMwG,KACZD,YAAavG,EAAMuG,YAHrB,UAKiB,MAAZ+W,GAAoB,cAACQ,GAAA,EAAD,CAAgBta,QAAQ,cAAcX,MAAOya,IAElE,cAAC,KAAD,CAAmBxc,KAAM6c,EAAcxM,KAAMwM,EAAc1c,QAAS,kBAAM2c,EAAQ,SAClF,cAACtB,GAAD,CAAiBxb,KAAM2c,EAAYhX,SAAUgX,EAAYxc,QAAS,kBAAMyc,EAAc,SACtF,cAAC,GAAD,CAAkB5c,KAAMmF,EAAYhF,QAAS,kBAAMiF,GAAW,MAC9D,sBAAK5F,UAAW4V,EAAe,qBAAuB,YAAtD,UACA,cAACnO,GAAA,EAAD,CAAKvG,MAAM,UAAUjB,QAAS,kBAAM2F,GAAW,IAAO3E,MAAO,CAAC+V,OAAQ,GAAIrS,SAAU,WAAYgD,MAAO,GAAID,OAAQ,IAAnH,SACE,cAACE,EAAA,EAAD,MAEF,cAAC,KAAD,CACE6V,mBAAoB,SAACT,GACnBC,EAAYD,IAEdU,cAAe,kBAAMT,EAAY,OACjCU,WAAY,SAAC9M,GACR0M,EAASha,QAAQsN,EAAK4L,YAAc,GACrCa,EAAQ,CAACjM,SAAUR,EAAK/M,KAAM+S,IAAKhG,EAAKgG,IAAK4F,UAAW5L,EAAK4L,aAEhEtL,MAAOzR,EAAMyR,kB,qwCC/FxB,ICgCI9B,GDhCEzF,GAASC,K,sBCsPApH,ICpOX4M,GDoOW5M,sBAAQ,SAACC,GAAD,MAAY,CAC/BoH,SAAUpH,EAAMoH,SAASC,KACzBiI,KAAMtP,EAAMsP,KAAKjI,KACjB6T,UAAWlb,EAAMkb,UAAU7T,SAC3B,SAAChH,GAAD,MAAe,CACf8a,WAAY,SAACC,EAAMnT,EAASoT,GAAhB,OAA4Bhb,EDxPlB,SAAC+a,EAAM5S,EAAW6S,GACxC,OAAO,SAAChb,GACR6G,GAAOgB,OAAO,CACVC,SAAUT,cAAF,MAuBdU,UAAW,CACPgT,KAAMA,EACN5S,UAAWA,EACX6S,QAASA,KAEZ1T,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKwY,cAAYxT,MAAK,SAACC,GACpCvH,EAAS,CAACmD,KAAM+D,GAAmB8T,QAASzT,QCwNKuT,CAAWC,EAAMnT,EAASoT,KAC3Ehc,UAAW,SAACD,GAAD,OAAYiB,EAAShB,GAAUD,QAN/BW,EApNf,SAAwB/C,GAAO,IACpBiC,EAAQhC,IAAMqD,WAAWzB,GAAzBI,KADmB,EAEAhC,IAAMC,SAAS,GAFf,mBAElBoe,EAFkB,KAEZC,EAFY,OAGUte,IAAMC,SAAS,GAHzB,mBAGlBse,EAHkB,KAGPC,EAHO,OAIIxe,IAAMC,SAAS,MAJnB,mBAIlBoE,EAJkB,KAIVC,EAJU,OAMAtE,IAAMC,SAAS,MANf,mBAMlBwe,EANkB,KAMZC,EANY,OAOI1e,IAAMC,UAAS,GAPnB,mBAOlB0Q,EAPkB,KAOVgO,EAPU,OAQM3e,IAAMC,SAAS,MARrB,mBAQlB2e,EARkB,KAQPC,EARO,OASE7e,IAAMC,SAAS,MATjB,mBASlB6e,EATkB,KASTC,EATS,OAUM/e,IAAMC,SAAS,MAVrB,mBAUlB+K,EAVkB,KAUTkF,EAVS,OAYkBlQ,IAAMC,SAAS,IAZjC,oBAYlB+e,GAZkB,MAYHC,GAZG,MAqM1B,OAvLAjf,IAAMqC,WAAU,WACbqN,GAAO1N,EAAKuO,OAAO,cACnB,IAsLC,eAAC9J,EAAA,EAAD,CAAQC,WAAS,EAAC7F,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAnD,UACI,cAAC2F,EAAA,EAAD,UA7BgB,WACpB,OAAO0X,GACH,KAAK,EACD,OACI,qCACA,cAACzZ,EAAA,EAAD,CACAhC,MAAOyB,EACPP,SAAU,SAACvD,GAAD,OAAO+D,EAAU/D,EAAE2E,OAAOtC,QAAQ8D,WAAS,EAAC7B,WAAY,CAC9DC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACC,EAAA,EAAD,OAClDtD,MAAM,WACT,eAAC8B,EAAA,EAAD,CAAMb,MAAO2b,EAAWza,SAAU,SAACvD,EAAGwD,GAC/BA,IAAWwa,GAAWja,EAAU,IACnCka,EAAaza,IAFjB,UAII,cAACE,EAAA,EAAD,CAAKtC,MAAM,SACX,cAACsC,EAAA,EAAD,CAAKtC,MAAM,iBAEf,cAAC6D,EAAA,EAAD,OAIR,KAAK,EACD,MAAO,mBACX,QACI,OAAO,MAMN0Z,KACL,cAACtY,GAAA,EAAD,CAAetF,MAAO,CAACoD,QAAS,OAAQC,cAAe,SAAU4W,UAAW,KAA5E,SAtGW,WACf,OAAO8C,GACH,KAAK,EACD,OACA,qCACA,cAAChQ,GAAA,EAAD,CACIzL,MAAOoI,EACPlH,SAAU,SAACvD,EAAGwD,GAAJ,OAAemM,EAAWnM,IACpC0K,QAAS1O,EAAMoK,SACfuE,eAAgB,SAAC1D,GAAD,OAAaA,EAAQ7G,MACrCyK,YAAa,SAACC,GACV,OACI,cAACjK,EAAA,EAAD,2BAAeiK,GAAf,IAAuBlN,MAAM,gBAGzC,cAAC,KAAD,CACIiB,MAAO6b,EACPhP,OAAO,aACP3L,SAAU,SAACvD,EAAGwD,GAAJ,OAAe2a,EAAQne,IACjCuO,OAAO,SACPnN,MAAM,OACN4B,QAAQ,WACZ,cAAC+D,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAUC,QAASkJ,EAAQ7M,SAAU,SAACvD,GAC3Coe,EAAUpe,EAAE2E,OAAOuC,YAEvB9F,MAAM,aACRgP,GAAU,sBAAKrP,MAAO,CAACoD,QAAS,OAAQF,UAAW,GAAzC,UACR,cAAC,KAAD,CACI5B,MAAOgc,EACP9a,SAAU,SAACvD,GAAD,OAAOse,EAASte,IAC1BoB,MAAM,aACN+E,WAAS,EACTpF,MAAO,CAAC0W,YAAa,GACrBzU,QAAQ,WACZ,cAAC,KAAD,CACIX,MAAOkc,EACPhb,SAAU,SAACvD,GAAD,OAAOwe,EAAOxe,IACxBoB,MAAM,WACN+E,WAAS,EACTpF,MAAO,CAACI,WAAY,GACpB6B,QAAQ,iBAIpB,KAAK,EACD,OAEQ,cAACkC,EAAA,EAAD,WACmB,GAAb8Y,EAAiBxe,EAAMsS,KAAOtS,EAAMke,WAAWtY,QAAO,SAACC,GAAD,OAAQvB,GAAUuB,EAAEzB,KAAKR,cAAcC,QAAQS,EAAOV,gBAAkB,KAAGzC,KAAI,SAACC,GAAD,OACnI,eAAC0E,EAAA,EAAD,WACI,cAAC2B,EAAA,EAAD,CAAUC,QAASuX,GAAc7d,EAAEmK,KAAO0T,GAAc7d,EAAEmK,IAAI9E,WAAY,EAAO1C,SAAU,SAACvD,GACxF,IAAI4e,EAAIhY,OAAOC,OAAO,GAAI4X,IAC1BG,EAAEhe,EAAEmK,IAAM,CACN9E,SAAUjG,EAAE2E,OAAOuC,QACnBlB,KAAmB,GAAbgY,EAAiB,OAAQ,aAEnC9b,QAAQuH,IAAImV,GACZF,GAAiBE,MAEpBhe,EAAEgD,aAM3B,QACI,OAAO,MAoCNib,KAEL,eAACzX,GAAA,EAAD,WACI,cAACtC,EAAA,EAAD,CAAQ/E,QAAiB,KAAR+d,EAActe,EAAMiB,QAAU,kBAAMsd,EAAQ,IAA7D,SAA0E,KAARD,EAAc,SAAW,SAC3F,cAAChZ,EAAA,EAAD,CAAQ9D,MAAM,UAAUjB,QA5LjB,WACf,GAAW,GAAR+d,EACCC,EAAQ,OACP,CAED,IAgBIe,EAAOC,EAhBPrB,EAAY,GACZ5L,EAAO,GAEX,IAAI,IAAItL,KAAKiY,GACT,GAAGA,GAAcjY,GAAGP,SAChB,OAAOwY,GAAcjY,GAAGR,MACpB,IAAK,OACD8L,EAAKpL,KAAKF,GACV,MACJ,IAAK,YACDkX,EAAUhX,KAAKF,GAO5B6X,KACCS,EAAQ9P,KAAOkP,IACTjG,IAAI,OAAQoG,EAAUW,IAAI,SAChCF,EAAM7G,IAAI,SAAUoG,EAAUW,IAAI,YAGnCT,KACCQ,EAAQ/P,KAAOkP,IAETjG,IAAI,OAAQsG,EAAQS,IAAI,SAC9BD,EAAM9G,IAAI,SAAUsG,EAAQS,IAAI,YAIpC,IAAInB,EAAU,IAAIrc,IACdyd,EAAW,CACXf,KAAMA,EAAK5H,UAAY,IACvB7L,QAASA,EACT4T,UAAWS,GAASpE,SAASoE,EAAMxI,UAAY,KAC/CiI,QAASQ,GAASrE,SAASqE,EAAMzI,UAAY,KAC7ClG,OAAQA,EACR8O,MAAO,CACHpN,KAAMA,EACN4L,UAAWA,IAOnB,GAHAG,EAAQ5F,IAAI,OAAQgH,EAASf,MAC7BL,EAAQ5F,IAAI,UAAWgH,EAASxU,SAE7B0E,GAAK,CAEJjN,QAAQuH,IAAI,sBACZ,IACI0V,EADMhQ,GAAKU,SACIsP,UAAY,GAC/Bjd,QAAQuH,IAAI0V,GACZA,EAASzY,KAAKuY,GACd9P,GAAK8I,IAAI,WAAYkH,GACrBjd,QAAQuH,IAAI0F,GAAKU,UAgBjBrQ,EAAMiB,YAgHuCuC,QAAQ,YAArD,SAA0E,KAAR8a,EAAc,OAAS,kBChOnGzO,I,QAAYC,aAAgBN,OAqEnBzM,0BAAQ,SAACC,GAAD,MAAY,CAC/B2c,SAAU3c,EAAM4c,SAASD,aACzB,SAACtc,GAAD,MAAe,CACfwc,YAAa,kBAAMxc,GF/CV,SAACA,EAAU6J,GACpBhD,GAAOO,MAAM,CACTA,MAAOC,cAAF,QAwBNC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKia,YAAUjV,MAAK,SAACC,GAClClI,QAAQuH,IAAIW,GACZvH,EAAS,CAACmD,KAAM+D,GAAoBoV,SAAU/U,WEoBlDvI,UAAW,SAACD,GAAD,OAAYiB,EAAShB,GAAUD,QAJ/BW,EAjEf,SAAsB/C,GAAO,IAClBiC,EAAQhC,IAAMqD,WAAWzB,GAAzBI,KADiB,EAGWhC,IAAMC,UAAS,GAH1B,mBAGhB+F,EAHgB,KAGJC,EAHI,OAIUjG,IAAMC,SAAS,IAJzB,mBAIhByf,EAJgB,KAING,EAJM,KAUlB1P,EAAW,WACb,IAAI3D,EAAMkD,GAAKU,SACZ5D,EAAIkT,UAAYlT,EAAIkT,SAAS3e,OAAS,GACrC8e,EAAYrT,EAAIkT,WAcxB,OAXA1f,IAAMqC,WAAU,YACZqN,GAAO1N,EAAKuO,OAAO,aACdC,QAAQL,GAEb,IAAI3D,EAAMkD,GAAKU,SACZ5D,EAAIkT,UAAYlT,EAAIkT,SAAS3e,OAAS,GACrC8e,EAAYrT,EAAIkT,YAGrB,IAEI,CACH,cAAC,EAAD,CACAhc,KArBS,CAAC,MAAO,KAAM,YAsBvBG,YAAa,GACbG,YAAa,SAACmI,GAEVpM,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM4M,MAAMC,IAAlC,YAAyCT,EAAIxI,iBAEjDH,MAAO,aACP,cAAC,GAAD,CAAgBoH,EAAG8E,GAAM7O,KAAMmF,EAAYhF,QAAS,kBAAMiF,GAAW,MAErE,eAAC3C,EAAA,EAAD,CAAOhC,MAAO,CACV0D,SAAU,WACVR,UAAW,GACXC,OAAQ,qBACRF,KAAM,EACNG,QAAS,OACTC,cAAe,SACfwQ,QAAS,GAPb,UAQI,cAACrN,GAAA,EAAD,CAAKxH,QAAS,kBAAM2F,GAAW,IAAO1E,MAAM,UAAUD,MAAO,CAAC+V,OAAQ,EAAGrS,SAAU,WAAYgD,MAAO,GAAID,OAAQ,IAAlH,SACI,cAACE,EAAA,EAAD,MAEJ,cAAC,KAAD,CACI2H,UAAWA,GACXc,OAAQgP,EAASxe,KAAI,SAACC,GAAD,MAAQ,CACzBmK,GAAInK,EAAEmK,GACN9H,MAAOrC,EAAE6J,QAAQ7G,KACjBwM,OAAQxP,EAAEwP,OACVC,MAAO,IAAIpB,KAA6B,KAAvBrO,EAAEyd,WAAazd,EAAEsd,OAClC5N,IAAK,IAAIrB,KAA4B,KAAtBrO,EAAE2d,SAAW3d,EAAEsd,WAElC3N,cAAc,QACdC,YAAY,MACZzP,MAAO,CAAEiD,KAAM,YCvEhB,SAASub,GAAS/f,GAAO,IAAD,EAECC,IAAMC,SAAS,IAFhB,mBAE7BsR,EAF6B,KAEjBwO,EAFiB,KAIrC/f,IAAMqC,WAAU,WACdiP,KAAgB5G,MAAK,SAAC6G,GACpB9O,QAAQuH,IAAIuH,GACZwO,EAAcxO,QAEf,IAOH,OACE,eAACjO,EAAA,EAAD,CAAOhC,MAAO,CAACiD,KAAM,EAAGC,UAAW,IAAnC,UACE,sBAAKlD,MAAO,CAACoD,QAAS,OAAQC,cAAe,SAAUwQ,QAAS,GAAhE,UACE,cAAC1T,EAAA,EAAD,CAAY8B,QAAQ,KAAKjC,MAAO,CAACoD,QAAS,QAA1C,qBACA,cAACe,EAAA,EAAD,UACK8L,EAAWrQ,KAAI,SAACC,GAAD,OACd,eAAC0E,EAAA,EAAD,CAAUvE,MAAO,CAACoD,QAAS,OAAQwK,WAAY,SAAUiI,eAAgB,iBAAzE,UACGhW,EAAEgD,KACFhD,EAAE6e,UAAa,cAACve,EAAA,EAAD,wBAAsC,cAAC4D,EAAA,EAAD,CAAQ/E,QAAS,WlBsDvD,IAACgL,IkBrDEnK,EAAEmK,GlBsD5BrB,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAKRU,UAAW,CACT8U,YAAa3U,MkB5DA/J,MAAM,UAAUgC,QAAQ,YAF2B,gCAQhE,cAACiC,EAAA,EAAD,IACA,sBAAKlE,MAAO,CAACoD,QAAS,OAAQC,cAAe,SAAUwQ,QAAS,GAAhE,UACE,cAAC1T,EAAA,EAAD,CAAY8B,QAAQ,KAAKjC,MAAO,CAACoD,QAAS,QAA1C,yBACA,cAACe,EAAA,EAAD,UAzBc,CAClB,CACEtB,KAAM,iBAwBajD,KAAI,SAACC,GAAD,OACf,cAAC0E,EAAA,EAAD,CAAU6G,QAAM,EAAhB,SAAkBvL,EAAEgD,eAK5B,cAACqB,EAAA,EAAD,O,ulCCnDN,IAAMyE,GAASC,K,QC6FApH,0BAAQ,SAACC,GAAD,MAAY,CACjCE,KAAMC,YAAWH,EAAMC,KAAKG,OAC5BkP,KAAMtP,EAAMsP,KAAKjI,KACjB7D,KAAMxD,EAAMsH,UAAUC,MAAM3E,QAAO,SAACC,GAAD,MAAiB,gBAAVA,EAAEzB,QAC5CmC,YAAavD,EAAMsH,UAAU/D,YAAYX,QAAO,SAACC,GAAD,MAAiB,gBAAVA,EAAEW,YACvD,SAACnD,GAAD,MAAe,CACjB8c,QAAS,kBAAM9c,GD/BR,SAACA,GACN,OAAO6G,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAcJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK2M,QAAM3H,MAAK,SAACC,GAChCvH,EAAS,CAACmD,KAAM+D,GAAgB+H,KAAM1H,WCe1CwV,cAAe,SAACzN,GAAD,OAAYtP,EDlGA,SAACsP,GAC5B,OAAO,SAACtP,GACN6G,GAAOgB,OAAO,CACZC,SAAUT,cAAF,MAaRU,UAAW,CACTuH,OAAQA,KAEThI,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKya,iBAAezV,MAAK,SAACC,GACzCvH,EAAS,CAACmD,KAAM+D,GAAuB8V,UAAWzV,QC8ElBwV,CAAczN,KAClD2N,iBAAkB,SAAC/U,GAAD,OAAQlI,EDnDI,SAACkI,GAC/B,OAAO,SAAClI,EAAU6J,GAChB,OAAOhD,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAKRU,UAAW,CACTmV,SAAUhV,KAEXZ,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK2a,oBAAkB3V,MAAK,SAACC,GAC5CvH,EAAS,CAACmD,KAAM+D,GAA0BgB,GAAIA,QCuCf+U,CAAiB/U,KACpDiV,iBAAkB,SAACjV,EAAIoH,GAAL,OAAgBtP,ED3EJ,SAACkd,EAAU5N,GACzC,OAAO,SAACtP,GACL6G,GAAOgB,OAAO,CACZC,SAAUT,cAAF,MAUXU,UAAW,CACTmV,SAAUA,EACV5N,OAAQA,KAEThI,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK6a,oBAAkB7V,MAAK,SAACC,GAC5CvH,EAAS,CAACmD,KAAM+D,GAA0BoI,OAAQA,EAAQpH,GAAIgV,QCyDrBC,CAAiBjV,EAAIoH,QATnD5P,EArEf,SAAe/C,GAAO,IAAD,EACeC,IAAMC,SAAS,MAD9B,mBACXuG,EADW,KACDsF,EADC,KASnB,OANA9L,IAAMqC,WAAU,WACdtC,EAAMmgB,YACL,IAEHzd,QAAQuH,IAAIjK,EAAMkD,MAEX,CACL,cAAC,EAAD,CACAS,KAAM,GACNM,YAAa,SAACmI,KAIdtI,YAAa,GACbL,MAAO,SACP,cAACuC,GAAD,CACE6B,OAAQ,SAAClC,GACP,GAAGA,EAAK4F,GAAG,CACT,IAAIpE,EAAIC,OAAOC,OAAO,GAAI1B,UACnBwB,EAAEoE,GACTvL,EAAMwgB,iBAAiB7a,EAAK4F,GAAIpE,QAGhCnH,EAAMogB,cAAcza,IAGxB1E,QAAS,kBAAM8K,EAAY,OAC3BtF,SAAUA,EACVD,KAAMxG,EAAMwG,KACZD,YAAavG,EAAMuG,YAdrB,SAeE,cAAClC,EAAD,CACEuB,OAAQ,SAAC8G,EAAMpI,GAAP,OAAkBoI,EAAKtI,KAAKP,QAAQS,IAAW,GACvDqB,KAAM3F,EAAMsS,KACZvM,WAAY,SAAC2G,GAAD,OACV,sBAAKpM,UAAU,YAAf,UACA,eAACwF,EAAA,EAAD,CAAU6G,QAAM,EAAhB,UACkB,WAAfD,EAAKtK,OAAsB,cAACqe,GAAA,EAAD,IAAe/T,EAAKK,MAAQ,cAAC2T,GAAA,EAAD,IAAwB,cAACC,GAAA,EAAD,IAChF,cAACjf,EAAA,EAAD,CAAYH,MAAO,CAACI,WAAY,IAAhC,SACG+K,EAAKtI,UAGV,cAACrE,EAAD,CACEgB,KAAM,GACJ+L,OAAsB,WAAfJ,EAAKtK,OAAsB,CAClC,CACEX,KAAM,cAACmf,GAAA,EAAD,IACNhf,MAAO,eACPN,OAAQ,eAER,IAAIwL,OAAO9M,EAAMkD,KAAK6J,MAAQ,CAAC,CACjCnL,MAAO,OACPH,KAAM,cAACof,GAAA,EAAD,IACNvf,OAAQ,kBAAMyK,EAAYW,KAE5B,CACE9K,MAAO,SACPJ,MAAO,MACPC,KAAM,cAACqf,GAAA,EAAD,IACNxf,OAAQ,kBAAMtB,EAAMsgB,iBAAiB5T,EAAKnB,OACvC,kB,q8BCtFjB,IAAMrB,GAASC,K,QC8EApH,0BAAQ,SAACC,GAAD,MAAY,CACjCE,KAAMC,YAAWH,EAAMC,KAAKG,OAC5B8a,UAAWlb,EAAMkb,UAAU7T,KAC3B7D,KAAMxD,EAAMsH,UAAUC,MAAM3E,QAAO,SAACC,GAAD,MAAgB,aAATA,EAAEzB,QAC5CmC,YAAavD,EAAMsH,UAAU/D,YAAYX,QAAO,SAACC,GAAD,MAAiB,aAAVA,EAAEW,YACvD,SAACnD,GAAD,MAAe,CACjB0d,aAAc,kBAAM1d,GDlBb,SAACA,GACN,OAAO6G,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAUJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKuY,aAAWvT,MAAK,SAACC,GACrCvH,EAAS,CAACmD,KAAM+D,GAAqB2T,UAAWtT,WCMpDoW,aAAc,SAAC9C,GAAD,OAAe7a,EDnFH,SAAC6a,GAC3B,OAAO,SAAC7a,GACN6G,GAAOgB,OAAO,CACZC,SAAUT,cAAF,MAUVU,UAAW,CACT8S,UAAWA,KAEZvT,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKqb,gBAAcrW,MAAK,SAACC,GACxCvH,EAAS,CAACmD,KAAM+D,GAAqB0W,QAASrW,QCkEVoW,CAAa9C,KACnDgD,gBAAiB,SAAC3V,EAAI2S,GAAL,OAAmB7a,ED9DP,SAACkI,EAAI2S,GAElC,OADAxb,QAAQuH,IAAIsB,EAAI2S,GACT,SAAC7a,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAWT,cAAH,MASVU,UAAW,CACT+V,YAAa5V,EACb2S,eAECvT,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKub,mBAAiBvW,MAAK,SAACC,GAC3CvH,EAAS,CAACmD,KAAM+D,GAAwB2T,YAAW3S,WC4CV2V,CAAgB3V,EAAI2S,KACjEkD,gBAAiB,SAAC7V,GAAD,OAAQlI,EDxCI,SAACkI,GAC9B,OAAO,SAAClI,GACN,OAAO6G,GAAOgB,OAAO,CACnBC,SAAUT,cAAF,MAKRU,UAAW,CACTG,GAAIA,KAELZ,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKyb,mBAAiBzW,MAAK,SAACC,GAC3CvH,EAAS,CAACmD,KAAM+D,GAAwBgB,GAAIA,QC4Bd6V,CAAgB7V,QATrCxI,EAhEf,SAAmB/C,GAAO,IAAD,EACiBC,IAAMC,SAAS,IADhC,mBACf4D,EADe,KACFqU,EADE,OAGUlY,IAAMC,SAAS,MAHzB,mBAGfuG,EAHe,KAGLsF,EAHK,KASvB,OAJA9L,IAAMqC,WAAU,WACdtC,EAAM+gB,iBACL,IAEI,CACL,cAAC,EAAD,CACApd,KAAI,YAAM,IAAIqI,IAAIhM,EAAMke,UAAUtY,QAAO,SAACC,GAAD,OAAOA,EAAEW,QAAMrF,KAAI,SAACC,GAAD,OAAOA,EAAEoF,UACrEvC,YAAa,SAACmI,GACV+L,EAAe/L,IAGnBtI,YAAaA,EACbL,MAAO,cACP,cAACuC,GAAD,CACE6B,OAAQ,SAAClC,GACP,GAAGA,EAAK4F,GAAG,CACT,IAAIpE,EAAIC,OAAOC,OAAO,GAAI1B,GAC1BjD,QAAQuH,IAAItE,UACLwB,EAAEoE,GACTvL,EAAMkhB,gBAAgBvb,EAAK4F,GAAIpE,QAE/BnH,EAAMghB,aAAarb,IAGvB1E,QAAS,kBAAM8K,EAAY,OAC3BtF,SAAUA,EACVD,KAAMxG,EAAMwG,KACZD,YAAavG,EAAMuG,YAdrB,SAeA,cAAClC,EAAD,CACEuB,OAAQ,SAAC8G,EAAMpI,GAAP,OAAkBoI,EAAKtI,KAAKP,QAAQS,IAAW,GACvDqB,KAAM3F,EAAMke,UAAUtY,QAAO,SAACC,GAC5B,OAAI/B,GACG+B,EAAEW,MAAQ1C,KAEnBiC,WAAY,SAAC2G,GAAD,OACV,sBAAKpM,UAAU,iBAAf,UACA,cAACwF,EAAA,EAAD,CAAU6G,QAAM,EAACpM,QAAS,SAACC,KAA3B,SAEE,cAACkB,EAAA,EAAD,CAAY8B,QAAQ,YAAYjC,MAAO,CAACiD,KAAM,GAA9C,SAAmDkI,EAAKtI,SAExD,cAACrE,EAAD,CACEgB,KAAM,GACJ+L,OAAO9M,EAAMkD,KAAK6J,MAAQ,CAC1B,CACEnL,MAAO,OACPN,OAAQ,kBAAMyK,EAAYW,KAE5B,CACE9K,MAAO,SACPJ,MAAO,MACPF,OAAQ,kBAAMtB,EAAMohB,gBAAgB1U,EAAKnB,OAEzC,kB,qBCvEH/E,GAAO,UAEPkH,GAAQC,cAAW,SAAC3N,GAE/B,OACE,qBAAKuB,MAAO,CAACiD,KAAM,GAAnB,SACE,cAAC,KAAD,CAAW6c,IAAKrhB,EAAMkO,KAAKvI,KAAKqJ,eAKzBd,GAAOP,cAAW,SAAC3N,GAC5B,OACA,cAAC,KAAD,2BAAiBA,GAAjB,aACE,qBAAKuB,MAAO,CAAC6T,QAAS,GAAI9U,UAAU,WAApC,SACGN,EAAMuL,IAAMvL,EAAM2F,KAAK/D,OAAS,mBCH5B4E,GAAO,eAEPkH,GAAQC,cAAW,SAAC3N,GAAW,IAAD,EAEXC,IAAMC,SAAS,IAFJ,mBAEjC0N,EAFiC,KAEzBC,EAFyB,OAIb5N,IAAMC,SAAS,MAJF,gCAMTD,IAAMC,SAAS,KANN,6BAQzCD,IAAMqC,WAAU,WACd,IAAIwL,EAASC,IACbX,GAAUU,EAAOvC,IAAIZ,MAAK,SAACiD,GACzBC,EAAUD,MAEZlL,QAAQuH,IAAI8D,OACX,IAEH,IAAMA,EAAY,WACd,IAAIC,EAAQhO,EAAMiO,OAAOD,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEiI,QAAU9N,EAAMkO,KAAK3C,MACpE,GAAGyC,GAASA,EAAMhN,OAAS,EAAE,CAC3B,IAAImN,EAAQH,EAAM7M,KAAI,SAACC,GAAD,OAAOpB,EAAMiO,OAAOE,MAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMnK,EAAE+D,UAAQ,MAChF,GAAGgJ,GAASA,EAAMnN,OAAS,EACvB,OAAOmN,EAAM,KA2CvB,OACE,sBAAK5M,MAAO,CAACoD,QAAS,OAAQH,KAAM,EAAGI,cAAe,UAAtD,UACI,cAACC,EAAA,EAAD,CAAWuJ,UAAQ,EAACC,OAAQN,IAAanM,MAAM,kBAAkBiB,MAAOkL,IAAYpI,KAAK/D,QAEzF,cAAC0M,GAAA,EAAD,CACEzL,MAAO7C,EAAMkO,KAAKvI,KAAK6H,MACvBzJ,SAAU,SAACvD,EAAGwD,GACZtB,QAAQuH,IAAIzJ,EAAGwD,GACZA,GAAUA,EAAOI,OAElBpE,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK6H,MAAQxJ,EACXkK,KAETX,GAAWQ,IAAYxC,GAAIvH,EAAOI,MAAMuG,MAAK,SAACC,GAC5ClI,QAAQuH,IAAI,qBAAsBjG,EAAOI,KAAMwG,GAC/C5K,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAGtC,OAFAA,EAAKvI,KAAK6I,iBAAmB5D,EAC7BsD,EAAKvI,KAAK8I,SAAW,GACdP,UAKfQ,QAASd,EACTe,eAAgB,SAACvN,GAAD,OAAOA,EAAEgD,MACzBwK,eAAa,EACbC,YAAa,SAACC,GAAD,OACX,cAACjK,EAAA,EAAD,2BAAeiK,GAAf,IAAuBC,OAAO,SAASnN,MAAM,cAEjD,qBAAKL,MAAO,CAACkD,UAAW,GAAxB,SApEe,WACnB,IAAIuJ,EAAQhO,EAAMiO,OAAOD,MAAMpI,QAAO,SAACC,GAAD,OAAOA,EAAEV,QAAUnF,EAAMkO,KAAK3C,MACpE,GAAGyC,GAASA,EAAMhN,OAAS,EAAE,CACzB,IAAImN,EAAQH,EAAM7M,KAAI,SAACC,GAAD,OAAOpB,EAAMiO,OAAOE,MAAMvI,QAAO,SAACC,GAAD,OAAOA,EAAE0F,IAAMnK,EAAE0M,UAAQ,MAChF,GAAGK,GAASA,EAAMnN,OAAS,EAAE,CACzB,IAAIwF,EAAO2H,EAAM,GAAGxI,KAAKqJ,QACrBC,EAAM,GAFe,aAIrB,IAAIC,EAAYlI,EAChBiI,EAAI/H,KACJ,sBAAK3F,MAAO,CAACkD,UAAW,EAAGE,QAAS,OAAQwK,WAAY,UAAxD,UACI,qBAAK5N,MAAO,CAAC6N,MAAO,KAApB,SACGpI,IAFP,IAII,wBACEnE,MAAO7C,EAAMkO,MAAQlO,EAAMkO,KAAKvI,MAAQ3F,EAAMkO,KAAKvI,KAAK8I,UAAYzO,EAAMkO,KAAKvI,KAAK8I,SAASzH,GAC7FjD,SAAU,SAACvD,GAETR,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAItC,OAHIA,EAAKvI,KAAK8I,WAAUP,EAAKvI,KAAK8I,SAAW,IAC7C/L,QAAQuH,IAAIzJ,EAAE2E,OAAOtC,MAAO,aAAcqM,GAC1ChB,EAAKvI,KAAK8I,SAASS,GAAa1O,EAAE2E,OAAOtC,MAClCqL,MARb,UAWIlO,EAAMkO,KAAKvI,KAAK6I,kBAAoB,IAAI1B,OAAO,CAAC,CAAC1I,KAAM,SAASjD,KAAI,SAACC,GAAD,OACpE,wBAAQyB,MAAOzB,EAAEgD,KAAjB,SACGhD,EAAEgD,iBApBjB,IAAI,IAAI4C,KAAKR,EAAM,IA0BnB,OAAOyI,IAoCVtH,WAMIuG,GAAOP,cAAW,SAAC3N,GAC5B,OACA,cAAC,KAAD,2BAAiBA,GAAjB,aACE,sBAAKuB,MAAO,CAAC6T,QAAS,GAAI9U,UAAU,gBAApC,UACE,qBAAKA,UAAU,iBAAf,SACCN,EAAMuL,IAAMvL,EAAM2F,KAAK/D,OAAS,kBAEjC,qBAAKtB,UAAU,eAAf,SACGN,EAAMuL,IAAMvL,EAAM2F,MAAQ3F,EAAM2F,KAAK6H,OAASxN,EAAM2F,KAAK6H,MAAMpJ,gBCvH7DoC,GAAO,eAEPkH,GAAQC,cAAW,SAAC3N,GAE/B,OACE,sBAAKuB,MAAO,CAACoD,QAAS,OAAQH,KAAM,EAAGI,cAAe,UAAtD,UACI,cAACC,EAAA,EAAD,CAAWjD,MAAM,kBAAkBiB,MAAO7C,EAAMkO,KAAKvI,KAAK/D,MAAOmC,SAAU,SAACvD,GACxER,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEpC,OADAA,EAAKvI,KAAK/D,MAAQpB,EAAE2E,OAAOtC,MACpBqL,QAGf,cAACrJ,EAAA,EAAD,CAAWjD,MAAM,oBAAoBiB,MAAO7C,EAAMkO,KAAKvI,KAAK2b,KAAMvd,SAAU,SAACvD,GAC3ER,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK2b,KAAO9gB,EAAE2E,OAAOtC,MACnBqL,QAGX,cAACrJ,EAAA,EAAD,CAAWjD,MAAM,gBAAgBiB,MAAO7C,EAAMkO,KAAKvI,KAAK4b,GAAIxd,SAAU,SAACvD,GACrER,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK4b,GAAK/gB,EAAE2E,OAAOtC,MACjBqL,QAGX,cAACrJ,EAAA,EAAD,CAAWjD,MAAM,WAAWiB,MAAO7C,EAAMkO,KAAKvI,KAAK6b,SAAUzd,SAAU,SAACvD,GACtER,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK6b,SAAWhhB,EAAE2E,OAAOtC,MACvBqL,QAGX,cAACrJ,EAAA,EAAD,CAAWjD,MAAM,WAAW4E,KAAK,WAAW3D,MAAO7C,EAAMkO,KAAKvI,KAAK8b,SAAU1d,SAAU,SAACvD,GACtFR,EAAMiO,OAAOM,WAAWvO,EAAMkO,KAAK3C,IAAI,SAAC2C,GAEtC,OADAA,EAAKvI,KAAK8b,SAAWjhB,EAAE2E,OAAOtC,MACvBqL,cAONA,GAAOP,cAAW,SAAC3N,GAC5B,OACA,cAAC,KAAD,2BAAiBA,GAAjB,aACE,qBAAKuB,MAAO,CAAC6T,QAAS,GAAI9U,UAAU,gBAApC,SACGN,EAAMuL,IAAMvL,EAAM2F,KAAK/D,OAAS,uB,gBC+B1BmB,0BACX,SAACC,GAAD,MAAY,CACRuH,OAAQvH,EAAMsH,UAAUC,OAAO,IAAIpJ,KAAI,SAACC,EAAGiY,GAAJ,MAAY,CAC/C9N,GAAInK,EAAEgD,KAAKR,cACX4C,KAAM,UACNb,KAAM,CACF/D,MAAOR,EAAEgD,KACT4K,QAAS5N,EAAE6F,SAEfhC,SAAU,CACN7D,EAAG,IAAY,IAALiY,EACVxO,EAAG,KAEP6W,WAAW,UAGnB,SAACre,GAAD,MAAe,CACX4J,SAAU,kBAAM5J,EAAS4J,UAjBlBlK,EArEf,SAAe/C,GAEXC,IAAMqC,WAAU,WACZtC,EAAMiN,aAEP,IALc,MAQuBuQ,sBAAYxQ,IARnC,mBAQT2U,EARS,aAQchc,KAEH1F,IAAMC,SAAS,KAV1B,mBAUTiO,EAVS,KAUF4B,EAVE,OAWW9P,IAAMC,SAAS,IAX1B,mBAWT8N,EAXS,KAWFuK,EAXE,KA6BjB,OAhBAtY,IAAMqC,WAAU,W9BuBX4H,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAoBJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAKic,kB8B3CIjX,MAAK,SAACkX,GACnBA,EAAa1T,OAAO4B,EAAS8R,EAAa1T,MAAMhN,KAAI,SAACC,GACpD,IAAIyJ,EAAIC,qBAAU1J,GAGlB,cAFOyJ,EAAEE,kBACFF,EAAE5F,SAAS8F,WACXF,KACR8I,SACAkO,EAAa7T,OAAOuK,EAASsJ,EAAa7T,MAAM7M,KAAI,SAACC,GACpD,IAAIyJ,EAAIC,qBAAU1J,GAElB,cADOyJ,EAAEE,WACFF,KACR8I,cAER,IAGC,qBAAKrT,UAAU,aAAf,SACA,eAAC,KAAD,CAAc+M,MAAO,CACjBc,OAAQnO,EAAMuK,OAAS,IAAIuC,OAAOqB,GAClCH,MAAOA,EACP2L,aAAc,GAGdpE,YAAa,aACbuD,UAAW,aACXC,UAAW,aACXK,aAAc,aACdF,aAAc,aACdF,aAAc,aACdL,UAAW,CAACmJ,EAAaC,EAAWC,IAZxC,UAcI,cAAC,KAAD,IACA,cAAC,KAAD,CAEAhI,aAAc,SAAC7L,GACX,IAAImL,EAAInL,EAAMvI,QAAO,SAACC,GAAD,OAAO7F,EAAMuK,MAAMpJ,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQgC,EAAE0F,IAAM,KACzEoW,EAAqB,CAACvW,UAAW,CAC7B+C,MAAOmL,EACPtL,MAAOA,KAEX+B,EAASuJ,IAEbW,aAAc,SAACxQ,GACXkY,EAAqB,CAACvW,UAAW,CAC7B+C,MAAOA,EACPH,MAAOvE,KAEX8O,EAAS9O,c,2ECIVwY,oBAzDf,SAAiBjiB,GACb,IAAMe,EAAO,CACT,CACEU,KAAM,cAAC4T,GAAA,EAAD,IACNzT,MAAO,YACPwY,KAAM,IAER,CACE3Y,KAAM,cAACygB,GAAA,EAAD,IACNtgB,MAAO,WACPwY,KAAM,aAER,CACE3Y,KAAM,cAAC0gB,GAAA,EAAD,IACNvgB,MAAO,WACPwY,KAAM,aAER,CACE3Y,KAAM,cAACif,GAAA,EAAD,IACN9e,MAAO,OACPwY,KAAM,SAER,CACE3Y,KAAM,cAAC2gB,GAAA,EAAD,IACNxgB,MAAO,YACPwY,KAAM,cAER,CACE3Y,KAAM,cAAC4gB,GAAA,EAAD,IACNzgB,MAAO,QACPwY,KAAM,WAIZ,OACI,eAACkI,GAAA,EAAD,CAAQ9e,QAAQ,YAAYjC,MAAO,CAAC6N,MAAO,KAA3C,UACA,eAAC1J,EAAA,EAAD,CAAMnE,MAAO,CAACiD,KAAM,EAAG4K,MAAO,KAA9B,UACA,eAACtJ,EAAA,EAAD,CAAUvE,MAAO,CAACC,MAAO,OAAQ4T,QAAS,GAAI6G,SAAU,IAAxD,UACG,qBAAKoF,IAAI,mBAAmB9f,MAAO,CAACmD,OAAQ,GAAIuT,YAAa,KADhE,cAGA,cAACxS,EAAA,EAAD,IACC1E,EAAKI,KAAI,SAACC,EAAGiY,GAAJ,OACN,eAACvT,EAAA,EAAD,CACAxF,UAAWS,EAAKI,KAAI,SAACC,GAAD,OAAOA,EAAEgZ,QAAMvW,QAAQyI,OAAOT,SAASU,SAASuG,MAAM9S,EAAM4M,MAAMC,KAAK,KAAOwM,EAAK,qBAAsB,YAC7H9Y,QAAS,kBAAMP,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM4M,MAAMC,KAAlC,OAAwCzL,EAAEgZ,QACzDzN,QAAM,EAHN,UAGSvL,EAAEK,KAHX,IAGkBL,EAAEQ,eAGxB,cAAC6D,EAAA,EAAD,IACA,eAACK,EAAA,EAAD,CAAU6G,QAAM,EAACpM,QAAS,kBAAMP,EAAMqM,QAAQnF,KAAd,UAAsBlH,EAAM4M,MAAMC,IAAlC,eAAhC,UACI,cAAC,KAAD,CAAUtL,MAAO,CAAC0W,YAAa,MADnC,oB,kBCkEOlV,0BAAQ,SAACC,GAAD,MAAY,CACjCoH,SAAUpH,EAAMoH,SAASC,KACzBnH,KAAMC,YAAWH,EAAMC,KAAKG,OAC5Bmf,SAAUvf,EAAMC,KAAKsf,aACnB,SAAClf,GAAD,MAAe,CACjB4J,SAAU,kBAAM5J,EAAS4J,OACzBuV,eAAgB,kBAAMnf,GhClHf,SAACA,GACN,OAAO6G,GAAOO,MAAM,CAClBA,MAAOC,cAAF,QAWJC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK8c,mBAAiB9X,MAAK,SAACC,GAC3ClI,QAAQuH,IAAIW,GACZvH,EAAS,CAACmD,KAAM+D,GAA2BmY,MAAO9X,WgCoGtDvI,UAAW,SAACD,GAAD,OAAYiB,EAAShB,GAAUD,QAP7BW,EAvFf,SAA6B/C,GAwD3B,OAtDmB2L,KAAGC,MAAM5L,EAAM6L,SAASvH,OAAQ,CAACwH,mBAAmB,IAEnDQ,OAAOT,SAASU,SAAS4N,QAAQ,eAAgB,IAErEzX,QAAQuH,IAAIjK,EAAMuiB,UAElBtiB,IAAMqC,UAAN,sBAAgB,sBAAAuD,EAAA,sDACd7F,EAAMiN,WACNjN,EAAMwiB,iBAFQ,2CAOb,IA0CD,cAAC,KAAD,CAAcD,SAAUviB,EAAMuiB,SAA9B,SACA,cAAC,EAAD,UACA,sBAAKjiB,UAAU,UAAf,UACE,cAAC,GAAD,CAASsM,MAAO5M,EAAM4M,QACtB,qBAAKtM,UAAU,eAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8Z,KAAI,UAAKpa,EAAM4M,MAAMC,KAAO8V,OAAK,EAACC,UAAWC,KACpD,cAAC,IAAD,CAAOzI,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,aAAiCwN,OAAQ,SAACra,GAAD,OAClD,cAAC8iB,GAAD,eAAc9iB,OAEhB,cAAC,IAAD,CAAOoa,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,aAAiC+V,UAAWG,GAAUJ,OAAK,IACtE,cAAC,IAAD,CAAOvI,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,iBAAqCwN,OAAQ,SAACra,GAAD,OACtD,cAAC,GAAD,eAAiBA,OAEnB,cAAC,IAAD,CAAOoa,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,UAA8BwN,OAAQ,SAACra,GAChD,OAAO,cAAC,GAAD,eAAWA,OAEpB,cAAC,IAAD,CAAOoa,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,SAA6B+V,UAAWI,KACnD,cAAC,IAAD,CAAO5I,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,cAAkC+V,UAAWK,KACxD,cAAC,IAAD,CAAO7I,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,aAAiC+V,UAAWM,KACvD,cAAC,IAAD,CAAO9I,KAAI,UAAKpa,EAAM4M,MAAMC,IAAjB,UAA8B+V,UAAWO,oB,QC3C/CpgB,IC/EXqgB,GD+EWrgB,qBAAQ,MAAM,SAACM,GAAD,MAAe,CACxCggB,SAAU,SAACjgB,GAAD,OAAWC,E/BjDD,SAACD,GACrB,OAAO,SAACC,GACJA,EAAS,CAACmD,KAAM+D,GAAiBnH,MAAOA,K+B+CdigB,CAASjgB,KACvCkgB,YAAa,kBAAMjgB,G/BlEZ,SAACA,GACJ,OAAO6G,GAAOgB,OAAO,CACjBC,SAAUT,cAAF,QAQTC,MAAK,SAACC,GAAD,OAAOA,EAAEjF,KAAK4d,eAAa5Y,MAAK,SAACC,GACrCvH,EAAS,CAACmD,KAAM+D,GAAqBgY,SAAU3X,EAAE2X,qB+BqD9Cxf,EArEf,SAAe/C,GAAO,IAAD,EACWC,IAAMC,SAAS,IAD1B,mBACTsjB,EADS,KACFC,EADE,OAEWxjB,IAAMC,SAAS,MAF1B,mBAETmO,EAFS,KAEFqV,EAFE,OAGiBzjB,IAAMC,SAAS,IAHhC,mBAGTshB,EAHS,KAGCmC,EAHD,OAIiB1jB,IAAMC,SAAS,IAJhC,mBAITuhB,EAJS,KAICmC,EAJD,OAMGpG,sBAAY5N,IAAxBiU,EANS,oBAQXC,EAAQ,WACVD,EAAQ,CAACzY,UAAW,CAChBoW,SAAUA,EACVC,SAAUA,KACV9W,MAAK,SAACC,GACHA,EAAEjF,KAAKme,OAASlZ,EAAEjF,KAAKme,MAAM1gB,OAC5BpD,EAAMsjB,cACNtjB,EAAMqjB,SAASzY,EAAEjF,KAAKme,MAAM1gB,OAC5BpD,EAAMqM,QAAQnF,KAAK,eACd0D,EAAEjF,KAAKme,OAASlZ,EAAEjF,KAAKme,MAAMzV,OAClCqV,EAAS9Y,EAAEjF,KAAKme,MAAMzV,WAWlC,OANApO,IAAMqC,WAAU,W/BtBTyhB,MAAM,kCAAkCpZ,MAAK,SAACC,GAAD,OAAOA,EAAEoZ,U+BuB9CrZ,MAAK,SAAC6Y,GACbC,EAASD,SAKb,sBAAKljB,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,SAAf,UACA,+BACKkjB,EAAMS,IAEX,+BAAOT,EAAM3d,SAGjB,eAACtC,EAAA,EAAD,CAAOhC,MAAO,CAACoD,QAAS,OAAQH,KAAM,GAAKI,cAAe,SAAUwQ,QAAS,GAA7E,UACI,sBAAK7T,MAAO,CAACoD,QAAS,OAAQwK,WAAY,SAAU+U,cAAe,GAAnE,UACI,qBAAK3iB,MAAO,CAACmD,OAAQ,GAAIuT,YAAa,IAAKoJ,IAAI,qBAC/C,cAAC3f,EAAA,EAAD,CAAYH,MAAO,CAACC,MAAO,QAASgC,QAAQ,KAA5C,wBAGJ,cAACiC,EAAA,EAAD,CAASlE,MAAO,CAAC4iB,aAAc,MACnC,cAACtf,EAAA,EAAD,CACIwJ,MAAOA,EACPzM,MAAM,WACNiB,MAAO2e,EACPzd,SAAU,SAACvD,GAAD,OAAOmjB,EAAYnjB,EAAE2E,OAAOtC,UAC1C,cAACgC,EAAA,EAAD,CACIwJ,MAAOA,EACPzM,MAAM,WACN4E,KAAK,WACL3D,MAAO4e,EACP2C,UAAW,SAAC5jB,GAAuB,IAAbA,EAAE6jB,SAAgBP,KACxC/f,SAAU,SAACvD,GAAD,OAAOojB,EAAYpjB,EAAE2E,OAAOtC,UAC1C,cAACyC,EAAA,EAAD,CACI/E,QAASujB,EACTviB,MAAO,CAACkD,UAAW,IACnBjD,MAAM,UACNgC,QAAQ,YAJZ,4B,+ECxENkN,GAAO,CACXrG,KAAM,ICDR,IAAMia,GAAO,CACT/d,YAAa,GACbgE,MAAO,ICFX,IAAM+Z,GAAO,CACXja,KAAM,ICDR,IAAMia,GAAO,CACTlhB,MAAO,KACPhB,OAAQ,eACRmgB,SAAU,MCHd,IAIIa,GAJEkB,GAAO,CACTja,KAAM,ICDV,IAII+Y,GAASmB,GAJPD,GAAO,CACTja,KAAM,ICDV,IAAMia,GAAO,CACT3E,SAAU,ICOC6E,oBAAgB,CAC7Bpa,SPHa,WAAiD,IAAzBpH,EAAwB,uDAAhB0N,GAAMpP,EAAU,uDAAH,GAC1D,OAAOA,EAAOkF,MACZ,KAAK+D,GACH,OAAO,2BACFvH,GADL,IAEEqH,KAAM/I,EAAO8I,WAEjB,KAAKG,GAEH,IAAIka,GADJrB,GAAUpgB,EAAMqH,KAAKsJ,SACHxS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAElD,OADA6X,GAAQnP,OAAOwQ,EAAK,GACb,2BACFzhB,GADL,IAEEqH,KAAM+Y,KAEV,KAAK7Y,GACH,OAAO,2BACFvH,GADL,IAEEqH,KAAMrH,EAAMqH,KAAKyC,OAAO,CAACxL,EAAO+J,eAEpC,KAAKd,GAEH,IAAI8O,GADJ+J,GAAUpgB,EAAMqH,KAAKsJ,SACJxS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAKjD,OAJA6X,GAAQ/J,GAAR,2BACK+J,GAAQ/J,IACR/X,EAAO2J,SAEL,2BACFjI,GADL,IAEEqH,KAAM+Y,KAEV,QACE,OAAOpgB,IO5BXC,KJJa,WAAgD,IAA3BD,EAA0B,uDAAlBshB,GAAMhjB,EAAY,uDAAH,GACvD,OAAOA,EAAOkF,MACV,KAAK+D,GACD,OAAO,2BACAvH,GADP,IAEII,MAAO9B,EAAO8B,QAEtB,KAAKmH,GACD,OAAO,2BACAvH,GADP,IAEIuf,SAAUjhB,EAAOihB,WAEzB,KAAKhY,GACD,OAAO,2BACAvH,GADP,IAEIZ,OAASd,EAAOc,SAExB,QACI,OAAOY,IIbjByO,MLPa,WAAgD,IAA3BzO,EAA0B,uDAAlBshB,GAAMhjB,EAAY,uDAAH,GACzD,OAAOA,EAAOkF,MACZ,KAAK+D,GACH,OAAO,2BACFvH,GADL,IAEEqH,KAAM/I,EAAOmQ,QAEjB,KAAKlH,GACH,OAAO,2BACFvH,GADL,IAEEqH,KAAMrH,EAAMqH,KAAKyC,OAAO,CAACxL,EAAO6P,SAEpC,QACE,OAAOnO,IKLX4c,SDRa,WAAoD,IAA3B5c,EAA0B,uDAAlBshB,GAAMhjB,EAAY,uDAAH,GAC3D,OAAOA,EAAOkF,MACV,KAAK+D,GACD,OAAO,2BACAvH,GADP,IAEI2c,SAAUre,EAAOqe,WAEzB,KAAKpV,GACD,OAAO,2BACAvH,GADP,IAEI2c,SAAU3c,EAAM2c,SAAS7S,OAAO,CAACxL,EAAO+c,YAEhD,QACI,OAAOrb,ICJjBsH,UNRa,WAAqD,IAA3BtH,EAA0B,uDAAlBshB,GAAMhjB,EAAY,uDAAH,GAC5D,OAAOA,EAAOkF,MACV,KAAK+D,GACD,OAAO,2BACAvH,GADP,IAEIuD,YAAajF,EAAOohB,QAE5B,KAAKnY,GACD,OAAO,2BACAvH,GADP,IAEIuH,MAAOjJ,EAAOiJ,QAEtB,QACI,OAAOvH,IMJjBkb,UHTa,WAAmD,IAAzBlb,EAAwB,uDAAhBshB,GAAMhjB,EAAU,uDAAH,GAC1D,OAAOA,EAAOkF,MACV,KAAK+D,GACD,OAAO,2BACAvH,GADP,IAEIqH,KAAM/I,EAAO4c,YAErB,KAAK3T,GACD,OAAO,2BACAvH,GADP,IAEIqH,KAAMrH,EAAMqH,KAAKyC,OAAO,CAACxL,EAAO2f,YAExC,KAAK1W,GAED,IAAI8O,GADJ+J,GAAUpgB,EAAMqH,KAAKsJ,SACJxS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAKjD,OAJA6X,GAAQ/J,GAAR,2BACO+J,GAAQ/J,IACR/X,EAAO4c,WAEP,2BACAlb,GADP,IAEIqH,KAAM+Y,KAEd,KAAK7Y,GAED,IAAIma,GADJtB,GAAUpgB,EAAMqH,KAAKsJ,SACHxS,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAElD,OADA6X,GAAQnP,OAAOyQ,EAAK,GACb,2BACA1hB,GADP,IAEIqH,KAAM+Y,KAEd,QACI,OAAOpgB,IGtBjBsP,KFTa,WAAiD,IAA5BtP,EAA2B,uDAAnBshB,GAAMhjB,EAAa,uDAAJ,GACvD,OAAOA,EAAOkF,MACV,KAAK+D,GACD,OAAO,2BACAvH,GADP,IAEIqH,KAAM/I,EAAOgR,OAErB,KAAK/H,GACD,OAAO,2BACAvH,GADP,IAEIqH,KAAMrH,EAAMqH,KAAKyC,OAAO,CAACxL,EAAO+e,cAExC,KAAK9V,GAOD,OANA6Y,GAAUpgB,EAAMqH,KAAKsJ,QACrB4Q,GAAMnB,GAAQjiB,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAC9C6X,GAAQmB,IAAR,2BACOnB,GAAQmB,KACRjjB,EAAOqR,QAEP,2BACA3P,GADP,IAEIqH,KAAM+Y,KAEd,KAAK7Y,GAID,OAHA6Y,GAAUpgB,EAAMqH,KAAKsJ,QACrB4Q,GAAMnB,GAAQjiB,KAAI,SAACC,GAAD,OAAOA,EAAEmK,MAAI1H,QAAQvC,EAAOiK,IAC9C6X,GAAQnP,OAAOsQ,GAAK,GACb,2BACAvhB,GADP,IAEIqH,KAAM+Y,KAEd,QACI,OAAOpgB,MGjCb2hB,GAAgB,CACpBC,IAAK,OACLC,cAGIC,GAAmBC,aAAeJ,GAAeK,I,YAExC,WACb,IAAI3X,EAAQ4X,aAAYH,GAAkBI,aAAgBC,OAE1D,MAAO,CAAE9X,QAAO+X,UADAC,aAAahY,ICEFiY,IAArBjY,G,GAAAA,MAAO+X,G,GAAAA,UACTlb,GAASC,KA6BAob,OA3Bf,WACE,OACE,cAAC,KAAD,CAAyBC,MAAOC,KAAhC,SACE,cAAC,WAAD,CAAUpY,MAAOA,GAAjB,SACA,cAAC,iBAAD,CAAgBnD,OAAQA,GAAxB,SACA,cAAC,IAAD,UACA,cAAC,KAAD,CAAawb,QAAS,KAAMN,UAAWA,GAAvC,SAEA,sBAAK9kB,UAAU,MAAf,UACE,cAAC,IAAD,CAAO8Z,KAAK,IAAIuI,OAAK,EAACC,UAAW+C,KACjC,cAAC,IAAD,CAAOvL,KAAK,aAAaC,OAAQ,SAACra,GAChC,OAAGqN,GAAMH,WAAWjK,KAAKG,MAChB,cAAC,GAAD,eAAyBpD,IAEzB,cAAC,IAAD,CAAU6c,GAAG,uBCvBjB+I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBnb,MAAK,YAAkD,IAA/Cob,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8BCEdO,6BAAkB,CAAEC,cAAeC,kBACnCC,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kBAEAC,IAAStM,OACP,cAAC,IAAMuM,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BlB,M,sNCjBamB,EAAc9mB,IAAM6B,cAAc,IAElCklB,EAAWC,sBAAYF,EAAa,QAEpCG,EAAe,SAAClnB,GAAW,IAAD,EAELC,IAAMC,UAAS,GAFV,mBAE3BinB,EAF2B,KAElBC,EAFkB,OAGTnnB,IAAMC,SAAS,MAHN,mBAG3BmnB,EAH2B,KAGrBC,EAHqB,KAI7BhG,EAAO,kCAyCb,OAvCArhB,IAAMqC,WAAU,WAAM,4CAClB,4BAAAuD,EAAA,yDACQqI,EAAOmZ,GACRA,EAFP,gBAGQ3kB,QAAQC,KAAK,2BAHrB,8BAKQD,QAAQ0b,KAAK,gBALrB,kBAQyBmJ,IAAKzf,OAAO,CACrB0f,KAAM,UACNC,OAAQ,CACJC,UAAW,CACPC,MAAO,CAAC,SAAD,OAAUrG,EAAV,mCAGfsG,MAAO,CAACC,SAAS,EAAMC,IAAK,CAACD,SAAS,IACtCE,OAAQC,YAASC,YAAOjoB,EAAMuiB,aAhB9C,cAQYrU,EARZ,YAkBYxL,QAlBZ,UAkB8BwL,EAAK3C,KAlBnC,yBAkBoBtB,IAlBpB,kEAoBYvH,QAAQ2L,MAAR,MApBZ,QAsBQ3L,QAAQwlB,QAAQ,gBAtBxB,QAwBIZ,EAAQpZ,GACRkZ,EAAiB,MAARlZ,GAzBb,2DADkB,sBA8BlB,OADGlO,EAAMuiB,UA7BU,WAAD,wBA6BC4F,GACZ,WACAd,GAAQA,EAAKe,OACZ1lB,QAAQuH,IAAI,iBACZod,EAAKe,OAAOC,OAAM,SAAAhM,GAAG,OAAI3Z,QAAQ2L,MAAMgO,MACnC,oBAAJgL,EAAO,SAGhB,CAACrnB,EAAMuiB,WAGN,cAACwE,EAAYnkB,SAAb,CAAsBC,MAAO,CAACqL,KAAMmZ,EAAMF,WAA1C,SACKnnB,EAAM8C,a,wQC0HJkkB,iBA7Jf,SAA4BhnB,GAAO,IAAD,EAEFC,IAAMC,SAAS,IAFb,mBAEtBuR,EAFsB,KAEfoD,EAFe,OAIS5U,IAAMC,UAAS,GAJxB,mBAItBooB,EAJsB,KAIRC,EAJQ,OAKUtoB,IAAMC,SAAS,CAAC,CAACqL,GAAI,UAAWnH,KAAMpE,EAAMyD,OAAS,eAAgB+kB,OAAO,KALtF,mBAKtBC,EALsB,UAOVxoB,IAAMyoB,SACtB,iBAAM,CAACC,gBAAcC,aAAcD,gBAAcE,eACjD,IAGJ5oB,IAAMqC,WAAU,WACZ,GAAGtC,EAAMyR,OAASzR,EAAMqnB,KAAKF,QAAQ,CACjC,IAAIrL,EAAI9b,EAAMyR,MAAMkC,QAEpBjR,QAAQuH,IAAI,eAAgB6R,EAAE9a,QAgB9B6T,EAASiH,MAOd,CAAC9b,EAAMyR,MAAOzR,EAAMqnB,OAEvB,IAzC8B,EAqHEpnB,IAAMC,SAAS,IArHjB,mBAqHtB4oB,EArHsB,KAqHbC,EArHa,KAuH9B,OACI,sBAAKzoB,UAAU,aAAf,UACI,cAAC,IAAD,CACIQ,KAAMwnB,EACNU,MAAO,SAAC5kB,GAAD,OAAU2kB,EAAWD,EAAQhc,OAAO,CAAC,CACxCvB,GAAIgQ,cACJ5J,SAAUvN,EACVokB,OAAO,OAEXvnB,QAAS,kBAAMsnB,GAAa,MAChC,cAAC,kBAAD,CACIU,YAAa,CAACN,gBAAcC,aAAcD,gBAAcO,YAAaP,gBAAcQ,eACnFC,4BAA4B,EAC5BC,WAAW,aACXC,aA5FS,SAAChoB,GAClB,OAAOA,EAAOiK,IACV,IAAK,gBACDgd,GAAa,GACb,MACJ,IAAK,aACEjnB,EAAOioB,QAAQC,WAAWhB,MACzB9lB,QAAQuH,IAAI,QAETjK,EAAMie,YAAYje,EAAMie,WAAW3c,EAAOioB,QAAQC,YAEzD,MACJ,IAAK,iBACD,IAAI/X,EAAQnQ,EAAO0B,MAAM0O,cAErB+X,EAAehY,EAAMtQ,KAAI,SAACC,GAAD,OAAOA,EAAEgE,QAAMskB,QAAO,SAAC7jB,EAAG4O,GAAJ,OAAU5O,EAAE4O,KAG3D6I,EAAW,EAEfpB,IAAM/a,IAAIsQ,GAAO,SAACN,EAAMC,GACpB,sBAAC,0CAAAvL,EAAA,sDACO8jB,EAAOC,EAAOjN,KAAK,IAD1B,iCAE6B3c,EAAMqnB,KAAKnZ,KAAK2b,IAAI1Y,EAAKgG,MAFtD,yHAEoB2S,EAFpB,EAGOH,EAAOC,EAAO9c,OAAO,CAAC6c,EAAMG,IAC5BxM,GAAYwM,EAAM9oB,OAClBhB,EAAM+d,mBAAoBT,EAAWmM,EAAgB,KAL5D,iTAOGrY,EAAG,KAAD,YAAC,eACID,GADL,IAEE4Y,QAASJ,KAThB,2EAAD,MAYD,SAACtN,EAAK2N,GAGL,GAFAtnB,QAAQuH,IAAI+f,GACZhqB,EAAMge,gBACe,GAAlBgM,EAAQhpB,OACPipB,IAAW,IAAIC,KAAK,CAACF,EAAQ,GAAGD,UAAWC,EAAQ,GAAG5lB,UACrD,CAID,IAFA,IAAI+lB,EAAMC,MAEFpY,EAAI,EAAGA,EAAIgY,EAAQhpB,OAAQgR,IAC/BtP,QAAQuH,IAAI,OAAQ+f,EAAQhY,GAAG5N,KAAM4lB,EAAQhY,GAAG+X,QAAQ/oB,QACxDmpB,EAAIhZ,KAAK6Y,EAAQhY,GAAG5N,KAAM4lB,EAAQhY,GAAG+X,QAAS,CAACM,QAAQ,IAE3DF,EAAIG,cAAc,CAAC9jB,KAAM,SAASmE,MAAK,SAACof,GACpCrnB,QAAQuH,IAAI8f,GACZQ,iBAAOR,EAAS,iCA6C5BtY,OAAQA,GAAS,IAAI7L,QAAO,SAACC,GAAD,OAAOA,IAAMA,EAAE8L,UAAY9L,EAAEzB,SAAO0I,OAAOgc,GAAS3nB,KAAI,SAACC,EAAGiY,GAAJ,MAAY,CAC5F9N,GAAInK,EAAEmK,GACN4L,IAAK/V,EAAE+V,IACP/R,KAAMhE,EAAEgE,KACRolB,IAAKppB,EAAE2b,UACPA,UAAW3b,EAAE2b,UACbyL,MAAOpnB,EAAEonB,MACTpkB,KAAMhD,EAAEmK,GAAKnK,EAAEuQ,SAAWvQ,EAAEgD,SAE/BqkB,YAAaA,KAIhBzoB,EAAMqnB,KAAKF,SACL,sBAAK7mB,UAAU,cAAf,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CAAYkD,QAAQ,KAAKjC,MAAO,CAACiW,WAAY,QAA7C,6C,+NChKT,SAASiT,EAAazqB,GAAO,IAAD,EACbC,IAAMC,SAAS,IADF,mBAC/BkE,EAD+B,KACzBsmB,EADyB,KAGjCC,EAAY,WACX3qB,EAAMgpB,OAAOhpB,EAAMgpB,MAAM5kB,GAC5BsmB,EAAQ,IACR1qB,EAAMiB,WAGV,OACI,eAAC,IAAD,CAAQH,KAAMd,EAAMc,KAAMG,QAASjB,EAAMiB,QAAzC,UACI,cAAC,IAAD,yBACA,cAAC,IAAD,UACI,cAAC,IAAD,CACImjB,UAAW,SAAC5jB,GACQ,IAAbA,EAAE6jB,SACDsG,KAGR9nB,MAAOuB,EACPL,SAAU,SAACvD,GAAD,OAAOkqB,EAAQlqB,EAAE2E,OAAOtC,QAClCjB,MAAM,kBAEd,eAAC,IAAD,WACI,cAAC,IAAD,CAAQrB,QAASP,EAAMO,QAAvB,oBACA,cAAC,IAAD,CAAQA,QAASoqB,EAAWnpB,MAAM,UAAUgC,QAAQ,YAApD,4B,2JC/BVonB,EAAeC,IAAWC,UAAUC,OAAOC,aAEpChD,EAAW,SAACzF,GAAD,MAAe,CACnC0I,QAAS,CACLC,UAAW,CAACL,KACZM,YAAa,CAACC,KACdC,eAAgB,CAACC,SACjBC,cAAe,IAAIC,IAAU5B,EAAOjN,KAAK4F,KAE7CkF,OAAQ,CACJyD,UAAU,eACLN,EAAe,CACZ/C,SAAS,IAGjB4D,cAAc,aACVC,UAAU,GACTb,IAAWc,IAAM,CACd9D,SAAS,S,2NCoDVb,iBA3Df,SAA2BhnB,GAEvB,IAAMmR,EAAOnR,EAAMmR,MAAQ,GAFE,EAGLlR,IAAMC,SAAS,MAHV,mBAGtByF,EAHsB,KAGhBiY,EAHgB,KA0B7B3d,IAAMqC,UAAN,sBAAiB,4CAAAuD,EAAA,yDACVF,GAAMimB,IAAIC,gBAAgBlmB,KAE1B3F,EAAMmR,MAAQnR,EAAMqnB,MAAQrnB,EAAMqnB,KAAKF,SAH7B,iBAITzkB,QAAQuH,IAAI,WAAYjK,EAAMmR,KAAKgG,KAC/BhG,EAAQnR,EAAMqnB,KAAKnZ,KAAK2b,IAAI7pB,EAAMmR,KAAKgG,KACvCxR,EAAOikB,EAAOjN,KAAK,IANd,iCAOiBxL,GAPjB,2HAOQ2Y,EAPR,EAQPnkB,EAAOikB,EAAO9c,OAAO,CAACnH,EAAMmkB,IARrB,iTAUTpnB,QAAQuH,IAAI,gBACZ2T,EAAQgO,IAAIE,gBAAgB,IAAI5B,KAAK,CAACvkB,MAX7B,4EAad,CAAC3F,EAAMmR,KAAMnR,EAAMqnB,OAEtB,IAAMpmB,EAAU,WACT0E,GAAMimB,IAAIC,gBAAgBlmB,GAC1B3F,EAAMiB,SAASjB,EAAMiB,WAG5B,OACI,eAAC,IAAD,CAAQ0F,WAAS,EAAColB,SAAS,KAAKjrB,KAAMd,EAAMc,KAAMG,QAASA,EAA3D,UACI,cAAC,IAAD,UAAckQ,EAAKQ,WACnB,cAAC,IAAD,CAAepQ,MAAO,CAACoD,QAAS,OAAQC,cAAe,SAAUuK,WAAY,UAA7E,SA5Cc,WAClB,GAAGxJ,EACH,OAAOwL,EAAK4L,WACR,IAAK,MACD,OACI,cAAC,IAAD,CAASpX,KAAMA,IAEvB,IAAK,MACD,OACI,cAAC,IAAD,CAASA,KAAMA,IAEvB,IAAK,MACD,OACI,qBAAKpE,MAAO,CAAC6N,MAAO,MAAO1K,OAAQ,QAAS2c,IAAK1b,IAEzD,QACI,OAAO,MA6BNqmB,KAEL,cAAC,IAAD,UACI,cAAC,IAAD,CAAQzrB,QAASU,EAAjB,6B,uHClED,SAASgrB,EAAQjsB,GAC5B,IAAIksB,EACAC,EACAC,EAGJnsB,IAAMqC,WAAU,WACZ,IAAM+pB,EAAiB,WACfD,GACFA,EAAOE,UAGb,GAAGtsB,EAAM2F,KAAK,CAGVymB,IACJA,EAAS,IAAI9f,OAAOigB,QAAQC,OACxBN,GACA,IAIAC,IACJA,EAAQ,IAAI7f,OAAOigB,QAAQE,MAAML,IAC3BM,2BAGN,IAAIC,EAAS,IAAIrgB,OAAOigB,QAAQK,gBAAgB,UAAWC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,IAAK,EAAG,IAAIxgB,OAAOigB,QAAQQ,QAAQ,EAAG,EAAG,IAAKZ,GAEhIQ,EAAOK,UAAU1gB,OAAOigB,QAAQQ,QAAQE,QACxCN,EAAOO,KAAO,EACdP,EAAOQ,eAAiB,EACxBR,EAAOS,MAAQ,GAEf1qB,QAAQuH,IAAIjK,EAAM2F,MAElB2G,OAAOigB,QAAQc,YAAYC,WAAW,KAAM,GAAIttB,EAAM2F,KAAMwmB,GAAO,SAAC3rB,GAChEkC,QAAQuH,IAAIzJ,KACb,KAAM,KAAM,QAEfmsB,EAAOY,cAAcrB,GAAQ,GAC7B5f,OAAOkhB,iBAAiB,SAAUnB,GAClCD,EAAOqB,eAAc,WACjBtB,EAAM9R,YAKd,OAAO,WACA+R,GACCA,EAAOsB,iBAERvB,IACCA,EAAMwB,UACNxB,EAAQ,MAGZ7f,OAAOshB,oBAAoB,SAAUvB,MAEtC,CAACrsB,EAAM2F,OAQV,OACI,wBAAQpE,MAAO,CAAC6N,MAAO,QAASye,IAPf,SAAC1b,GACT,OAANA,IACC+Z,EAAS/Z,Q,+GC9DN,SAAS2b,EAAQ9tB,GAAO,IAAD,EAEAC,IAAMC,SAAS,MAFf,mBAE1B6tB,EAF0B,KAEhBC,EAFgB,OAGI/tB,IAAMC,SAAS,GAHnB,6BASlC,OACI,cAAC,IAAD,CACIiR,KAAM,CAACxL,KAAM3F,EAAM2F,MACnBsoB,cAPe,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SACrBC,EAAYD,IAIZ,SAIMvb,MAAMmK,KACJ,IAAInK,MAAMub,IACV,SAACG,EAAIC,GAAL,OACE,cAAC,IAAD,CAEEC,WAAYD,EAAQ,GAFtB,eACeA,EAAQ,W","file":"static/js/main.fc886160.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    MoreVert\n} from '@material-ui/icons'\n\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    Typography\n} from '@material-ui/core';\n\nexport default function MoreMenu(props){\n    const [ menuOpen, openMenu ] = React.useState(null);\n\n    const toggleMenu = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        openMenu(e.currentTarget)\n    }\n\n    return [\n        <IconButton className=\"more-menu\" onClick={toggleMenu}>\n            <MoreVert />\n        </IconButton>,\n        <Menu open={props.menu.length > 0 && menuOpen} onClose={() => openMenu(null)} anchorEl={menuOpen}>\n            {props.menu.map((x) => {\n                return (\n                    <MenuItem onClick={(e) => {\n                        e.stopPropagation()\n                        openMenu(null)\n                        x.action()\n                    }} style={{color: x.color || 'black'}}>\n                        {x.icon}\n                        <Typography style={{marginLeft: 8}}>\n                            {x.label}\n                        </Typography>\n                    </MenuItem>\n                )\n            })}\n        </Menu>\n    ]\n}","import React from 'react';\nimport * as Y from 'yjs';\nimport { WebsocketProvider } from 'y-websocket';\n\nexport default function (onlineAction){\n\n    const ydoc = new Y.Doc();\n    //let host = new URL(window.location).hostname;\n  let host = \"thetechcompany.workhub.services\"\n    const websocketProvider = new WebsocketProvider(`wss://${host}:1234`, 'workhub', ydoc)\n\n    websocketProvider.on('status', event => {\n      if(onlineAction) onlineAction(event.status)\n    })\n    const yArray = ydoc.getMap('')\n  \n    return ydoc;\n  }\n\nexport const YContext = React.createContext()\n\nexport const YProvider = (props) => {\n  let [ ydoc, setYDoc ] = React.useState(new Y.Doc());\n  let [ websocketProvider, setWebsocketProvider ] = React.useState(null);\n  let [ status, setStatus ] = React.useState('disconnected')\n\n  React.useEffect(() => {\n    let host = \"thetechcompany.workhub.services\"\n\n    websocketProvider = new WebsocketProvider(`wss://${host}:1234`, 'workhub', ydoc)\n\n    websocketProvider.on('status', event => {\n      console.info('=> YJS Status', event.status)\n      setStatus(event.status)\n    })\n\n    setWebsocketProvider(websocketProvider)\n  }, [])\n    \n  //let host = new URL(window.location).hostname;\n\n  return <YContext.Provider value={{ydoc, status}}>\n      {props.children}\n    </YContext.Provider>\n}","import React from 'react';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n    Notifications\n} from \"@material-ui/icons\"\n\nimport {\n    Paper,\n    Typography,\n    Tabs,\n    Tab\n} from '@material-ui/core';\nimport { YContext } from '../../graph/yjs';\nimport { connect } from 'react-redux';\nimport './index.css';\n\nfunction DashboardHeader(props){\n    const { status } = React.useContext(YContext)\n\n    return (\n        <Paper className=\"dashapp-header\">\n        <Typography variant=\"h6\">{props.title}</Typography>\n        <div className=\"dashapp-header__tabs\">\n            <Tabs value={props.tabs.map((x) => x.toLowerCase()).indexOf(props.selectedTab.toLowerCase())} onChange={(e, newVal) => {\n                props.onTabSelect(props.tabs[newVal])\n            }}>\n            {(props.tabs || []).map((x) => (\n                <Tab label={x} />\n            ))}\n            </Tabs>\n\n        </div>\n        <div className=\"actions-col\">\n          <Notifications />\n          <div className=\"user-info\">\n            <Typography variant=\"subtitle1\">{props.user.name}</Typography>\n            <div className={status}><div className=\"bubble\" />{status == \"connected\" ? \"Online\" : \"Offline\"}</div>\n          </div>\n        </div>\n        </Paper>\n    )\n}\n\nexport default connect((state) => ({\n    status: state.auth.status,\n    user: jwt_decode(state.auth.token)\n}), (dispatch) => ({\n\n}))(DashboardHeader)","import React from 'react';\n\nimport {\n    Search,\n    ViewHeadline,\n    ViewModule\n} from '@material-ui/icons';\n\nimport {\n    Paper,\n    TextField,\n    ButtonGroup,\n    Button,\n    Divider,\n    List,\n    ListItem,\n    InputAdornment\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function SearchTable(props){\n    const [ search, setSearch ] = React.useState('')\n\n    return (\n        <Paper style={{flex: '1 1 auto', marginTop: 12, height: 0, display: 'flex', flexDirection: 'column'}}>\n            <div className=\"options-bar\">\n                <TextField\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }}\n                    label=\"Search\"\n                    value={search}\n                    onChange={(e) => {\n                        setSearch(e.target.value)\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\" />\n                <ButtonGroup>\n                    <Button><ViewHeadline /></Button>\n                    <Button><ViewModule /></Button>\n                </ButtonGroup>\n            </div>\n            <Divider />\n            <div className=\"grid-list\">\n                <List>\n                    {props.data.filter((a) => {\n                        if(props.filter && search.length > 0){\n                            return props.filter(a, search)\n                        }\n                        return true;\n                    }).map((x) => (\n                    <ListItem>\n                        {props.renderItem(x)}\n                    </ListItem>\n                    ))}\n                </List>\n            </div>\n        </Paper>\n    )\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    Dialog,\n    DialogTitle,\n    TextField,\n    DialogActions,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    DialogContent\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function PermissionForm(props){\n    const [dialogOpen, openDialog] = React.useState(false)\n\n    const [ changes, setChanges ] = React.useState({})\n    const [ dataObj, setDataObj ] = React.useState({})\n\n    const permissions = props.permissions && props.permissions[0] || {}\n    const type = props.type && props.type[0] || {}\n\n    React.useEffect(() => {\n        if(props.selected){\n            setDataObj(props.selected)\n        }\n    }, [props.selected])\n\n    const renderFields = (type) => {\n        let fields = [];\n    \n        for(var k in type.typeDef){\n            const typeKey = k;\n            switch(type.typeDef[k]){\n                case \"String\":\n                fields.push((\n                    <TextField value={dataObj[typeKey]} onChange={(e) => {\n                        let d = Object.assign({}, dataObj);\n                        let changed = Object.assign({}, changes)\n                        d[typeKey] = e.target.value;\n                        changed[typeKey] = e.target.value;\n                        setDataObj(d)\n                        setChanges(changed)\n                    }} label={typeKey} ></TextField>\n                ))\n                break;\n                case \"Boolean\":\n                    fields.push((\n                        <FormControlLabel\n                            control={(\n                                <Checkbox checked={dataObj[typeKey]} onChange={(e) => {\n                                    let d = Object.assign({}, dataObj)\n                                    let changed = Object.assign({}, changes)\n                                    d[typeKey] = e.target.checked;\n                                    changed[typeKey] = e.target.checked;\n                                    setDataObj(d)\n                                    setChanges(changed)\n                                }}/>\n                            )}\n                            label={typeKey} />\n\n                    ))\n            }\n        }\n        return fields;\n    }\n\n    const onClose = () => {\n        props.onClose()\n        openDialog(false)\n        setDataObj({})\n    }\n\n    const onSave = () => {\n        props.onSave(dataObj, changes)\n        onClose();\n    }\n\n    return (\n        <div className=\"permission-form\" style={props.style}>\n            <Dialog fullWidth open={props.selected || dialogOpen} onClose={() => {\n               onClose()\n            }}>\n                <DialogTitle>{type.name}</DialogTitle>\n                <DialogContent style={{display: 'flex', flexDirection: \"column\"}}>\n                    {renderFields(type)}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => {onClose()}}>Cancel</Button>\n                    <Button onClick={() => onSave()} color=\"primary\" variant=\"contained\">Save</Button>\n                </DialogActions>\n            </Dialog>\n            <div className=\"permission-form__inner\">\n                {props.children}\n            </div>\n            {permissions.create && (\n                <Fab onClick={() => openDialog(true)} color=\"primary\" style={{position: 'absolute', bottom: 12, right: 12}}>\n                    <Add />\n                </Fab>\n            )}\n        </div>\n    )\n}","//Projects\nexport const SET_PROJECTS = \"SET_PROJECTS\";\nexport const ADD_PROJECT = \"ADD_PROJECT\"\nexport const REMOVE_PROJECT = \"REMOVE_PROJECT\"\nexport const UPDATE_PROJECT = \"UPDATE_PROJECT\"\n\n//Team\nexport const SET_TEAM = 'SET_TEAM';\nexport const ADD_TEAM_MEMBER = \"ADD_TEAM_MEMBER\";\nexport const REMOVE_TEAM_MEMBER = \"REMOVE_TEAM_MEMBER\"\nexport const UPDATE_TEAM_MEMBER = \"UPDATE_TEAM_MEMBER\"\n\n//Equipment\nexport const SET_EQUIPMENT = \"SET_EQUIPMENT\";\nexport const ADD_EQUIPMENT = \"ADD_EQUIPMENT\";\nexport const UPDATE_EQUIPMENT = \"UPDATE_EQUIPMENT\"\nexport const REMOVE_EQUIPMENT = \"REMOVE_EQUIPMENT\"\n\nexport const SET_FILES = \"SET_FILES\";\n\n//Calendar things\nexport const SET_BOOKINGS = \"SET_BOOKINGS\";\nexport const ADD_BOOKING = \"ADD_BOOKING\";\n\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_STATUS = 'SET_STATUS';\n\nexport const SET_NODE_CONF = 'SET_NODE_CONF';\n\nexport const ADD_FILE = 'ADD_FILE';\n\nexport const SET_DASHBOARD_TYPES = 'SET_DASHBOARD_TYPES';\nexport const SET_DASHBOARD_PERMS = 'SET_DASHBOARD_PERMS';\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client'\n\nexport default () => {\n  try{\n  return new ApolloClient({\n    link: createUploadLink({\n      uri: (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? \n        'https://thetechcompany.workhub.services/graphql' || 'http://localhost:4000/graphql' : \n        process.env.REACT_APP_GRAPH_URL || '/graphql',\n    }),\n    cache: new InMemoryCache({\n      addTypename: false\n    })\n  })\n  }catch(e){\n    console.log(e)\n  }\n}\n","import * as types from './types';\nimport { gql } from '@apollo/client';\nimport { cloneDeep } from 'lodash';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addProject = (project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n      mutation AddProject($project: ProjectInput){\n        addProject(project: $project){\n          id\n          name\n          description\n          status\n        }\n      }\n    `,\n    variables: {\n      project: project\n    }\n    }).then((r) => r.data.addProject).then((r) => {\n      dispatch({type: types.ADD_PROJECT, newProject: r})\n    })\n  }\n}\n\nexport const updateProject = (projectId, project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n  mutation UpdateProject($projectId: ID, $project: ProjectInput){\n    updateProject(projectId: $projectId, project: $project){\n      id\n      name\n      description\n      status\n    }\n  }\n`, \nvariables: {\n  projectId: projectId,\n  project: project\n}}).then((r) => r.data.updateProject).then((r) => {\n  dispatch({type: types.UPDATE_PROJECT, project: project, id: projectId})\n})\n} \n  }\n\n  export const removeProject = (projectId) => {\n    return (dispatch) => {\n      return client.mutate({\n        mutation: gql`\n          mutation RemoveProject($projectId: ID){\n            removeProject(projectId: $projectId)\n          }\n        `,\n          variables: {\n            projectId: projectId\n          }\n      }).then((r) => r.data.removeProject).then((r) => {\n        if(r) dispatch({type: types.REMOVE_PROJECT, id: projectId})\n      })\n    }\n\n  }\n\nexport const getProjects = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetProjects {\n          projects{\n            id\n            name\n            description\n            status\n            files{\n              filename\n              cid\n            }\n          }\n        }\n      `\n    }).then((r) => {\n      dispatch({type: types.SET_PROJECTS, projects: r.data.projects.map((x) => {\n        let y = cloneDeep(x)\n        delete y.__typename;\n        return y;\n      })})      \n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  ViewHeadline,\n  ViewModule,\n  Search,\n  Add\n} from '@material-ui/icons';\n\nimport {\n  List,\n  ListItem,\n  InputAdornment,\n  ButtonGroup,\n  Button,\n  Paper,\n  Divider,\n  TextField,\n  Fab,\n  Typography\n} from '@material-ui/core';\n\nimport MoreMenu from '../../components/more-menu';\nimport DashboardHeader from '../../components/dashboard-header';\n\nimport { useMutation } from '@apollo/client'\nimport { connect } from 'react-redux';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { updateProject, addProject, removeProject,   getProjects } from '../../actions/projectActions';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\n\nimport './index.css';\n\nfunction Projects(props){\n  const query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n  const [ selected, setSelected ] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getProjects() \n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[\"ALL\", ...new Set(props.projects.filter((a) => a.status != null && a.status != undefined).map((x) => x.status.trim().toUpperCase()))] || []}\n    onTabSelect={(tab) => {\n      if(tab == \"ALL\"){\n        delete query_string.status;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }else{\n        query_string.status = tab;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={query_string.status && query_string.status.toUpperCase() || 'ALL'}\n    title={\"Projects\"} />,\n    <PermissionForm\n      onSave={(obj, data) => {\n        if(obj.id){\n          let d = Object.assign({}, data);\n          delete d.id\n          props.updateProject(obj.id, d)\n        }else{\n          props.addProject(data)\n        }\n      }} \n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable\n        filter={(item, search) => item.name.indexOf(search) > -1}\n        data={props.projects.filter((a) => {\n          if(query_string.status && a.status == query_string.status){\n            return true;\n          }else if(!query_string.status){\n            return true;\n          }\n          return false;\n        }).filter((a) => a.name)}\n        renderItem={(item) => [\n          <div className=\"project-item\">\n            <ListItem button onClick={() => {\n              props.history.push(`${props.match.url}/${item.id}/plan`)\n              }}>\n              <Typography style={{flex: 1}} variant=\"subtitle1\">{item.name}</Typography>\n            </ListItem>\n            <MoreMenu \n              menu={[\n              ].concat(props.user.admin ? [\n                {\n                  label: \"Edit\",\n                  action: () => setSelected(item)\n                },\n                {\n                  label: \"Delete\",\n                  color: 'red',\n                  action: () => props.removeProject(item.id)\n                }\n              ] : [])} />\n          </div>\n        ]} />\n\n    </PermissionForm>\n\n  ]\n}\n\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  projects: state.projects.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Projects\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Projects\")\n}), (dispatch) => ({\n  getProjects: () => dispatch(getProjects()),\n  addProject: (project) => dispatch(addProject(project)),\n  updateProject: (id, project) => dispatch(updateProject(id, project)),\n  removeProject: (id) => dispatch(removeProject(id))\n}))(Projects)\n","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPDATE_INTEGRATION_MAP = gql`\n  mutation UpdateIntegrationMap($nodes: [MapNodeInput], $links: [MapLinkInput]){\n    updateIntegrationMap(nodes: $nodes, links: $links){\n      nodes{\n        id\n        type\n        data\n        position{\n          x\n          y\n        }\n      }\n      links{\n        id\n        target\n        source\n      }\n    }\n  }\n`\n\nexport const getPermissions = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n      query GetPermissions{\n        typePermissions{\n          type\n          create\n          read\n          update\n          delete\n        }\n      }\n      `\n    }).then((r) => r.data.typePermissions).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_PERMS, perms: r})\n    })\n  }\n}\n\nexport const getIntegrationMap = () => {\n  return client.query({\n    query: gql`\n      query GetIntegrations{\n        integrationMap{\n          nodes{\n            id\n            type\n            data\n            position{\n              x\n              y\n            }\n          }\n          links{\n            id\n            target\n            source\n          }\n        }\n      }\n    `\n  }).then((r) => r.data.integrationMap)\n}\n\nexport const getTypes = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetTypes{\n          adminTypes{\n            name\n            typeDef\n          }\n        }\n      `\n    }).then((r) => r.data.adminTypes).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_TYPES, types: r})\n    })\n  }\n \n}\n\nexport const getTables = (store) => {\n    return client.query({\n      query: gql`\n        query GetLayout{\n          connectionLayout(storeId: \"${store}\"){\n            name\n          }\n        }\n      `\n    }).then((r) => {\n      return r.data.connectionLayout;\n    })\n}\n\nexport const getColumns = (store, table) => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            bucketLayout(storeId: \"${store}\", bucketId: \"${table}\"){\n              name\n              datatype\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.bucketLayout;\n      })\n}\n\nexport const getViews = () => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            getSQLViews{\n              name\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.getSQLViews;\n      })\n}\n","import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport moment from 'moment';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n        <textarea \n          onChange={(e) => props.editor.updateNode(props.id, (node) => {return {data: {label: e.target.value}}})}\n          value={props.data && props.data.label} \n          rows={4}\n          placeholder=\"Project Title\" />\n        <div style={{display: 'flex'}}>\n            {props.data && props.data.dueDate && \"ETA:\"} {props.data && moment(new Date(props.data.dueDate * 1000)).format('DD/MM/yyyy')}\n        </div>\n    </NodeWrapper>\n    )\n})","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const LOGIN = gql`\n    mutation Login($username: String, $password: String){\n        login(username: $username, password: $password){\n            token\n            error\n        }\n    }\n`\n\nexport const getQuote = () => {\n    return fetch('https://zenquotes.io/api/today').then((r) => r.json())\n}\n\nexport const getNodeConf = () => {\n    return (dispatch) => {\n        return client.mutate({\n            mutation: gql`\n                mutation GetNode{\n                    connectNode{\n                        swarmKey\n                        peerDiscovery\n                    }\n                }\n            `\n        }).then((r) => r.data.connectNode).then((r) => {\n            dispatch({type: types.SET_NODE_CONF, swarmKey: r.swarmKey})\n        })\n    }\n}\n\nexport const setToken = (token) => {\n    return (dispatch) => {\n        dispatch({type: types.SET_TOKEN, token: token})\n    }\n}\n\nexport const setStatus = (status) => {\n    return (dispatch) => {\n        dispatch({type: types.SET_STATUS, status: status})\n    }\n}","import React from 'react';\nimport {YContext} from '../../graph/yjs';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../../actions/authActions';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport './calendar.css';\n\nlet yDoc;\n\nconst localizer = momentLocalizer(moment)\nfunction CalendarTab(props){\n    const {ydoc} = React.useContext(YContext);\n\n    const [ bookings, setBookings ] = React.useState([])\n    const [ nodes, setNodes ] = React.useState([])\n    const [ doc, setDoc ] = React.useState(null)\n    const [ docProject, setProject ] = React.useState({})\n\n    const observer = () => {\n        if(yDoc){\n          let obj = yDoc.toJSON()\n          console.log(\"OBSERVE\", obj)\n          if(obj.nodes != null){\n            setNodes(obj.nodes.map((x) => Object.assign({}, x)))\n          }\n        \n        }\n      }\n  \n      React.useEffect(() => {\n        console.log(\"YDC\", props)\n        if(props.project && ydoc && props.project.id != docProject.id){\n          if(doc) doc.unobserve(observer);\n  \n          console.log(\"Setting up YDOC\")\n          let _doc = ydoc.getMap(`plan-${props.project.id}`)\n          yDoc = _doc;\n            setDoc(_doc)\n          _doc.observe(observer)\n  \n          setProject(props.project)\n          \n          let init = _doc.toJSON();\n  \n          if(init.nodes != null) setNodes(init.nodes)\n        }\n      }, [props.project, doc])\n\n    return (\n        <div className=\"calendar-tab\">\n            <Calendar\n                localizer={localizer}\n                events={nodes.filter((a) => a.data && a.data.dueDate).map((x) => ({\n                    id: x.id,\n                    title: x.data.label,\n                    allDay: false,\n                    start: new Date(((x.data.dueDate)*1000) -( 5 * 1000 * 60)),\n                    end: new Date((x.data.dueDate)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch) => ({\n  setStatus: (status) => dispatch(setStatus(status))\n}))(CalendarTab)","import * as types from './types';\nimport { gql, useMutation } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPLOAD_FILE = gql`\n    mutation UploadFile($file: Upload!){\n      uploadFile(file: $file) {\n        duplicate\n        file{\n          id\n          filename\n          cid\n          extension\n        }\n      }\n    }\n  `\n\nexport const uploadFile = (file, cb) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: UPLOAD_FILE,\n      variables: {\n        file: file\n      }\n    }).then((r) => r.data.uploadFile).then((r) => {\n      console.log(\"Upload file\")\n      cb(r.file)\n      if(!r.duplicate){\n        dispatch(addFile(r.file))\n      }\n    })\n  }\n}\n\nexport const attachFile = (projectId, fileId) => {\n  client.mutate({\n    mutation: gql`\n    mutation AttachFile($projectId: ID, $fileId: ID){\n      attachFileToProject(projectId: $projectId, fileId: $fileId){\n        files{\n          cid\n        }\n      }\n    }\n    `,\n    variables: {\n      projectId: projectId,\n      fileId: fileId\n    }\n  }).then((r) => r.data.attachFileToProject).then((r) => {\n      console.log(r)\n  }) \n}\n\nexport const convertFile = (fileId, targetFormat) => {\n  client.mutate({\n    mutation: gql`\n    mutation ConvertFile($fileId: ID, $targetFormat:String){\n      convertFile(fileId: $fileId, targetFormat: $targetFormat){\n        msg\n        error\n      }\n    }\n  `,\n    variables: {\n      fileId,\n      targetFormat\n    }\n  }).then((r) => r.data.convertFile)\n}\n\nexport const getConverters = () => {\n  return client.query({\n    query: gql`\n      query GetConverters{\n        converters{\n          id\n          name\n          sourceFormat\n          targetFormat\n          installed\n        }\n      }\n    `\n  }).then((r) => r.data.converters)\n}\n\nexport const installConverter = (id) => {\n  return client.mutate({\n    mutation: gql`\n      mutation InstallConverter($converterId: ID){\n        installConverter(converterId: $converterId)\n      }\n    `,\n    variables: {\n      converterId: id\n    }\n  })\n}\n\nexport const addFile = (file) => {\n  return (dispatch) => {\n    dispatch({type: types.ADD_FILE, file: file})\n  }\n}\n\nexport const getFiles = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetFiles{\n          files{\n            id\n            filename\n            cid\n            extension\n            conversion{\n              extension\n              cid\n            }\n          }\n        }\n      `\n    }).then((r) => r.data.files).then((r) => {\n      dispatch({type: types.SET_FILES, files: r})\n    })\n  }\n}\n\n","import React from 'react';\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    List,\n    ListItem,\n    Button,\n    InputAdornment,\n    TextField,\n    Checkbox\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nfunction FileDialog(props){\n    const [ search, setSearch ] = React.useState('')\n\n    const [ selectedFiles, setSelected ] = React.useState({})\n\n    const attachFiles = () => {\n        if(props.onAttach){\n            props.onAttach(selectedFiles)\n            setSelected({})\n            props.onClose()\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Files</DialogTitle>\n            <DialogContent>\n                <TextField \n                    fullWidth \n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    label=\"Search\" \n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }} />\n                <List>\n                    {props.files.filter((a) => a.filename && a.filename.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                        <ListItem button><Checkbox checked={selectedFiles[x.id]} onChange={(e) => {\n                            let files = selectedFiles;\n                            files[x.id] = e.target.checked;\n                            setSelected(files)\n                        }}/>{x.filename}</ListItem>\n                    ))}    \n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Close</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={attachFiles}>Attach</Button>\n            </DialogActions>\n\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    files: state.files.list\n}))(FileDialog)","import React from 'react'\n\nimport {\n    Avatar\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\nimport './index.css';\n\nfunction hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n       hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n} \n\nfunction intToRGB(i){\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nfunction TeamCircles(props){\n    let getMember = (id) => {\n        return props.team.filter((a) => a.id == id)[0]\n    }\n    console.log(props.members, Array.isArray(props.members))\n    return (\n        <div className=\"team-circles\">\n            {props.members && (Array.isArray(props.members) ? props.members : []).map((mbr) => {\n                let member = getMember(mbr)\n                return <Avatar style={{backgroundColor: '#'+ intToRGB(hashCode(member.name))}}>{member.name.split(' ').map((x) => x.substring(0, 1))}</Avatar>\n            })}\n        </div>\n    )\n}\n\nexport default connect((state) => ({\n    team: state.team.list\n}))(TeamCircles)","import React from 'react';\n\nimport moment from 'moment';\nimport Board from '@lourenci/react-kanban'\nimport TeamCircles from '../team-circles';\nimport { connect } from 'react-redux';\n\nimport '@lourenci/react-kanban/dist/styles.css'\nimport './index.css';\n\n\nfunction GraphKanban(props){\n    const [ columns, setColumns ] = React.useState([\n        {\n            id: 0,\n            title: 'Blocked',\n            cards: []\n        },\n        {\n            id: 1,\n            title: 'Backlog',\n            cards: props.graph.nodes.filter((a) => a.status != \"COMPLETED\" && a.status != \"BLOCKED\").map((x) => ({\n                id: x.id,\n                title: x.data.label,\n            }))\n        },\n        {\n            id: 2,\n            title: 'Doing',\n            cards: []\n        },\n        {\n            id: 3,\n            title: 'Done',\n            cards: []\n        }\n    ])\n\n    const getColumns = () => {\n        let template = []\n        if(props.template){\n            template = props.template || [];\n        }\n\n        return template.map((col) => {\n            let col_id = col.id;\n\n            let cards = props.graph.nodes.filter((a) => {\n                return a.data.status == col.status\n            }) || []\n\n            console.log(cards)\n            return {\n                ...col,\n                cards: cards.sort((a, b) => {\n\n                    if(!(a.data && a.data.dueDate)) a.data.dueDate = Infinity;\n                    if(!(b.data && b.data.dueDate)) b.data.dueDate = Infinity\n\n                    return a.data.dueDate - b.data.dueDate\n                }).map((x) => {\n                    let parents = props.graph.links.filter((a) => a.target == x.id).map((y) => props.graph.nodes.filter((a) => a.id == y.source)[0])\nreturn {\n                    ...x,\n                    title: x.data.label,\n                    description: parents.length > 0 && parents[0].data.label,\n}\n                })\n            }\n        })\n    }\n\n  \n    return (\n        <Board \n            renderCard={(card) => {\n                return (\n                    <div onClick={() => {\n                        if(props.onClick){\n                            props.onClick(card)\n                        }\n                    }} className=\"react-kanban-card\">\n                        <div className=\"react-kanban-card__title\">\n                            {card.title}\n                          \n                        </div>\n                        {card.data.dueDate != Infinity && <div style={{textAlign: 'left'}}>\n                                ETA: {moment(new Date(card.data.dueDate * 1000)).format('DD/MM/yyyy')}\n                            </div>}\n                        <div>\n                            {card.description}    \n                        </div>\n                        <TeamCircles members={(!Array.isArray(card.members) && typeof(card.members) == \"typeof\") ? [] : card.members || []} />\n                      \n                    </div>\n                )\n            }}\n            onCardDragEnd={(card, source, destination) => {\n                console.log(source, destination)\n                let cols = columns.slice()\n\n                let fromIx = cols.map((x) => x.id).indexOf(source.fromColumnId);\n                let toIx = cols.map((x) => x.id).indexOf(destination.toColumnId)\n\n                let spliced = cols[fromIx].cards.splice(source.fromPosition, 1)\n                cols[toIx].cards.splice(destination.toPosition, 0, spliced[0])\n\n\n                if(props.onStatusChange) props.onStatusChange(card, props.template.filter((a) => a.id == destination.toColumnId)[0].status)\n                if(props.onChange)props.onChange(cols)\n                setColumns(cols)\n            }}\n            onColumnDragEnd={(obj, source, destination) => {\n                let cols = columns.slice()\n\n                let spliced = cols.splice(source.fromPosition, 1)[0]\n                cols.splice(destination.toPosition, 0, spliced)\n                if(props.onChange)props.onChange(cols)\n                setColumns(cols)\n            }}\n            children={{columns: getColumns()}} />\n    )\n}\n\nexport default connect((state) => ({\n    team: state.team.list\n}))(GraphKanban)","import CalendarTab from './calendar';\nimport FileTab from './files';\nimport PlanTab from './plan';\nimport TeamTab from './team';\n\nexport default {\n    CalendarTab,\n    FileTab,\n    PlanTab,\n    TeamTab\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    List,\n    ListItem\n} from '@material-ui/core';\n\nimport { useMutation } from '@apollo/client';\nimport { YContext } from '../../graph/yjs';\n\nimport FileBrowser from '../../components/file-browser';\nimport { attachFile } from '../../actions/fileActions';\nimport FileDialog from '../../components/dialogs/file-dialog';\n\nexport default function FileTab(props){\n\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ files, setFiles ] = React.useState([])\n\n    React.useEffect(() => {\n        if(props.y){\n            console.log(\"Y\", props.y.toJSON())\n            setFiles(props.y.toJSON()['attachments'] || [])\n        }\n    }, [props.y])\n\n    return (\n        <div style={{flex: 1, display: 'flex'}}>\n            <FileBrowser title={props.project.name} files={files}/>\n            <FileDialog onAttach={(selected) => {\n                for(var k in selected){\n                    attachFile(props.project.id, k);\n                    \n                }\n    \n            }} open={dialogOpen} onClose={() => openDialog(false)} />\n            <Fab style={{position: 'absolute', bottom: 12, right: 12}} color=\"primary\" onClick={() => openDialog(true)}>\n                <Add />\n            </Fab>\n\n        </div>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport {\n    Add,\n    Dashboard as DashboardIcon,\n    List as ListIcon,\n    EmojiNature,\n    Edit\n} from '@material-ui/icons';\n\nimport {\n    IconButton,\n    SvgIcon,\n    Collapse,\n    ButtonGroup,\n    Divider,\n    Button\n} from \"@material-ui/core\"\n\n\nimport HiveEditor, {HiveProvider, withEditor, NodePanel} from 'react-hive-flow'\nimport GraphKanban from '../../components/graph-kanban';\n\nimport { merge } from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport { setStatus } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport {YContext} from '../../graph/yjs';\nimport qs from 'qs';\nimport './plan.css';\n\nlet yDoc;\n\nfunction PlanTab(props){\n  const {ydoc} = React.useContext(YContext)\n\n  const [ selectedCard , setSelectedCard ] = React.useState(null)\n  let query = qs.parse(window.location.search, {ignoreQueryPrefix: true})\n  const [ selectedView, _setView ] = React.useState('list')\n\n   \n\n    const [ expanded, setExpanded ] = React.useState(['root'])\n\n    const [ docProject, setProject ] = React.useState({})\n    const [ doc, setDoc ] = React.useState(null)\n    \n\n\n    const [ columnMap, setColumnMap ] = React.useState([])\n\n    const renderKanban = () => {\n      return (\n        <GraphKanban \n          onClick={(card) => {\n            props.editor.exploreNode(card.id)\n          }}\n          onStatusChange={(card, status) => {\n            props.editor.updateNode(card.id, (node) => {\n              return {data: {\n                status: status\n              }}\n            })\n          }}\n          onChange={(cols) => {\n            //Add column -> node mapping to yjs\n            /*let output = cols.map((x) => ({\n              id: x.id,\n              title: x.title,\n              cards: x.cards.map((x) => x.id)\n            }))\n            setColumnMap(output)*/\n          }}\n          template={[\n            {\n              id: 0,\n              title: \"Blocked\",\n              status: \"BLOCKED\"\n            },\n            {\n              id: 1,\n              title: \"Ready to be Done\",\n              status: \"UNFINISHED\"\n            },\n            {\n              id: 2,\n              title: \"Doing\",\n              status: \"IN PROGRESS\"\n            },\n            {\n              id: 3,\n              title: \"Done\",\n              status: \"COMPLETE\"\n            }\n          ]}\n          map={columnMap}\n          graph={{nodes: props.editor.nodes, links: props.editor.links}} />\n      )\n    }\n\n    const renderList = () => {\n      let rootNodes = props.editor.nodes.filter((x) => props.editor.links.filter((a) => a.target == x.id).length == 0)\n//      let rootNodes = links.filter((a) => a.source == 'root').map((x) => nodes.filter((a) =>  a.id == x.target)[0])\n\n      return (\n        <div />\n      )\n    }\n\n    const renderHive = () => {\n      return (\n        <div className=\"plan-hive\">\n        <NodePanel />\n        <HiveEditor />\n        </div>\n      )\n    }\n\n\n    const renderPlan = () => {\n      let view = query.view || 'kanban'\n      switch(view){\n        case 'kanban':\n          return renderKanban()\n        case 'list':\n          return renderList()\n        case 'hive':\n          return renderHive()\n        default:\n          return\n      }\n    }\n\n    const setView = (view) => {\n      if(!query) query = {};\n      query.view = view;\n      props.history.push(`${props.location.pathname}?${qs.stringify(query)}`)\n    }\n\n    let view = query.view || 'kanban';\n\n    return (\n \n        <div style={{padding: 4, display: 'flex', flex: 1, position: 'relative', flexDirection: 'column', width: 'calc(100% - 8px)'}}>\n \n            <div className=\"plan-header\">\n              <div>\n      \n              </div>\n              <ButtonGroup>\n                <Button variant={view == 'kanban' && 'contained'} onClick={() => setView('kanban')}><DashboardIcon /></Button>\n                <Button variant={view == 'list' && 'contained'} onClick={() => setView('list')}><ListIcon /></Button>\n                <Button variant={view == 'hive' && 'contained'} onClick={() => setView('hive')}><EmojiNature /></Button>\n              </ButtonGroup>\n            </div>\n            <Divider />\n            <div className=\"plan-container\">\n            {renderPlan()}\n            </div>\n        </div>\n            )\n}\n\nexport default connect(null, (dispatch) => ({\n  setStatus: (status) => dispatch(setStatus(status))\n}))(withEditor(PlanTab))\n\nfunction MinusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function PlusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function CloseSquare(props) {\n    return (\n      <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n      </SvgIcon>\n    );\n  }\n\n\nfunction TransitionComponent(props) {\n    const style = useSpring({\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\n    });\n  \n    return (\n      <animated.div style={style}>\n        <Collapse {...props} />\n      </animated.div>\n    );\n  }\n  \n  TransitionComponent.propTypes = {\n    /**\n     * Show the component; triggers the enter or exit states\n     */\n    in: PropTypes.bool,\n  };\n  \n  ","import React from 'react';\n\nexport default function TeamTab(props){\n    return (\n        <div>\n            \n        </div>\n    )\n}","import React from 'react';\n\nimport './index.css';\n\nimport { useDropzone } from 'react-dropzone';\n\nexport default function FileDrop(props){\n\n    const onDrop = React.useCallback(acceptedFiles => {\n      if(props.onDrop) props.onDrop(acceptedFiles)\n    })\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, noClick: props.noClick || false})\n\n    return (\n        <div className={`file-drop ${isDragActive && 'active'}`} {...getRootProps()}>\n            <input {...getInputProps()} />\n            {props.children(isDragActive)}\n        </div>\n    )\n}\n","import React from 'react';\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    TextField,\n    Button,\n    Typography,\n    Menu,\n    MenuItem,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    Check\n} from '@material-ui/icons';\n\nimport TeamCircles from '../../team-circles';\nimport FileDrop from '../../file-drop';\nimport { KeyboardDateTimePicker } from '@material-ui/pickers'\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux'\nimport { withEditor } from 'react-hive-flow';\nimport { attachFile, uploadFile } from '../../../actions/fileActions';\nimport moment from 'moment';\n\nimport './index.css';\n\nfunction PlanDialog(props){\n    const [ ID, setID ] = React.useState('')\n    const [ title, setTitle ] = React.useState('')\n    const [ description, setDescription ] = React.useState('')\n    const [ dueDate, setDueDate ] = React.useState(null);\n    const [ members, setMembers ] = React.useState([])\n    const [ attachments, setAttachments ] = React.useState([])\n\n    const [ memberAnchor, setMemberAnchor ] = React.useState(null);\n\n    React.useEffect(() => {\n        if(props.plan && props.plan.data){\n            if(props.plan.id) setID(props.plan.id)\n            if(props.plan.data.label) setTitle(props.plan.data.label)\n            if(props.plan.data.description) setDescription(props.plan.data.description)\n            console.log(\"MEMBERS\", props.plan.members)\n            if(props.plan.members) setMembers(Array.isArray(props.plan.members) ? props.plan.members : [])\n            if(props.plan.attachments) setAttachments(props.plan.data.attachments || [])\n            if(props.plan.data.dueDate) setDueDate(moment(new Date(props.plan.data.dueDate * 1000)))\n        }\n    }, [props.plan])\n\n    const onSave = () => {\n        let plan = {\n            id: ID,\n            title: title,\n            description: description,\n            members: [...new Set(members)] || [],\n            dueDate: dueDate && dueDate.valueOf() / 1000,\n        }\n\n        \n        \n        if(props.onSave){\n            props.onSave(plan)\n            props.onClose();\n        }\n    }\n\n    const addFilesToPlan = (files) => {\n        if(files.length > 0){\n            for(var i = 0; i < files.length; i++){\n                props.uploadFile(files[i], (newFile) => {\n                    props.editor.attachFile(newFile.filename, newFile.cid)\n                    props.editor.updateNode(ID, (node) => {\n                        return {data: {\n                            attachments: (node.data.attachments || []).concat([{name: newFile.filename, cid: newFile.cid}])\n                        }}\n                    })\n                    setAttachments(attachments.concat([{\n                        name: newFile.filename,\n                        cid: newFile.cid\n                    }]))\n                })\n            }\n            console.log(files)\n        }\n    }\n\n    const toggleMembersMenu = (e) => {\n\n        setMemberAnchor(!memberAnchor ? e.currentTarget : null)\n\n    }\n\n    const toggleUser = (user) => {\n        console.log(ID)\n\n        \n        \n        let m = members.slice();\n        console.log(m, user, m.indexOf(user))\n        if(m.indexOf(user) > -1){\n            m.splice(m.indexOf(user), 1)\n            console.log(\"Removing \", )\n        }else{\n            m.push(user)\n        }\n            console.log([...new Set(m)])\n            setMembers([...new Set(m)])\n            //return {members: [...new Set(m)]}\n        \n    \n    }\n\n    return (\n\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <FileDrop onDrop={addFilesToPlan} noClick>\n            {(isDragActive) => (\n                <>\n            <div>{isDragActive && (\n                <div style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: 0,\n                    zIndex: 9,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    backgroundColor: 'rgba(255, 255, 255, 0.5)'\n                }} className=\"file-opacity\">\n                    <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Drop files here</Typography>\n                </div>\n            )}</div>\n            <DialogTitle>\n                <TextField value={title} onChange={(e) => setTitle(e.target.value)} fullWidth label=\"Title\" />\n            </DialogTitle>\n            <DialogContent className=\"plan-dialog__content\">\n                <div className=\"plan-info\">\n                    <TextField \n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        fullWidth \n                        label=\"Description\" \n                        rows={4} multiline rowsMax={6} />\n                    \n                    <div>\n                        <Typography style={{fontWeight: 'bold', marginTop: 4}} variant=\"subtitle1\">Attachments</Typography>\n                        {attachments.map((x) => (\n                            <div>{x.name}</div>\n                        ))}\n                    </div>\n                    <div>\n                        <Typography variant=\"subtitle1\">Members</Typography>\n                        <TeamCircles members={members} />\n                    </div>\n\n                </div>\n                <div className=\"plan-actions\">\n                    <Button \n                        onClick={() => {\n                            toggleUser(props.user.id)\n                        }}\n                        color={[...members].indexOf(props.user.id) > -1 ? \"\" : \"primary\"}\n                        variant=\"contained\">{[...members].indexOf(props.user.id) > -1 ? \"Leave\" : \"Join\"}</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={(e) => {\n                        toggleMembersMenu(e);\n                    }}>Members</Button>\n                    <Menu \n                        onClose={() => setMemberAnchor(null)}\n                        transformOrigin={{vertical: 'top', horizontal: 'center'}}\n                        anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                        open={memberAnchor} \n                        anchorEl={memberAnchor}>\n                            <Divider />\n                        <div style={{padding: 4}}>\n                        <TextField label=\"Name\" />\n                        </div>\n                        <List>\n                            {props.team.map((x) => (\n                                <ListItem button onClick={() => {\n                                   toggleUser(x.id)\n                                  \n                                }}>{[...members].indexOf(x.id) > -1 && <Check style={{marginRight: 8}}/>} {x.name}</ListItem>\n                            ))}\n                        </List>\n                        \n                    </Menu>\n                    <KeyboardDateTimePicker\n                        style={{marginTop: 4}}\n                        label=\"Due Date\"\n                        value={dueDate}\n                        onChange={(e) => {\n                            setDueDate(e)\n                        }}\n                        format={\"DD/MM/yyyy\"} />\n                    <Button color=\"primary\" variant=\"contained\" style={{marginTop: 4}}>Attachments</Button>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={onSave} color=\"primary\" variant=\"contained\">Save</Button>\n            </DialogActions>\n            </>\n            )}\n        </FileDrop>\n        </Dialog>\n    );\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token),\n    team: state.team.list,\n}), (dispatch) => ({\n    uploadFile: (file, cb) => dispatch(uploadFile(file, cb))\n}))(withEditor(PlanDialog))","import React from 'react'\nimport {\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    KeyboardDatePicker\n} from '@material-ui/pickers'\n\nimport {HiveProvider} from 'react-hive-flow'\nimport * as ProjectItemNode from '../../nodes/ProjectItemNode';\nimport { isArray, merge, mergeWith } from 'lodash';\nimport { Switch, Route } from 'react-router-dom';\nimport { YContext } from '../../graph/yjs';\nimport DashboardHeader from '../../components/dashboard-header';\nimport ProjectTabs from '../../tabs/project'\nimport PlanDialog from '../../components/dialogs/plan-dialog';\n\nimport { connect } from 'react-redux';\nimport './index.css';\n\n\nfunction ProjectView(props){\n    const {ydoc} = React.useContext(YContext)\n\n    const [ project, setProject ] = React.useState({});\n    const [ selectedTab, setSelectedTab ] = React.useState(null)\n\n    const [ projectDoc, setDoc ] = React.useState(null)\n\n    const [ selectedCard, setSelectedCard ] = React.useState(null)\n\n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n    const [ attachments, setAttachments ] = React.useState([])\n\n    const observer = () => {\n        if(projectDoc){\n          let obj = projectDoc.toJSON()\n          console.log(\"OBSERVE\", obj)\n          if(obj.nodes != null){\n            setNodes(obj.nodes.map((x) => Object.assign({}, x)))\n          }\n          if(obj.links != null) {\n            setLinks(obj.links.map((x) => Object.assign({}, x)))\n          }\n          if(obj.attachments != null){\n            setAttachments(obj.attachments.map((x) => Object.assign({}, x)))\n          }\n        }\n      }\n  \n\n    React.useEffect(() => {\n        if(props.project && props.project.length > 0){\n            if(projectDoc) projectDoc.unobserve(observer)\n\n            let project = props.project[0];\n            let doc = ydoc.getMap(`plan-${project.id}`)\n            doc.observe(observer)\n            setDoc(doc)\n            setProject(props.project[0])\n\n            let obj = doc.toJSON();\n            if(obj.nodes != null) setNodes(obj.nodes)\n            if(obj.links != null) setLinks(obj.links)\n            if(obj.attachments != null) setAttachments(obj.attachments)\n        }\n    }, [props.project])\n\n    const _setNodes = (nodes) => {\n        if(projectDoc){\n            projectDoc.set('nodes', nodes)\n        }\n        setNodes(nodes)\n    }\n\n    const _setLinks = (links) => {\n        if(projectDoc){\n            projectDoc.set('links', links)\n        }\n        setLinks(links)\n    }\n\n    const _setAttachments = (attachments) => {\n        if(projectDoc){\n            projectDoc.set('attachments', attachments)\n        }\n        setAttachments(attachments)\n    }\n\n\n    const tabs = [\"Plan\", \"Calendar\", \"Team\", \"Files\"]\n\n    return (\n        <HiveProvider store={{\n            nodes: nodes,\n            links: links,\n            nodeTypes: [ProjectItemNode],\n            attachments: attachments,\n            attachFile: (name, cid) => {\n              _setAttachments([...new Set(attachments.concat([{name, cid}]))])\n            },\n            exploreNode: (id) => {\n              let node = nodes.filter((a) => a.id == id)[0]\n              setSelectedCard({\n                id: id,\n                title: node.data.label,\n                description: node.data.description,\n                dueDate: node.data.dueDate,\n                members: node.members,\n                attachments: node.data.attachments\n              })\n            },\n            onNodeAdd: (node) => _setNodes(nodes.concat(node)),\n            onLinkAdd: (link) => _setLinks(links.concat(link)),\n            onLinkRemove: (_links) => {\n              _setLinks(links.filter((a) => _links.map((x) => x.id).indexOf(a.id) < 0))\n            },\n            onNodeRemove: (_nodes) => {\n              _setNodes(nodes.filter((a) => _nodes.map((x) => x.id).indexOf(a.id) < 0))\n            },\n            onNodeUpdate: (id, node) => {\n              console.log(\"NODE UPDATE\")\n              let ix = nodes.map((x) => x.id).indexOf(id)\n              let n = nodes.slice()\n\n              console.log(node)\n              function customizer(objValue, srcValue) {\n                console.debug(\"CUSTOMIZER\", objValue, srcValue)\n                if (Array.isArray(objValue)) {\n                  return srcValue\n                }\n              }\n\n              n[ix] = mergeWith(n[ix], node, customizer)\n\n              console.log(n[ix])\n              _setNodes(n)\n            },\n            statusColors: {\n              unfinished: 'orange',\n              blocked: 'red',\n              doing: '#d4faf4',\n              complete: 'green',\n      \n            },\n            onNodeChange: (nodes) => _setNodes(nodes),\n            onLinkChange: (links) => _setLinks(links)\n          }}>\n            {(editor) => (\n              <>\n            <PlanDialog \n              project={props.project}\n              onSave={(plan) => {\n                console.log(plan)\n                editor.updateNode(plan.id, (node) => {\n                    let update = {data: {}}\n\n                    if(plan.title) update.data.label = plan.title;\n                    if(plan.description) update.data.description = plan.description;\n                    if(plan.dueDate) update.data.dueDate = plan.dueDate;\n                    console.log(plan.members)\n                    if(plan.members) update.members  = plan.members\n\n                    console.log(update, plan.id)\n                    return update;\n                })\n                setSelectedCard(null)\n\n              }}\n              open={selectedCard} \n              plan={selectedCard ? Object.assign({}, nodes.filter((a) => a.id == selectedCard.id)[0]) : {}} \n              onClose={() => setSelectedCard(null)}/>\n        <DashboardHeader \n            tabs={tabs}\n            onTabSelect={(tab) => {\n                setSelectedTab(tab)\n                props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n            }}\n            selectedTab={selectedTab || props.location.pathname.replace(`${props.match.url}/`, '')}\n            title={project.name} />\n        <Paper style={{flex: 1, width: '100%', height: 'calc(100vh - 76px)', marginTop: 12, display: 'flex'}}>\n            <Switch>\n                <Route path={`${props.match.url}/plan`} render={(props) => {\n                    return <ProjectTabs.PlanTab {...props} y={projectDoc} project={project} />\n                }} />\n                <Route path={`${props.match.url}/calendar`} render={(props) => {\n                    return <ProjectTabs.CalendarTab {...props} y={props.y} project={project} />\n                }} />\n                <Route path={`${props.match.url}/team`} render={(props) => {\n                    return <ProjectTabs.TeamTab {...props} project={project} />\n                }} />\n                <Route path={`${props.match.url}/files`} render={(props) => {\n                    return <ProjectTabs.FileTab {...props} y={projectDoc} project={project} />\n                }} />\n            </Switch>\n        </Paper>\n        </>\n        )}\n        </HiveProvider>\n\n    )\n}\n\nexport default connect((state, ownProps) => ({\n    project: state.projects.list.filter((a) => a.id == ownProps.match.params.id)\n}))(ProjectView)","import React from 'react';\n\nimport {\n    Paper\n} from '@material-ui/core';\nimport GridLayout, { WidthProvider } from 'react-grid-layout';\n\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\nimport './index.css';\nconst ResponsiveGridLayout = WidthProvider(GridLayout);\nexport default function Dashboard(props){\n    const layout = [\n        {i: 'a', x: 0, y: 0, w: 7, h: 3}\n    ]\n    return (\n        <div className=\"dashboard-view\">\n            <ResponsiveGridLayout\n                isBounded={true}\n                autoSize={false}\n                className=\"layout\" \n                style={{height: 'calc(100vh - 16px)'}}\n                rowHeight={35}\n                height={window.innerHeight - 16}\n                containerPadding={[0, 0]}\n                layout={layout}\n                \n                cols={12}>\n                <Paper key=\"a\" data-grid={{w: 7, h: 3, x: 0, y: 0}}>a</Paper>\n                <Paper key=\"b\" data-grid={{w: 5, h: parseInt(window.innerHeight / 35) - 8, x: 8, y: 5}}>b</Paper>\n\n            </ResponsiveGridLayout>\n        </div>\n    )\n}","import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    ListItem,\n    List,\n    IconButton\n} from '@material-ui/core';\n\nimport {\n    Clear,\n    Backup\n} from '@material-ui/icons';\nimport Spinner from 'react-spinkit';\nimport { uploadFile } from '../../../actions/fileActions'\nimport { connect } from 'react-redux';\nimport async from 'async';\nimport { v4 as uuidv4 } from 'uuid';\nimport {useDropzone} from 'react-dropzone'\n\nfunction FileUploadDialog(props){\n    const [ files, setFiles ] = React.useState([])\n    const [ upload, setUpload ] = React.useState(false)\n    const [uploading, setUploading] = React.useState({});\n\n    const onDrop = React.useCallback(async (acceptedFiles) => {\n        console.log(acceptedFiles)\n        if(acceptedFiles && acceptedFiles.length > 0){\n            setFiles(files.concat(acceptedFiles.map((x) => ({\n                file: x,\n                id: uuidv4()\n            }))))\n            \n         \n        }\n        // Do something with the files\n      }, [files])\n    \n    \n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    \n    const uploadAction = () => {\n        setUpload(true)\n        async.each(files, (item, cb) => {\n            let u = Object.assign({}, uploading)\n            u[item.id] = true;\n            console.log(\"Uploading\", uploading)\n            setUploading(u)\n            props.uploadFile(item.file, () => {\n                u = Object.assign({}, uploading)\n                console.log(\"Finished uploading\")\n                u[item.id] = false;\n                setUploading(u)\n                cb()\n            })\n        }, (err) => {\n            setUpload(false)\n            setFiles([])\n            props.onClose()\n        })\n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Upload Files</DialogTitle>\n            <DialogContent>\n                <div style={{\n                    minHeight: 100,\n                    maxHeight: 200,\n                    overflowY: 'scroll',\n                    borderRadius: 7,\n                    padding: 8,\n                    border: `1px dashed ${isDragActive ? 'blue' : 'gray'}`\n                }} {...getRootProps()}>\n                    <input {...getInputProps()}></input>\n                    <List>\n                        {files.length > 0 ? files.map((x, ix) => (\n                            <ListItem style={{display: 'flex', justifyContent: 'space-between'}}>\n                               <div style={{display: 'flex', alignItems: 'center'}}>\n                               {uploading[x.id] && <Spinner name=\"double-bounce\" />}\n                                {x.file.name}\n                               </div>\n                                <IconButton onClick={(evt) => {\n                                    evt.stopPropagation()\n                                    let f = files.slice()\n                                    f.splice(ix, 1)\n                                    setFiles(f)\n                                }}>\n                                    <Clear />\n                                </IconButton>\n                            </ListItem>\n                        )) : (\n                            <div style={{flexDirection: 'column', flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                                <Backup style={{fontSize: 44}}/>\n                                <span>Drop your files here</span>\n                            </div>\n                        )}\n\n                    </List>\n                    \n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button disabled={upload} onClick={uploadAction} color=\"primary\" variant=\"contained\">Upload</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default connect(null, (dispatch) => ({\n    uploadFile: (file, cb) => dispatch(uploadFile(file, cb))\n}))(FileUploadDialog)","import React from 'react';\n\nimport {\n    Forward\n} from '@material-ui/icons'\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\nimport { getConverters, convertFile } from '../../../actions/fileActions';\n\nexport default function ConverterDialog(props){\n    const [ outputFormat, setOutputFormat ] = React.useState('')\n\n    const [ formats, setFormats ] = React.useState([])\n\n    React.useEffect(() => {\n        getConverters().then((converters) => {\n            setFormats(converters.map((x) => ({\n                from: x.sourceFormat,\n                to: [x.targetFormat]\n            })))\n        })\n    }, [])\n\n    const convert = () => {\n        convertFile(props.selected.id, outputFormat.toLowerCase())\n        props.onClose();\n        setOutputFormat('')\n        \n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Convert {props.selected && props.selected.filename}</DialogTitle>\n            <DialogContent style={{display: 'flex', alignItems: 'center'}}>\n                <TextField \n                    fullWidth \n                    disabled\n                    label=\"From\" \n                    value={props.selected && props.selected.extension.toUpperCase()}/>\n                <Forward style={{marginLeft: 8, marginRight: 8}}/>\n                <FormControl fullWidth>\n                    <InputLabel>To</InputLabel>\n                    <Select value={outputFormat} onChange={(e) => {\n                        setOutputFormat(e.target.value) \n                    }} fullWidth>\n                        {props.selected && (formats.filter((a) => a.from == props.selected.extension)[0] || {to: []}).to.map((x) => (\n                            <MenuItem value={x}>{x.toUpperCase()}</MenuItem>\n\n                        ))}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={convert} color=\"primary\" variant=\"contained\">Start</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, {useCallback} from 'react';\n\nimport {\n  Add,\n  MoreVert,\n  Contactless,\n  Info\n} from '@material-ui/icons';\n\nimport {\n  Paper,\n  LinearProgress,\n  Fab,\n  List,\n  IconButton,\n  ListItem,\n  Divider,\n  Checkbox\n} from '@material-ui/core';\nimport MoreMenu from '../../components/more-menu'\nimport DashboardHeader from '../../components/dashboard-header';\nimport PermissionForm from '../../components/permission-form';\nimport SearchTable from '../../components/search-table';\n\nimport FileBrowser from '../../components/file-browser';\n\nimport FilePreviewDialog from '../../components/dialogs/file-preview-dialog';\nimport FileUploadDialog from '../../components/dialogs/file-upload-dialog';\nimport ConverterDialog from '../../components/dialogs/converter-dialog';\n\nimport { useMutation } from '@apollo/client';\nimport { addFile, CONVERT_FILE, getFiles, UPLOAD_FILE } from '../../actions/fileActions';\nimport {useDropzone} from 'react-dropzone'\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Files(props){\n  const [ progress, setProgress ] = React.useState(null)\n  const [ dialogOpen, openDialog ] = React.useState(false);\n  const [ uploadFile, {data} ] = useMutation(UPLOAD_FILE)\n  const [ convertDoc, setConvertDoc ] = React.useState(null)\n  const [ selectedData, setData ] = React.useState(null)\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if(acceptedFiles && acceptedFiles.length > 0){\n      console.log(acceptedFiles)\n      uploadFile({variables: {file: acceptedFiles[0]}}).then((r) => {\n        if(r.data && r.data.uploadFile && !r.data.uploadFile.duplicate){\n          props.addFile(r.data.uploadFile.file)\n        }\n      })\n     \n    }\n    // Do something with the files\n  }, [data])\n\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, noClick: true})\n\n  const [ files, setFiles ] = React.useState([])\n  const [ viewable ] = React.useState([\"pdf\", \"glb\", \"png\"])\n  React.useEffect(() => {\n    props.getFiles()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Files\"} />,\n\n    <PermissionForm\n      style={{marginTop: 12}}\n      type={props.type}\n      permissions={props.permissions}\n      >\n        {progress != null && <LinearProgress variant=\"determinate\" value={progress} />}\n\n        <FilePreviewDialog open={selectedData} file={selectedData} onClose={() => setData(null)} />\n        <ConverterDialog open={convertDoc} selected={convertDoc} onClose={() => setConvertDoc(null)}/>\n        <FileUploadDialog open={dialogOpen} onClose={() => openDialog(false)} />\n        <div className={isDragActive ? 'file-list selected' : 'file-list'} >\n        <Fab color=\"primary\" onClick={() => openDialog(true)} style={{zIndex: 12, position: 'absolute', right: 12, bottom: 12}}>\n          <Add />\n        </Fab>\n        <FileBrowser \n          onDownloadProgress={(progress) => {\n            setProgress(progress)\n          }}\n          onDownloadEnd={() => setProgress(null)}\n          onFileOpen={(file) => {\n            if(viewable.indexOf(file.extension) > -1){\n              setData({filename: file.name, cid: file.cid, extension: file.extension})\n            }\n        }} files={props.files} />\n        {/*<SearchTable \n          data={props.files}\n          renderItem={(x) => (\n            <div className=\"file-item\">\n              <ListItem button onClick={(e) => {\n                e.stopPropagation();\n                if(viewable.indexOf(x.extension) > -1 ||(x.conversion && viewable.indexOf(x.conversion.extension) > -1)){\n               //   alert(\"Viewable\")\n                  let file = {}\n                  if(viewable.indexOf(x.extension) > -1){\n                    file = {\n                      filename: x.filename,\n                      cid: x.cid,\n                      extension: x.extension\n                    }\n                  }else if(x.conversion && viewable.indexOf(x.conversion.extension) > -1){\n                    file = {\n                      filename: x.filename,\n                      cid: x.conversion.cid,\n                      extension: x.conversion.extension\n                    }\n                  }\n                  setData(file)\n                }\n         \n                /*\n                if(props.ipfs){\n                  const get = async (x) => {\n                    if(props.ipfs){\n                      console.log(x)\n                      let file =  props.ipfs.cat(x.cid)\n                      let data = Buffer.from('')\n                      for await (const chunk of file){\n                        data = Buffer.concat([data, chunk])\n                      }\n                      setData({\n                        filename: x.filename,\n                        extension: x.extension,\n                        content: data\n                      })\n                     // console.log(data)\n                    }\n                    \n                  }\n                  //get(x)\n\n                \n              }}>\n                 <Checkbox onClick={(e) => {\n              e.stopPropagation();\n            }}/>  \n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column'}}>\n              <div>{x.filename}</div>\n              <span style={{fontSize: 10}}>{x.cid}</span>\n            </div>\n              </ListItem>\n              <MoreMenu \n              menu={[\n                {\n                  label: \"Convert\",\n                  icon: <Contactless />,\n                  action: () => {\n                    setConvertDoc(x)\n                  }\n                },\n                {\n                  label: \"Get Info\",\n                  icon: <Info />,\n                  action: () => {}\n                }\n              ]} />\n            </div>\n          )}/>*/}\n          </div>\n    </PermissionForm>\n  ]\n}\n\nexport default connect((state) => ({\n  files: state.files.list,\n}), (dispatch) => ({\n  addFile: (file) => dispatch(addFile(file)),\n  getFiles: () => dispatch(getFiles())\n}))(Files)\n","import { gql } from '@apollo/client';\nimport GClient from '../graph';\nimport * as types from './types';\n\nconst client = GClient()\n\n\nexport const addBooking = (time, projectId, booking) => {\n    return (dispatch) => {\n    client.mutate({\n        mutation: gql`\n    mutation AddBooking($time: CalendarInput, $projectId: ID, $booking: BookingInput){\n        addBooking(time: $time, projectId: $projectId, booking: $booking){\n            id\n            startTime\n            endTime\n            allDay\n            date\n            project {\n                id \n                name\n            }\n            items {\n                equipment {\n                    name\n                }\n                team {\n                    name\n                }\n            }\n        }\n    }\n  `,\n  variables: {\n      time: time,\n      projectId: projectId,\n      booking: booking\n  }\n}).then((r) => r.data.addBooking).then((r) => {\n    dispatch({type: types.ADD_BOOKING, booking: r})\n})\n    }\n}\n\n  export const getBookings = () => {\n      return (dispatch, getState) => {\n    client.query({\n        query: gql`\n            query GetBookings{\n                calendar{\n                    id\n                    startTime\n                    endTime\n                    allDay\n                    date\n                    project {\n                        id\n                        name\n                    }\n                    items {\n                        equipment{\n                            name\n                        }\n                        team {\n                            name\n\n                        }\n                    }\n                }\n            }\n        `\n    }).then((r) => r.data.calendar).then((r) => {\n        console.log(r)\n        dispatch({type: types.SET_BOOKINGS, bookings: r})\n    })\n}\n  }\n","import React from 'react';\nimport * as Y from 'yjs'\nimport { \n    Dialog,\n    DialogActions,\n    DialogTitle,\n    DialogContent,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    TextField,\n    InputAdornment,\n    Tabs,\n    Tab,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core'\n\nimport {\n    Autocomplete\n} from '@material-ui/lab'\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport { useMutation } from '@apollo/client';\nimport { addBooking } from '../../../actions/calendarActions';\nimport { setStatus } from '../../../actions/authActions';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport { connect } from 'react-redux';\nimport {YContext} from '../../../graph/yjs';\n\nimport moment from 'moment';\n\nlet yDoc; \n\nfunction CalendarDialog(props){\n    const {ydoc} = React.useContext(YContext)\n    const [ step, setStep ] = React.useState(0)\n    const [ searchTab, setSearchTab ] = React.useState(0)\n    const [ search, setSearch ] = React.useState(null)\n\n    const [ date, setDate ] = React.useState(null);\n    const [ allDay, setAllDay ] = React.useState(false);\n    const [ startTime, setStart ] = React.useState(null)\n    const [ endTime, setEnd ] = React.useState(null)\n    const [ project, setProject ] = React.useState(null)\n\n    const [ selectedItems, setSelectedItems ] = React.useState({})\n\n    React.useEffect(() => {\n       yDoc = ydoc.getMap('calendar')    \n    }, [])\n\n    const stepButton = () => {\n        if(step == 0){\n            setStep(1)\n        }else{\n            //Book items\n            let equipment = [];\n            let team = [];\n\n            for(var k in selectedItems){\n                if(selectedItems[k].selected){\n                    switch(selectedItems[k].type){\n                        case 'team':\n                            team.push(k)\n                            break\n                        case 'equipment':\n                            equipment.push(k)\n                            break;\n                    }\n                }\n            }\n\n            let sTime, eTime;\n            if(startTime){\n                sTime = moment(date)\n                sTime.set('hour', startTime.get('hour'))\n                sTime.set('minute', startTime.get('minute'))\n\n            }\n            if(endTime){\n                eTime = moment(date)\n            \n                eTime.set('hour', endTime.get('hour'))\n                eTime.set('minute', endTime.get('minute'))\n            }\n\n\n            let booking = new Y.Map();\n            let _booking = {\n                date: date.valueOf() / 1000,\n                project: project,\n                startTime: sTime && parseInt(sTime.valueOf() / 1000),\n                endTime: eTime && parseInt(eTime.valueOf() / 1000),\n                allDay: allDay,\n                items: {\n                    team: team,\n                    equipment: equipment\n                }\n            }\n            \n            booking.set('date', _booking.date)\n            booking.set('project', _booking.project)\n\n            if(yDoc){\n                //yDoc.set('bookings', [])\n                console.log(\"Inserting into yjs\")\n                let obj = yDoc.toJSON()\n                let bookings = obj.bookings || [];\n                console.log(bookings)\n                bookings.push(_booking)\n                yDoc.set('bookings', bookings)\n                console.log(yDoc.toJSON())\n            }\n\n            \n\n            /*props.addBooking({\n                    allDay: allDay,\n                    startTime: startTime && parseInt(sTime.valueOf() / 1000),\n                    endTime: endTime && parseInt(eTime.valueOf() / 1000),\n                    date: date.valueOf() / 1000\n                },\n                project.id,\n                {\n                    equipment: equipment,\n                    team: team\n                })*/\n                props.onClose()\n        }\n    }\n\n    \n    const renderStep = () => {\n        switch(step){\n            case 0:\n                return (\n                <>\n                <Autocomplete \n                    value={project}\n                    onChange={(e, newVal) => setProject(newVal)}\n                    options={props.projects}\n                    getOptionLabel={(project) => project.name} \n                    renderInput={(params) => {\n                        return (\n                            <TextField {...params} label=\"Project\"  />\n                        )\n                    }}/>\n                <KeyboardDatePicker \n                    value={date}\n                    format=\"DD/MM/yyyy\"\n                    onChange={(e, newVal) => setDate(e)}\n                    margin=\"normal\" \n                    label=\"Date\" \n                    variant=\"inline\" ></KeyboardDatePicker>\n                <FormControlLabel \n                    control={<Checkbox checked={allDay} onChange={(e) => {\n                        setAllDay(e.target.checked)\n                    }}/>}\n                    label=\"All day\" />\n                {!allDay && <div style={{display: 'flex', marginTop: 8}}>\n                    <KeyboardTimePicker \n                        value={startTime}\n                        onChange={(e) => setStart(e)}\n                        label=\"Start Time\"\n                        fullWidth \n                        style={{marginRight: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                    <KeyboardTimePicker \n                        value={endTime}\n                        onChange={(e) => setEnd(e)}\n                        label=\"End Time\"\n                        fullWidth \n                        style={{marginLeft: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                </div>}\n                </>\n                )\n            case 1:\n                return (\n                    \n                        <List>\n                            {(searchTab == 0 ? props.team : props.equipment).filter((a) => !search || a.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                                <ListItem>\n                                    <Checkbox checked={selectedItems[x.id] && selectedItems[x.id].selected || false} onChange={(e) => {\n                                        let s = Object.assign({}, selectedItems);\n                                        s[x.id] = {\n                                            selected: e.target.checked,\n                                            type: searchTab == 0 ? \"team\" :\"equipment\"\n                                        } \n                                        console.log(s)\n                                        setSelectedItems(s)  \n                                    }}/>\n                                    {x.name}\n                                </ListItem>\n                            ))}\n                        </List>\n                    \n                )\n            default:\n                return null;\n        }\n    }\n\n    const renderStepTitle = () => {\n        switch(step){\n            case 1:\n                return (\n                    <>\n                    <TextField\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)} fullWidth InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment> \n                    }} label=\"Search\" />\n                    <Tabs value={searchTab} onChange={(e, newVal) => {\n                        if(newVal !== searchTab) setSearch('')\n                        setSearchTab(newVal)\n                    }}>\n                        <Tab label=\"Team\" />\n                        <Tab label=\"Equipment\" />\n                    </Tabs>\n                    <Divider />\n                    \n                    </>\n                )\n            case 0:\n                return \"Create a booking\"\n            default:\n                return null\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>\n                {renderStepTitle()}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 250}}>\n                {renderStep()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={step == \"0\" ? props.onClose : () => setStep(0)}>{step == \"0\" ? \"Cancel\" : \"Back\"}</Button>\n                <Button color=\"primary\" onClick={stepButton} variant=\"contained\">{step == \"1\" ? \"Book\" : \"Next\"}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    projects: state.projects.list,\n    team: state.team.list,\n    equipment: state.equipment.list\n}), (dispatch) => ({\n    addBooking: (time, project, booking) => dispatch(addBooking(time, project, booking)),\n    setStatus: (status) => dispatch(setStatus(status))\n}))(CalendarDialog)","import React from 'react';\nimport {\n    Paper,\n    Fab\n} from '@material-ui/core';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport DashboardHeader from '../../components/dashboard-header'\nimport CalendarDialog from '../../components/dialogs/calendar-dialog'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { getBookings } from '../../actions/calendarActions';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../../actions/authActions'\nimport {YContext} from '../../graph/yjs';\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\nconst localizer = momentLocalizer(moment)\n\nlet yDoc;\n\nfunction CalendarView(props){\n    const {ydoc} = React.useContext(YContext);\n\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ bookings, setBookings ] = React.useState([])\n\n    const myEventsList = [];\n\n    const tabs = [\"All\", \"Me\", \"Projects\"];\n    \n    const observer = () => {\n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n    }\n    React.useEffect(() => {\n        yDoc = ydoc.getMap('calendar')\n        yDoc.observe(observer)\n        \n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n       // props.getBookings()\n    }, [])\n\n    return [\n        <DashboardHeader \n        tabs={tabs}\n        selectedTab={\"\"}\n        onTabSelect={(tab) => {\n            //setSelectedTab(tab)\n            props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n        }}\n        title={\"Calendar\"} />,\n        <CalendarDialog y={yDoc} open={dialogOpen} onClose={() => openDialog(false)} />,\n        \n        <Paper style={{\n            position: 'relative',\n            marginTop: 12, \n            height: 'calc(100vh - 84px)', \n            flex: 1,\n            display: 'flex', \n            flexDirection: 'column', \n            padding: 4}}>\n            <Fab onClick={() => openDialog(true)} color=\"primary\" style={{zIndex: 9, position: 'absolute', right: 12, bottom: 12}}>\n                <Add />\n            </Fab>\n            <Calendar\n                localizer={localizer}\n                events={bookings.map((x) => ({\n                    id: x.id,\n                    title: x.project.name,\n                    allDay: x.allDay,\n                    start: new Date((x.startTime || x.date)*1000),\n                    end: new Date((x.endTime || x.date)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </Paper>\n    ]\n}\n\nexport default connect((state) => ({\n    bookings: state.calendar.bookings\n}), (dispatch) => ({\n    getBookings: () => dispatch(getBookings()),\n    setStatus: (status) => dispatch(setStatus(status))\n}))(CalendarView)","import React from 'react';\n\nimport {\n  Paper,\n  Divider,\n  Typography,\n  List,\n  Button,\n  ListItem\n} from '@material-ui/core';\n\nimport { getConverters, installConverter } from '../../actions/fileActions';\n\nexport default function Settings(props){\n\n  const [ converters, setConverters ] = React.useState([])\n\n  React.useEffect(() => {\n    getConverters().then((converters) => {\n      console.log(converters)\n      setConverters(converters)\n    })\n  }, [])\n  const connections = [\n    {\n      name: \"MSSQL Server\"\n    }\n  ]\n\n  return (\n    <Paper style={{flex: 1, marginTop: 12}}>\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Add-ons</Typography>\n        <List>\n            {converters.map((x) => (\n              <ListItem style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {x.name}\n                {x.installed ? (<Typography>Installed</Typography>): (<Button onClick={() => {\n                  installConverter(x.id)\n                }} color=\"primary\" variant=\"contained\">Install</Button>)}\n              </ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Connections</Typography>\n        <List>\n            {connections.map((x) => (\n              <ListItem button>{x.name}</ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n    </Paper>\n  );\n}\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addTeamMember = (member) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddTeamMember($member: TeamMemberInput){\n    addTeamMember(member: $member){\n      id\n      name\n      username\n      email\n      status\n      phoneNumber\n      admin\n    }\n  }\n`,\n      variables: {\n        member: member\n      }\n    }).then((r) => r.data.addTeamMember).then((r) => {\n      dispatch({type: types.ADD_TEAM_MEMBER, newMember: r})\n    })\n  }\n}\n\nexport const updateTeamMember = (memberId, member) => {\n  return (dispatch) => {\n     client.mutate({\n       mutation: gql`\n  mutation UpdateTeam($memberId: String, $member: TeamMemberInput){\n    updateTeamMember(memberId: $memberId, member: $member){\n      name\n      email\n      phoneNumber\n      admin\n    }\n  }\n`,\n    variables: {\n      memberId: memberId,\n      member: member\n    }\n  }).then((r) => r.data.updateTeamMember).then((r) => {\n    dispatch({type: types.UPDATE_TEAM_MEMBER, member: member, id: memberId})\n  })\n  }\n}\n\nexport const removeTeamMember = (id) => {\n  return (dispatch, getState) => {\n    return client.mutate({\n      mutation: gql`\n        mutation RemoveMember($memberId: ID){\n          removeTeamMember(memberId: $memberId)\n        }\n      `,\n      variables: {\n        memberId: id\n      }\n    }).then((r) => r.data.removeTeamMember).then((r) => {\n      dispatch({type: types.REMOVE_TEAM_MEMBER, id: id})\n    })\n  }\n}\n\nexport const getTeam = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetTeam {\n          team {\n            id\n            status\n            name\n            username\n            password\n            phoneNumber\n            email\n            admin\n          }\n        }\n      `\n    }).then((r) => r.data.team).then((r) => {\n      dispatch({type: types.SET_TEAM, team: r})\n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport {\n  SupervisedUserCircle,\n  SupervisorAccount,\n  Schedule,\n  Edit,\n  Delete,\n  Share\n} from '@material-ui/icons';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport { useMutation } from \"@apollo/client\";\nimport { removeTeamMember, addTeamMember, updateTeamMember, getTeam } from '../../actions/teamActions';\nimport PermissionForm from '../../components/permission-form';\nimport MoreMenu from '../../components/more-menu';\nimport { connect } from 'react-redux';\nimport jwt_decode from 'jwt-decode'\nimport './index.css';\n\nfunction Teams(props){\n  const [ selected, setSelected ] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getTeam()\n  }, [])\n\n  console.log(props.user)\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n       // setSelectedTab(tab)\n      //  props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Team\"} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          delete d.id;\n          props.updateTeamMember(data.id, d)\n      \n        }else{\n          props.addTeamMember(data)\n        }\n      }}\n      onClose={() => setSelected(null)} \n      selected={selected}\n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable \n        filter={(item, search) => item.name.indexOf(search) > -1}\n        data={props.team}\n        renderItem={(item) => (\n          <div className=\"team-item\">\n          <ListItem button >\n            {item.status == \"pending\" ? <Schedule /> : item.admin ? <SupervisorAccount /> : <SupervisedUserCircle />}\n            <Typography style={{marginLeft: 12}}>\n              {item.name}\n            </Typography>\n          </ListItem>\n          <MoreMenu \n            menu={[\n            ].concat(item.status == \"pending\" ? [\n              {\n                icon: <Share />,\n                label: \"Share Signup\",\n                action: () => {}\n              }\n            ] : []).concat(props.user.admin ? [{\n              label: \"Edit\",\n              icon: <Edit />,\n              action: () => setSelected(item)\n            },\n            {\n              label: \"Delete\",\n              color: 'red',\n              icon: <Delete />,\n              action: () => props.removeTeamMember(item.id)\n            }] : [])} />\n          </div>\n        )} />\n    </PermissionForm>\n  ]\n}\n\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  team: state.team.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Team Members\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Team Members\")\n}), (dispatch) => ({\n  getTeam: () => dispatch(getTeam()),\n  addTeamMember: (member) => dispatch(addTeamMember(member)),\n  removeTeamMember: (id) => dispatch(removeTeamMember(id)),\n  updateTeamMember: (id, member) => dispatch(updateTeamMember(id, member))\n}))(Teams)\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addEquipment = (equipment) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddEquipment($equipment: EquipmentInput){\n    addEquipment(equipment: $equipment){\n      id\n      name\n      type\n      description\n    }\n  }\n`,\n    variables: {\n      equipment: equipment\n    }\n  }).then((r) => r.data.addEquipment).then((r) => {\n    dispatch({type: types.ADD_EQUIPMENT, newItem: r})\n  })\n}\n}\n\nexport const updateEquipment = (id, equipment) => {\n  console.log(id, equipment)\n  return (dispatch) => {\n    return client.mutate({\n      mutation:  gql`\n      mutation UpdateEquipment($equipmentId: String, $equipment: EquipmentInput){\n        updateEquipment(equipmentId: $equipmentId, equipment: $equipment){\n          name\n          type\n          description\n        }\n      }\n    `,\n    variables: {\n      equipmentId: id,\n      equipment\n    }\n    }).then((r) => r.data.updateEquipment).then((r) => {\n      dispatch({type: types.UPDATE_EQUIPMENT, equipment, id})\n    })\n  }\n}\n\nexport const removeEquipment = (id) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n        mutation RemoveEquipment($id: String){\n          removeEquipment(equipmentId: $id)\n        }\n      `,\n      variables: {\n        id: id\n      }\n    }).then((r) => r.data.removeEquipment).then((r) => {\n      dispatch({type: types.REMOVE_EQUIPMENT, id: id})\n    })\n  }\n}\n\n\nexport const getEquipment = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetEquipment {\n          equipment {\n            id\n            name\n            type\n            description\n          }\n        }\n      `\n    }).then((r) => r.data.equipment).then((r) => {\n      dispatch({type: types.SET_EQUIPMENT, equipment: r})\n    })\n  }\n \n}\n","import React from 'react';\n\nimport {\n  Paper,\n  List,\n  ListItem,\n  Typography\n} from '@material-ui/core';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { connect } from 'react-redux';\nimport { removeEquipment, getEquipment, updateEquipment, addEquipment } from '../../actions/equipmentActions';\nimport MoreMenu from '../../components/more-menu';\nimport jwt_decode from 'jwt-decode';\nimport './index.css';\n\nfunction Equipment(props){\n  const [ selectedTab, setSelectedTab ] = React.useState('');\n\n  const [ selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getEquipment()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[...new Set(props.equipment.filter((a) => a.type).map((x) => x.type))]}\n    onTabSelect={(tab) => {\n        setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={selectedTab}\n    title={'Equipment'} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          console.log(data)\n          delete d.id;\n          props.updateEquipment(data.id, d)\n        }else{\n          props.addEquipment(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n    <SearchTable\n      filter={(item, search) => item.name.indexOf(search) > -1}\n      data={props.equipment.filter((a) => {\n        if(!selectedTab) return true;\n        return a.type == selectedTab\n      })}\n      renderItem={(item) => (\n        <div className=\"equipment-item\">\n        <ListItem button onClick={(e) => {\n        }}>\n          <Typography variant=\"subtitle1\" style={{flex: 1}}>{item.name}</Typography>\n        </ListItem>\n          <MoreMenu\n            menu={[\n            ].concat(props.user.admin ? [\n              {\n                label: \"Edit\",\n                action: () => setSelected(item)\n              },\n              {\n                label: \"Delete\",\n                color: 'red',\n                action: () => props.removeEquipment(item.id)\n              }\n            ] : [])} />\n        </div>\n\n      )} />\n      </PermissionForm>\n  ]\n}\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  equipment: state.equipment.list,\n  type: state.dashboard.types.filter((a) => a.name ==\"Equipment\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Equipment\")\n}), (dispatch) => ({\n  getEquipment: () => dispatch(getEquipment()),\n  addEquipment: (equipment) => dispatch(addEquipment(equipment)),\n  updateEquipment: (id, equipment) => dispatch(updateEquipment(id, equipment)),\n  removeEquipment: (id) => dispatch(removeEquipment(id))\n}))(Equipment)\n","import React from 'react'\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\nimport  ReactJson from 'react-json-view'\nexport const type = 'typeDef'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{flex: 1}}>\n      <ReactJson src={props.node.data.typedef} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"type-def\">\n        {props.id && props.data.label || \"Type Def\"}\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <div className=\"adapter-header\">\n        {props.id && props.data.label || \"MSSQL Adapter\"}\n        </div>\n        <div className=\"adapter-info\">\n          {props.id && props.data && props.data.table && props.data.table.name}\n        </div>\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nexport const type = 'mssql server'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        {props.id && props.data.label || \"MSSQL Server\"}\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react';\n\nimport { cloneDeep } from 'lodash';\nimport * as TypeDefNode from '../../nodes/TypeDefNode'\nimport * as MSSQLNode from '../../nodes/MSSQLNode';\nimport * as MSSQLServer from '../../nodes/MSSQLServerNode';\n\nimport { useMutation } from '@apollo/client';\nimport { getTypes, getIntegrationMap, UPDATE_INTEGRATION_MAP} from '../../actions/adminActions'\nimport { connect } from 'react-redux';\nimport HiveEditor, { HiveProvider, NodePanel } from 'react-hive-flow';\nimport 'react-hive-flow/dist/index.css';\nimport './index.css'\n\nfunction Admin(props){\n\n    React.useEffect(() => {\n        props.getTypes()\n        \n    }, [])\n\n\n    const [ updateIntegrationMap, {data}] = useMutation(UPDATE_INTEGRATION_MAP)\n       \n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n\n    React.useEffect(() => {\n        getIntegrationMap().then((integrations) => {\n            if(integrations.nodes) setNodes(integrations.nodes.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                delete y.position.__typename;\n                return y;\n            }).slice());\n            if(integrations.links) setLinks(integrations.links.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                return y;\n            }).slice());\n        })\n    }, [])\n\n    return (\n        <div className=\"admin-view\">\n        <HiveProvider store={{\n            nodes: (props.types || []).concat(nodes),\n            links: links,\n            statusColors: {\n\n            },\n            exploreNode: () => {},\n            onNodeAdd: () => {},\n            onLinkAdd: () => {},\n            onNodeUpdate: () => {},\n            onNodeRemove: () => {},\n            onLinkRemove: () => {},\n            nodeTypes: [TypeDefNode, MSSQLNode, MSSQLServer]\n        }}>\n            <NodePanel />\n            <HiveEditor\n\n            onNodeChange={(nodes) => {\n                let n = nodes.filter((a) => props.types.map((x) => x.id).indexOf(a.id) < 0)\n                updateIntegrationMap({variables: {\n                    nodes: n,\n                    links: links\n                }})\n                setNodes(n)\n            }}\n            onLinkChange={(link) => {\n                updateIntegrationMap({variables: {\n                    nodes: nodes,\n                    links: link\n                }})\n                setLinks(link)\n            }} />\n        </HiveProvider>\n       \n        </div>\n    )\n}\n\nexport default connect(\n    (state) => ({\n        types: (state.dashboard.types||[]).map((x, ix) => ({\n            id: x.name.toLowerCase(),\n            type: 'typeDef',\n            data: {\n                label: x.name,\n                typedef: x.typeDef\n            },\n            position: {\n                x: 200 + (ix * 200),\n                y: 300\n            },\n            draggable: false\n        }))\n    }),\n    (dispatch) => ({\n        getTypes: () => dispatch(getTypes())\n    })\n)(Admin)","import React from 'react';\n\nimport {\n    Drawer,\n    List,\n    ListItem,\n    Divider,\n} from '@material-ui/core';\n\nimport {\n    Notifications,\n    AccountTree,\n    Dashboard,\n    CalendarToday,\n    SupervisorAccount,\n    BusinessCenter,\n    Description,\n    Settings\n  } from '@material-ui/icons';\n\nimport { withRouter } from 'react-router-dom'\n\nfunction Sidebar(props){\n    const menu = [\n        {\n          icon: <Dashboard />,\n          label: \"Dashboard\",\n          path: \"\"\n        },\n        {\n          icon: <CalendarToday />,\n          label: \"Calendar\",\n          path: \"/calendar\"\n        },\n        {\n          icon: <AccountTree />,\n          label: \"Projects\",\n          path: \"/projects\"\n        },\n        {\n          icon: <SupervisorAccount />,\n          label: \"Team\",\n          path: \"/team\"\n        },\n        {\n          icon: <BusinessCenter /> ,\n          label: \"Equipment\",\n          path: \"/equipment\"\n        },\n        {\n          icon: <Description />,\n          label: \"Files\",\n          path: \"/files\"\n        },\n      ]\n\n    return (\n        <Drawer variant=\"permanent\" style={{width: 200}}>\n        <List style={{flex: 1, width: 200}}> \n        <ListItem style={{color: 'teal', padding: 12, fontSize: 20}}>\n           <img src=\"/assets/teal.png\" style={{height: 33, marginRight: 8}} /> WorkHub\n        </ListItem>\n        <Divider />\n        {menu.map((x, ix) => (\n            <ListItem \n            className={menu.map((x) => x.path).indexOf(window.location.pathname.split(props.match.url)[1]) == ix ? 'selected menu-item': 'menu-item'}\n            onClick={() => props.history.push(`${props.match.url}${x.path}`)}\n            button >{x.icon} {x.label}</ListItem>\n        ))}\n        </List>\n        <Divider />\n        <ListItem button onClick={() => props.history.push(`${props.match.url}/settings`)}>\n            <Settings style={{marginRight: 12}} />\n            Settings\n        </ListItem>\n        </Drawer>\n    )\n}\n\nexport default withRouter(Sidebar)","import React from 'react';\n\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItem,\n  Paper,\n  Typography,\n  Tabs,\n  Tab\n} from '@material-ui/core';\n\nimport {\n  Notifications,\n  AccountTree,\n  Dashboard,\n  CalendarToday,\n  SupervisorAccount,\n  BusinessCenter,\n  Description,\n  Settings\n} from '@material-ui/icons';\n\nimport { connect } from 'react-redux';\n\nimport Projects from '../../views/Projects';\nimport ProjectView from '../../views/ProjectView';\nimport DashboardView from '../../views/Dashboard';\nimport Files from '../../views/Files';\nimport Calendar from '../../views/Calendar';\nimport SettingsView from '../../views/Settings';\nimport Teams from '../../views/Team';\nimport Equipment from '../../views/Equipment';\nimport AdminView from '../../views/Admin';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\nimport { Switch, Route } from 'react-router-dom';\n\nimport IPFS from 'ipfs';\n\nimport { setStatus, getNodeConf } from '../../actions/authActions';\nimport { getTypes, getPermissions } from '../../actions/adminActions'\nimport Sidebar from '../../components/sidebar';\nimport YActions, {YProvider} from '../../graph/yjs';\nimport { IPFSProvider } from '../../graph/ipfs'\n\nimport './index.css';\n\n\nfunction DashboardController(props){\n\n  let query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n  const currentPath = window.location.pathname.replace(/\\/dashboard/g, '')\n\n  console.log(props.swarmKey)\n\n  React.useEffect(async () => {\n    props.getTypes()\n    props.getPermissions()\n\n    //console.log(await node.id())\n\n    \n  }, [])\n\n  const renderTitle = () => {\n    switch(currentPath){\n      case '':\n      case '/':\n        return \"Dashboard\";\n      case '/calendar':\n        return \"Calendar\"\n      case '/projects':\n        return \"Projects\"\n      case '/team':\n        return \"Team\";\n      case '/equipment':\n        return \"Equipment\"\n      case '/files':\n        return \"Files\";\n    }\n  }\n\n  const renderActionBlock = () => {\n    console.log(currentPath)\n    switch(currentPath){\n      case '/projects':\n        let project_set = [...new Set(props.projects.map((x) => x.status))]\n        console.log(project_set)\n        return (\n        <Tabs value={project_set.indexOf(query_string.status)}>\n          {project_set.map((x) => (\n            <Tab label={x} onClick={() => {\n              query_string.status = x;\n            props.history.push(`${props.location.pathname}?${qs.stringify(query_string)}`)\n          }}/>\n          ))}\n        </Tabs>\n        )\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <IPFSProvider swarmKey={props.swarmKey}>\n    <YProvider>\n    <div className=\"dashapp\">\n      <Sidebar match={props.match} />\n      <div className=\"dashapp-body\">\n\n        <Switch>\n          <Route path={`${props.match.url}`} exact component={DashboardView} />\n          <Route path={`${props.match.url}/calendar`} render={(props) => (\n            <Calendar {...props} />\n          )} />\n          <Route path={`${props.match.url}/projects`} component={Projects} exact />\n          <Route path={`${props.match.url}/projects/:id`} render={(props) => (\n            <ProjectView {...props} />\n          )} />\n          <Route path={`${props.match.url}/files`} render={(props) => {\n            return <Files {...props}  />\n          }} />\n          <Route path={`${props.match.url}/team`} component={Teams} />\n          <Route path={`${props.match.url}/equipment`} component={Equipment} />\n          <Route path={`${props.match.url}/settings`} component={SettingsView} />\n          <Route path={`${props.match.url}/admin`} component={AdminView} />\n        </Switch>\n      </div>\n    </div>\n    </YProvider>\n    </IPFSProvider>\n  );\n}\n\nexport default connect((state) => ({\n  projects: state.projects.list,\n  user: jwt_decode(state.auth.token),\n  swarmKey: state.auth.swarmKey\n}), (dispatch) => ({\n  getTypes: () => dispatch(getTypes()),\n  getPermissions: () => dispatch(getPermissions()),\n  setStatus: (status) => dispatch(setStatus(status))\n}))(DashboardController)\n","import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/client';\nimport { getQuote, getNodeConf, LOGIN, setToken } from '../../actions/authActions';\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Login(props){\n    const [ quote, setQuote ] = React.useState({})\n    const [ error, setError ] = React.useState(null)\n    const [ username, setUsername ] = React.useState('')\n    const [ password, setPassword ] = React.useState('')\n\n    const [ doLogin ] = useMutation(LOGIN)\n\n    const login = () => {\n        doLogin({variables: {\n            username: username,\n            password: password\n        }}).then((r) => {\n            if(r.data.login && r.data.login.token){\n                props.getNodeConf()\n                props.setToken(r.data.login.token)\n                props.history.push('/dashboard')\n            }else if(r.data.login && r.data.login.error){\n                setError(r.data.login.error)\n            }\n        })\n    }\n\n    React.useEffect(() => {\n        getQuote().then((quote) => {\n            setQuote(quote)\n        })\n    })\n\n    return (\n        <div className=\"login-view\">\n            <div className=\"image-banner\">\n                <div className=\"quotes\">\n                <span>\n                    {quote.q}\n                </span>\n                <span>{quote.a}</span>\n                </div>\n            </div>\n            <Paper style={{display: 'flex', flex: 0.3, flexDirection: 'column', padding: 8}}>\n                <div style={{display: 'flex', alignItems: 'center', paddingBottom: 8}}>\n                    <img style={{height: 70, marginRight: 12}} src=\"/assets/teal.png\" />\n                    <Typography style={{color: 'teal'}} variant=\"h4\">WorkHub</Typography>\n\n                </div>\n                <Divider style={{marginBottom: 22}} />\n            <TextField \n                error={error}\n                label=\"Username\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)}/>\n            <TextField \n                error={error}\n                label=\"Password\" \n                type=\"password\" \n                value={password} \n                onKeyDown={(e) => {if(e.keyCode == 13) {login()}}}\n                onChange={(e) => setPassword(e.target.value)}/>\n            <Button \n                onClick={login}\n                style={{marginTop: 33}} \n                color=\"primary\" \n                variant=\"contained\">Login</Button>\n            </Paper>\n\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch) => ({\n    setToken: (token) => dispatch(setToken(token)),\n    getNodeConf: () => dispatch(getNodeConf())\n}))(Login)","import * as types from '../actions/types';\n\nconst init = {\n  list: []\n}\n\nlet updated;\n\nexport default function projectReducer(state = init, action={}){\n  switch(action.type){\n    case types.SET_PROJECTS:\n      return {\n        ...state,\n        list: action.projects\n      }\n    case types.REMOVE_PROJECT:\n      updated = state.list.slice()\n      let pIx = updated.map((x) => x.id).indexOf(action.id)\n      updated.splice(pIx, 1)\n      return {\n        ...state,\n        list: updated\n      }\n    case types.ADD_PROJECT:\n      return {\n        ...state,\n        list: state.list.concat([action.newProject])\n      }\n    case types.UPDATE_PROJECT:\n      updated = state.list.slice()\n      let ix = updated.map((x) => x.id).indexOf(action.id)\n      updated[ix] = {\n        ...updated[ix],\n        ...action.project\n      }\n      return {\n        ...state,\n        list: updated\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    permissions: [],\n    types: []\n}\n\nexport default function dashboardReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_DASHBOARD_PERMS:\n            return {\n                ...state,\n                permissions: action.perms\n            }\n        case types.SET_DASHBOARD_TYPES:\n            return {\n                ...state,\n                types: action.types\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n  list: []\n}\n\nexport default function fileReducer(state = INIT, action = {}){\n  switch(action.type){\n    case types.SET_FILES:\n      return {\n        ...state,\n        list: action.files\n      }\n    case types.ADD_FILE:\n      return {\n        ...state,\n        list: state.list.concat([action.file])\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    token: null,\n    status: 'disconnected',\n    swarmKey: null\n}\n\nexport default function authReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_TOKEN:\n            return {\n                ...state,\n                token: action.token\n            }\n        case types.SET_NODE_CONF:\n            return {\n                ...state,\n                swarmKey: action.swarmKey\n            }\n        case types.SET_STATUS:\n            return {\n                ...state,\n                status:  action.status\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    list: []\n}\n\nlet updated;\nexport default function equipmentReducer(state = INIT, action={}){\n    switch(action.type){\n        case types.SET_EQUIPMENT:\n            return {\n                ...state,\n                list: action.equipment\n            }\n        case types.ADD_EQUIPMENT:\n            return {\n                ...state,\n                list: state.list.concat([action.newItem])\n            }\n        case types.UPDATE_EQUIPMENT:\n            updated = state.list.slice()\n            let ix = updated.map((x) => x.id).indexOf(action.id)\n            updated[ix] = {\n                ...updated[ix],\n                ...action.equipment\n            }\n            return {\n                ...state,\n                list: updated\n            }\n        case types.REMOVE_EQUIPMENT:\n            updated = state.list.slice()\n            let eIx = updated.map((x) => x.id).indexOf(action.id)\n            updated.splice(eIx, 1)\n            return {\n                ...state,\n                list: updated\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types'\n\nconst INIT = {\n    list: []\n}\n\nlet updated, tIx;\n\nexport default function teamReducer(state = INIT, action = {} ){\n    switch(action.type){\n        case types.SET_TEAM:\n            return {\n                ...state,\n                list: action.team\n            }\n        case types.ADD_TEAM_MEMBER:\n            return {\n                ...state,\n                list: state.list.concat([action.newMember])\n            }\n        case types.UPDATE_TEAM_MEMBER:\n            updated = state.list.slice()\n            tIx = updated.map((x) => x.id).indexOf(action.id)\n            updated[tIx] = {\n                ...updated[tIx],\n                ...action.member\n            }\n            return {\n                ...state,\n                list: updated\n            }\n        case types.REMOVE_TEAM_MEMBER:\n            updated = state.list.slice()\n            tIx = updated.map((x) => x.id).indexOf(action.id)\n            updated.splice(tIx, 1)\n            return {\n                ...state,\n                list: updated\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    bookings: []\n}\n\nexport default function calendarReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_BOOKINGS:\n            return {\n                ...state,\n                bookings: action.bookings\n            }\n        case types.ADD_BOOKING:\n            return {\n                ...state,\n                bookings: state.bookings.concat([action.booking])\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport projects from './projects';\nimport dashboard from './dashboard';\nimport files from './files';\nimport auth from './auth';\nimport equipment from './equipment';\nimport team from './team';\nimport calendar from './calendar';\n\nexport default combineReducers({\n  projects,\n  auth,\n  files,\n  calendar,\n  dashboard,\n  equipment,\n  team\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk))\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { Provider } from 'react-redux';\nimport DashboardController from './controllers/DashboardController';\nimport Login from './views/Login';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider\n} from '@material-ui/pickers'\n\nimport GClient from './graph';\nimport configureStore from './configureStore';\n\nimport './App.css';\n\nconst { store, persistor } = configureStore();\nconst client = GClient();\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Provider store={store}>\n      <ApolloProvider client={client}>\n      <Router>\n      <PersistGate loading={null} persistor={persistor}>\n\n      <div className=\"App\">\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/dashboard\" render={(props) => {\n          if(store.getState().auth.token){\n            return <DashboardController {...props} />\n          }else{\n            return <Redirect to=\"/\" />\n          }\n        }} />\n      </div>\n      </PersistGate>\n    </Router>\n      </ApolloProvider>\n    </Provider>\n  </MuiPickersUtilsProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { pdfjs } from 'react-pdf';\nimport { setChonkyDefaults } from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\n// Somewhere in your `index.ts`:\nsetChonkyDefaults({ iconComponent: ChonkyIconFA });\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport IPFS from 'ipfs';\nimport { encode, decode } from 'uint8-to-base64'\nimport { P2PStack } from './p2p-stack';\nimport { withContext } from \"with-context\";\nexport const IPFSContext = React.createContext({})\n\nexport const withIPFS = withContext(IPFSContext, \"ipfs\")\n\nexport const IPFSProvider = (props) => {\n\n    const [ isReady, setReady ] = React.useState(false)\n    const [ ipfs, setIPFS ] = React.useState(null)\n    const host = \"thetechcompany.workhub.services\";\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            let node = ipfs;\n            if(ipfs){\n                console.info(\"=> IPFS Already Started\")\n            }else{\n                console.time('IPFS Started')\n\n                try{\n                    node = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [`/dns4/${host}/tcp/6969/ws/p2p-webrtc-star`]\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(decode(props.swarmKey))\n                    })\n                    console.log(await node.id())\n                }catch(e){\n                    console.error(e)\n                }\n                console.timeEnd('IPFS Started')\n            }\n            setIPFS(node)\n            setReady(node != null)\n\n        }    \n        if(props.swarmKey) startIPFS()\n        return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [props.swarmKey])\n\n    return (\n        <IPFSContext.Provider value={{node: ipfs, isReady}}>\n            {props.children}\n        </IPFSContext.Provider>\n    )\n}\n\n/*export const useIPFS = (swarmKey) => {\n    console.log(\"SWARM KEY\", swarmKey)\n    swarmKey = decode(swarmKey)\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            if(ipfs){\n                console.log('IPFS Already Started')\n            }else{\n                console.time('IPFS Started')\n                try{\n                    ipfs = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [\n                                   //'/ip4/127.0.0.1/tcp/9090/ws/p2p-webrtc-star'\n                                 '/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star'\n                                ],\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(swarmKey)\n                    })\n                    \n                    console.timeEnd('IPFS Started')\n\n                    setInterval(async () => {\n                        if(ipfs) console.log(await ipfs.swarm.peers())\n                    }, 2000)\n                }catch(err){\n                    console.error('IPFS init error: ', err)\n                    ipfs = null;\n                }\n            }\n        }\n\n        if(swarmKey) startIPFS()\n      /*  return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [ipfs])\n    return {ipfs}\n}*/\n\nexport const IPFSStack = async (swarmKey = 'L2tleS9zd2FybS9wc2svMS4wLjAvCi9iYXNlMTYvCmJlMGI3MmJkNGRmODAwNzkwYjU5ZWZhNzA3YjcxNzExYWIwYjNhNGI0OTAyMWNiNDUwMGQxMDZkMWUwZGVmNTg=') => {\n    console.log(\"IPFS Node Starting\")\n\n    let node = await IPFS.create({\n        repo: 'workhub-' + new Date().getTime(),\n        config: {\n          Addresses: {\n            Swarm: [\n                '/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star',\n               '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star'\n            ],\n            Bootstrap: []\n          }\n        },\n      })\n    console.log(\"IPFS Node Started\")\n    console.log(await node.id())\n    //  node.swarm.connect('/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star')\n    console.log(await node.swarm.localAddrs())\n    return node;\n}","import React, {useCallback, useMemo} from 'react';\n\nimport { ChonkyActions, EssentialFileActions, FileHelper, FileBrowser, FileNavbar, FileContextMenu, FileList, FileToolbar, FullFileBrowser } from 'chonky';\n\nimport { useCustomFileMap, useFiles } from './file-hooks'\n\nimport FolderDialog from './folder-dialog'\nimport { v4 as uuidv4 } from 'uuid'\nimport JSZip from 'jszip'\n\nimport { Typography } from '@material-ui/core'\nimport Spinner from 'react-spinkit';\n\nimport { withIPFS } from '../../graph/ipfs';\nimport { connect } from 'react-redux';\nimport async from 'async'\nimport { saveAs } from 'file-saver';\nimport downloadjs from 'downloadjs'\nimport './index.css';\n\n\nfunction WorkhubFileBrowser(props){\n\n    const [ files, setFiles ] = React.useState([])\n\n    const [ folderDialog, dialogFolder ] = React.useState(false)\n    const [ folderChain, setFolderChain ] = React.useState([{id: 'default', name: props.title || 'File Storage', isDir: true}])\n\n    const fileActions = React.useMemo(\n        () => [ChonkyActions.CreateFolder, ChonkyActions.DeleteFiles],\n        []\n    );\n\n    React.useEffect(() => {\n        if(props.files && props.ipfs.isReady){\n            let f = props.files.slice()\n\n            console.log(\"File Browser\", f.length)\n            const getStat = (x, cb) => {\n                props.ipfs.node.files.stat(`/ipfs/${x.cid}`, {timeout: 2 * 1000}).then((stat) => {\n                    console.log(stat)\n                    cb(null, {\n                        ...x,\n                        size: stat.size\n                    })\n                }).catch((err) => {\n                    cb(null)\n                    console.log(err)\n                })\n               \n              //  cb(null, {...x, size: stat.size})\n            }\n\n            setFiles(f)\n           /* async.map(f, getStat, (err, _files) => {\n                console.log(\"_FILES\", _files, err)\n                setFiles(_files)\n            })*/\n            \n        }\n    }, [props.files, props.ipfs])\n\n    const onFileAction = (action) => {\n        switch(action.id){\n            case \"create_folder\":\n                dialogFolder(true)\n                break;\n            case \"open_files\":\n                if(action.payload.targetFile.isDir){\n                    console.log(\"DsIR\")\n                }else{\n                    if(props.onFileOpen) props.onFileOpen(action.payload.targetFile)\n                }\n                break;\n            case \"download_files\":\n                let files = action.state.selectedFiles;\n                \n                let downloadSize = files.map((x) => x.size).reduce((a, b) => a+b)\n\n                \n                let progress = 0;\n\n                async.map(files, (file, cb) => {\n                    (async () => {\n                        let buff = Buffer.from('')\n                        for await (const chunk of props.ipfs.node.cat(file.cid)){\n                            buff = Buffer.concat([buff, chunk])\n                            progress += chunk.length\n                            props.onDownloadProgress((progress / downloadSize) * 100)\n                        }\n                        cb(null, {\n                            ...file,\n                            content: buff\n                        })\n                    })()\n                }, (err, results) => {\n                    console.log(results)\n                    props.onDownloadEnd()\n                    if(results.length == 1){\n                        downloadjs(new Blob([results[0].content]), results[0].name)\n                    }else{\n\n                        let zip = JSZip()\n\n                        for(var i = 0; i < results.length; i++){\n                            console.log(\"Add \", results[i].name, results[i].content.length)\n                            zip.file(results[i].name, results[i].content, {binary: true})\n                        }\n                        zip.generateAsync({type: 'blob'}).then((content) => {\n                            console.log(content)\n                            saveAs(content, \"workhub-download.zip\")\n                        })\n                    }\n                })\n\n                /*if(files.length == 1){\n                    (async () => {\n                        let size = files[0].size;\n                        \n                        let progress = 0;\n\n                        let buff = Buffer.from('')\n                        for await(const chunk of ipfs.cat(files[0].cid)){\n                            if(props.onDownloadProgress) props.onDownloadProgress(((progress + chunk.length) / size) * 100)\n                            console.log(\"=> Chunking \", ((progress + chunk.length) / size) * 100)\n                            progress += chunk.length\n                            buff = Buffer.concat([buff, chunk])\n                        }\n                        props.onDownloadEnd()\n                        downloadjs(new Blob([buff]), files[0].name)\n                    })()\n                }*/\n                break;\n            default:\n                break;\n        }\n    }\n\n    const [ folders, setFolders ] = React.useState([])\n\n    return (\n        <div className=\"workhub-fs\">\n            <FolderDialog \n                open={folderDialog} \n                onAdd={(name) => setFolders(folders.concat([{\n                    id: uuidv4(),\n                    filename: name,\n                    isDir: true\n                }]))}\n                onClose={() => dialogFolder(false)} />\n            <FullFileBrowser \n                fileActions={[ChonkyActions.CreateFolder, ChonkyActions.UploadFiles, ChonkyActions.DownloadFiles]}\n                disableDragAndDropProvider={true}\n                instanceId=\"workhub-fs\"\n                onFileAction={onFileAction}\n                files={(files || []).filter((a) => a && (a.filename || a.name)).concat(folders).map((x, ix) => ({\n                    id: x.id,\n                    cid: x.cid,\n                    size: x.size,\n                    ext: x.extension,\n                    extension: x.extension,\n                    isDir: x.isDir,\n                    name: x.id ? x.filename : x.name\n                }))}\n                 folderChain={folderChain} >\n                \n\n            </FullFileBrowser>\n            {!props.ipfs.isReady && (\n                    <div className=\"ipfs-loader\">\n                        <Spinner />\n                        <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Loading file network</Typography>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default withIPFS(WorkhubFileBrowser)","import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    TextField,\n    Button\n} from '@material-ui/core'\n\nexport default function FolderDialog(props){\n    const [ name, setName ] = React.useState('')\n    \n    const addFolder = () => {\n        if(props.onAdd) props.onAdd(name)\n        setName('')\n        props.onClose()\n    }\n\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>Add Folder</DialogTitle>\n            <DialogContent>\n                <TextField \n                    onKeyDown={(e) => {\n                        if(e.keyCode == 13){\n                            addFolder()\n                        }\n                    }}\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    label=\"Folder name\" />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClick}>Cancel</Button>\n                <Button onClick={addFolder} color=\"primary\" variant=\"contained\">Create</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import MPLEX from 'libp2p-mplex';\nimport {NOISE} from 'libp2p-noise';\nimport Protector, {generate} from 'libp2p/src/pnet';\nimport WebRTCStar from 'libp2p-webrtc-star'\n\nconst transportKey = WebRTCStar.prototype[Symbol.toStringTag]\n\nexport const P2PStack = (swarmKey) => ({\n    modules: {\n        transport: [WebRTCStar],\n        streamMuxer: [MPLEX],\n        connEncryption: [NOISE],\n        connProtector: new Protector(Buffer.from(swarmKey))\n    },\n    config: {\n        transport: {\n            [transportKey]: {\n                enabled: true\n            }\n        },\n        peerDiscovery: {\n            autoDial: true,\n            [WebRTCStar.tag]: {\n                enabled: true\n            }\n        }\n    }\n})","import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button\n} from '@material-ui/core';\n\nimport GLBCard from '../../glb-card'\nimport PDFCard from '../../pdf-card';\n\nimport { connect } from 'react-redux';\nimport { withIPFS } from '../../../graph/ipfs';\n\nfunction FilePreviewDialog(props){\n\n    const file = props.file || {}\n    const [data, setData] = React.useState(null)\n\n    const renderContent = () => {\n        if(data){\n        switch(file.extension){\n            case 'pdf':\n                return (\n                    <PDFCard data={data}/>\n                )\n            case 'glb':\n                return (\n                    <GLBCard data={data}/>\n                )\n            case 'png':\n                return (\n                    <img style={{width: '33%', height: '100%'}} src={data} />\n                )\n            default:\n                return null;\n        }\n    }\n    }\n\n    React.useEffect( async () => {\n        if(data) URL.revokeObjectURL(data)\n\n        if(props.file && props.ipfs && props.ipfs.isReady){\n            console.log(\"Fetching\", props.file.cid)\n            let file =  props.ipfs.node.cat(props.file.cid)\n            let data = Buffer.from('')\n            for await (const chunk of file){\n              data = Buffer.concat([data, chunk])\n            }\n            console.log(\"Setting data\")\n            setData(URL.createObjectURL(new Blob([data])))\n        }\n    }, [props.file, props.ipfs])\n\n    const onClose = () => {\n        if(data) URL.revokeObjectURL(data)\n        if(props.onClose) props.onClose();\n    }\n\n    return (\n        <Dialog fullWidth maxWidth=\"lg\" open={props.open} onClose={onClose}>\n            <DialogTitle>{file.filename}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withIPFS(FilePreviewDialog)","import React from 'react';\n\n\nexport default function GLBCard(props){\n    let canvas;\n    let scene;\n    let engine;\n\n  \n    React.useEffect(() => {\n        const onResizeWindow = () => {\n            if (engine) {\n              engine.resize();\n            }\n        }\n        if(props.data){\n\n        \n        if(!engine){\n        engine = new window.BABYLON.Engine(\n            canvas,\n            true\n        )\n        }\n\n        if(!scene){\n        scene = new window.BABYLON.Scene(engine)\n        scene.createDefaultEnvironment();\n        }\n\n        var camera = new window.BABYLON.ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 2.5, 3, new window.BABYLON.Vector3(0, 0, 10), scene);\n      \n        camera.setTarget(window.BABYLON.Vector3.Zero());\n        camera.minZ = 0;\n        camera.wheelPrecision = 7;\n        camera.speed = 0.5;\n\n        console.log(props.data)\n\n        window.BABYLON.SceneLoader.ImportMesh(null, \"\", props.data, scene, (e) => {\n            console.log(e)   \n        }, null, null, \".glb\")\n      \n        camera.attachControl(canvas, false);\n        window.addEventListener(\"resize\", onResizeWindow);\n        engine.runRenderLoop(function(){\n            scene.render();\n        });\n\n   \n    }\n    return () => {\n        if(engine){\n            engine.stopRenderLoop()\n        }\n        if(scene) {\n            scene.dispose()\n            scene = null\n        }\n\n        window.removeEventListener('resize', onResizeWindow)\n    }\n    }, [props.data])\n\n    const onCanvasLoad = (c) => {\n        if(c !== null){\n            canvas = c;\n        }\n    }\n\n    return (\n        <canvas style={{width: '100%'}} ref={onCanvasLoad}/>\n    )\n}","import React from 'react';\n\nimport { Document, Page } from 'react-pdf';\n\nexport default function PDFCard(props){\n    \n    const [ numPages, setNumPages ] = React.useState(null)\n    const [ pageNumber, setPageNumber ] = React.useState(1)\n\n    const onDocumentLoad = ({numPages}) => {\n        setNumPages(numPages)\n    }\n\n    return (\n        <Document\n            file={{data: props.data}}\n            onLoadSuccess={onDocumentLoad}>\n             {\n              Array.from(\n                new Array(numPages),\n                (el, index) => (\n                  <Page\n                    key={`page_${index + 1}`}\n                    pageNumber={index + 1}\n                  />\n                ),\n              )\n            }\n        </Document>\n    )\n}"],"sourceRoot":""}