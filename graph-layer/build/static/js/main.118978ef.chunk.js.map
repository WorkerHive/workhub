{"version":3,"sources":["graph/index.js","components/dashboard-header/index.js","components/more-menu/index.js","components/search-table/index.js","components/permission-form/index.js","actions/projectActions.js","views/Projects/index.js","components/file-dialog/index.js","components/graph-kanban/index.js","tabs/project/plan.js","graph/yjs.js","tabs/project/index.js","tabs/project/calendar.js","tabs/project/files.js","tabs/project/team.js","views/ProjectView/index.js","actions/calendarActions.js","components/calendar-dialog/index.js","views/Calendar/index.js","views/Settings/index.js","actions/teamActions.js","views/Team/index.js","actions/equipmentActions.js","views/Equipment/index.js","nodes/TypeDefNode.js","actions/adminActions.js","nodes/MSSQLNode.js","nodes/MSSQLServerNode.js","views/Admin/index.js","controllers/DashboardController/index.js","actions/authActions.js","views/Login/index.js","reducers/projects.js","reducers/dashboard.js","reducers/files.js","reducers/auth.js","reducers/equipment.js","reducers/team.js","reducers/calendar.js","reducers/index.js","configureStore.js","App.js","reportWebVitals.js","index.js","actions/fileActions.js","actions/types.js","components/pdf-card/index.js","views/Files/index.js","components/file-preview-dialog/index.js"],"names":["ApolloClient","link","createUploadLink","uri","process","REACT_APP_GRAPH_URL","cache","InMemoryCache","addTypename","connect","state","user","jwt_decode","auth","token","dispatch","props","className","variant","title","value","tabs","map","x","toLowerCase","indexOf","selectedTab","onChange","e","newVal","onTabSelect","label","name","MoreMenu","React","useState","menuOpen","openMenu","IconButton","onClick","preventDefault","stopPropagation","currentTarget","MoreVert","Menu","open","onClose","anchorEl","MenuItem","onDelete","style","color","SearchTable","Paper","flex","marginTop","TextField","InputProps","startAdornment","InputAdornment","position","Search","size","ButtonGroup","Button","ViewHeadline","ViewModule","Divider","List","data","ListItem","renderItem","PermissionForm","dialogOpen","openDialog","dataObj","setDataObj","permissions","type","useEffect","selected","Dialog","fullWidth","DialogTitle","DialogContent","display","flexDirection","fields","typeKey","k","typeDef","push","d","Object","assign","target","renderFields","DialogActions","onSave","children","create","Fab","bottom","right","Add","client","GClient","projects","list","dashboard","types","filter","a","getProjects","query","gql","then","r","y","cloneDeep","__typename","addProject","project","mutate","mutation","variables","newProject","updateProject","id","projectId","removeProject","query_string","qs","parse","location","search","ignoreQueryPrefix","setSelected","Set","status","undefined","trim","toUpperCase","tab","history","window","pathname","stringify","item","button","match","url","Typography","files","setSearch","selectedFiles","filename","Checkbox","checked","onAttach","GraphKanban","board","columns","cards","graph","nodes","initialBoard","yDoc","ydoc","Y","host","URL","hostname","WebsocketProvider","getMap","YActions","MinusSquare","SvgIcon","fontSize","width","height","PlusSquare","CloseSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","div","Collapse","StyledTreeItem","withStyles","theme","iconContainer","group","marginLeft","paddingLeft","borderLeft","fade","palette","text","primary","TreeItem","alignItems","justifyContent","addChild","makeStyles","root","flexGrow","maxWidth","useMutation","ATTACH_FILE","attachFiles","fileId","selectedView","setView","setNodes","links","setLinks","expanded","setExpanded","docProject","setProject","doc","setDoc","observer","obj","toJSON","console","log","unobserve","_doc","observe","init","_setNodes","set","_setLinks","renderTree","tree_branch","_children","source","parent_pos","n","addNode","addLink","nodeId","node","slice","uuidv4","l","renderList","rootNodes","length","TreeView","multiSelect","defaultExpanded","onNodeToggle","event","newExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","padding","Dashboard","EmojiNature","onNodeChange","onLinkChange","renderPlan","ownProps","params","setSelectedTab","replace","path","render","team","equipment","addBooking","time","booking","step","setStep","searchTab","setSearchTab","date","setDate","allDay","setAllDay","startTime","setStart","endTime","setEnd","selectedItems","setSelectedItems","Tabs","Tab","renderStepTitle","minHeight","Autocomplete","options","getOptionLabel","renderInput","format","margin","FormControlLabel","control","marginRight","s","renderStep","sTime","eTime","moment","get","_booking","valueOf","parseInt","items","bookings","localizer","momentLocalizer","calendar","getBookings","getState","setBookings","zIndex","events","start","Date","end","startAccessor","endAccessor","Settings","UPDATE_TEAM_MEMBER","getTeam","addTeamMember","member","newMember","updateTeamMember","memberId","getEquipment","addEquipment","newItem","updateEquipment","equipmentId","removeEquipment","modal","withEditor","src","typedef","UPDATE_INTEGRATION_MAP","getTypes","adminTypes","tables","setTables","store","getSource","connectionLayout","editor","disabled","error","table","updateNode","bucketLayout","getColumns","availableColumns","provides","autoHighlight","ret","changeKey","concat","db","username","password","ix","draggable","updateIntegrationMap","integrationMap","integrations","nodeTypes","TypeDefNode","MSSQLNode","MSSQLServer","getPermissions","typePermissions","perms","ipfsNode","setIPFS","menu","icon","CalendarToday","AccountTree","SupervisorAccount","BusinessCenter","Description","IPFS","stop","Drawer","fontWeight","split","Calendar","component","Projects","exact","Files","ipfs","Teams","Equipment","SettingsView","AdminView","LOGIN","updated","setToken","setError","setUsername","setPassword","doLogin","login","onKeyDown","keyCode","INIT","combineReducers","action","pIx","splice","file","eIx","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","App","utils","MomentUtils","loading","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","pdfjs","GlobalWorkerOptions","workerSrc","version","ReactDOM","StrictMode","document","getElementById","UPLOAD_FILE","CONVERT_FILE","addFile","getFiles","SET_PROJECTS","ADD_PROJECT","REMOVE_PROJECT","UPDATE_PROJECT","SET_TEAM","ADD_TEAM_MEMBER","SET_EQUIPMENT","ADD_EQUIPMENT","UPDATE_EQUIPMENT","REMOVE_EQUIPMENT","SET_FILES","SET_BOOKINGS","ADD_BOOKING","SET_TOKEN","ADD_FILE","SET_DASHBOARD_TYPES","SET_DASHBOARD_PERMS","PDFCard","numPages","setNumPages","onLoadSuccess","Array","el","index","pageNumber","uploadFile","selectedData","setData","onDrop","useCallback","acceptedFiles","duplicate","useDropzone","getRootProps","getInputProps","isDragActive","vars","targetFormat","cat","cid","Buffer","chunk","extension","content","FilePreviewDialog","renderContent"],"mappings":"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","file":"static/js/main.118978ef.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client'\n\nexport default () => {\n  return new ApolloClient({\n    link: createUploadLink({\n      uri: (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? \n        'https://thetechcompany.workhub.services/graphql' || 'http://localhost:4000/graphql' : \n        process.env.REACT_APP_GRAPH_URL || '/graphql',\n    }),\n    cache: new InMemoryCache({\n      addTypename: false\n    })\n  })\n}\n","import React from 'react';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n    Notifications\n} from \"@material-ui/icons\"\n\nimport {\n    Paper,\n    Typography,\n    Tabs,\n    Tab\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nfunction DashboardHeader(props){\n    return (\n        <Paper className=\"dashapp-header\">\n        <Typography variant=\"h6\">{props.title}</Typography>\n        <div className=\"dashapp-header__tabs\">\n            <Tabs value={props.tabs.map((x) => x.toLowerCase()).indexOf(props.selectedTab.toLowerCase())} onChange={(e, newVal) => {\n                props.onTabSelect(props.tabs[newVal])\n            }}>\n            {(props.tabs || []).map((x) => (\n                <Tab label={x} />\n            ))}\n            </Tabs>\n\n        </div>\n        <div className=\"actions-col\">\n          <Notifications />\n          <div className=\"user-info\">\n            <Typography variant=\"subtitle1\">{props.user.name}</Typography>\n            <span>Online</span>\n          </div>\n        </div>\n        </Paper>\n    )\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token)\n}), (dispatch) => ({\n\n}))(DashboardHeader)","import React from 'react';\n\nimport {\n    MoreVert\n} from '@material-ui/icons'\n\nimport {\n    IconButton,\n    Menu,\n    MenuItem\n} from '@material-ui/core';\n\nexport default function MoreMenu(props){\n    const [ menuOpen, openMenu ] = React.useState(null);\n\n    const toggleMenu = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        openMenu(e.currentTarget)\n    }\n\n    return [\n        <IconButton className=\"more-menu\" onClick={toggleMenu}>\n            <MoreVert />\n        </IconButton>,\n        <Menu open={menuOpen} onClose={() => openMenu(null)} anchorEl={menuOpen}>\n            <MenuItem>Edit</MenuItem>\n            <MenuItem onClick={() => {\n                if(props.onDelete) {\n                    openMenu(null)\n                 props.onDelete()\n                 }\n                 }} style={{color: 'red'}}>Delete</MenuItem>\n        </Menu>\n    ]\n}","import React from 'react';\n\nimport {\n    Search,\n    ViewHeadline,\n    ViewModule\n} from '@material-ui/icons';\n\nimport {\n    Paper,\n    TextField,\n    ButtonGroup,\n    Button,\n    Divider,\n    List,\n    ListItem,\n    InputAdornment\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function SearchTable(props){\n    return (\n        <Paper style={{flex: 1, marginTop: 12}}>\n            <div className=\"options-bar\">\n                <TextField\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }}\n                    label=\"Search\"\n                    variant=\"outlined\"\n                    size=\"small\" />\n                <ButtonGroup>\n                    <Button><ViewHeadline /></Button>\n                    <Button><ViewModule /></Button>\n                </ButtonGroup>\n            </div>\n            <Divider />\n            <div className=\"grid-list\">\n                <List>\n                    {props.data.map((x) => (\n                    <ListItem>\n                        {props.renderItem(x)}\n                    </ListItem>\n                    ))}\n                </List>\n            </div>\n        </Paper>\n    )\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    Dialog,\n    DialogTitle,\n    TextField,\n    DialogActions,\n    Button,\n    DialogContent\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function PermissionForm(props){\n    const [dialogOpen, openDialog] = React.useState(false)\n\n    const [ dataObj, setDataObj ] = React.useState({})\n\n    const permissions = props.permissions && props.permissions[0] || {}\n    const type = props.type && props.type[0] || {}\n\n    React.useEffect(() => {\n        if(props.selected){\n            setDataObj(props.selected)\n        }\n    }, [props.selected])\n\n    const renderFields = (type) => {\n        let fields = [];\n    \n        for(var k in type.typeDef){\n            const typeKey = k;\n            if(type.typeDef[k] == \"String\"){\n                fields.push((\n                    <TextField value={dataObj[typeKey]} onChange={(e) => {\n                        let d = Object.assign({}, dataObj);\n                        d[typeKey] = e.target.value;\n                        setDataObj(d)\n                    }} label={typeKey} ></TextField>\n                ))\n            }\n        }\n        return fields;\n    }\n\n    const onClose = () => {\n        props.onClose()\n        openDialog(false)\n        setDataObj({})\n    }\n\n    const onSave = () => {\n        props.onSave(dataObj)\n        onClose();\n    }\n\n    return (\n        <div className=\"permission-form\">\n            <Dialog fullWidth open={props.selected || dialogOpen} onClose={() => {\n               onClose()\n            }}>\n                <DialogTitle>{type.name}</DialogTitle>\n                <DialogContent style={{display: 'flex', flexDirection: \"column\"}}>\n                    {renderFields(type)}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => {onClose()}}>Cancel</Button>\n                    <Button onClick={() => onSave()} color=\"primary\" variant=\"contained\">Save</Button>\n                </DialogActions>\n            </Dialog>\n            <div className=\"permission-form__inner\">\n                {props.children}\n            </div>\n            {permissions.create && (\n                <Fab onClick={() => openDialog(true)} color=\"primary\" style={{position: 'absolute', bottom: 12, right: 12}}>\n                    <Add />\n                </Fab>\n            )}\n        </div>\n    )\n}","import * as types from './types';\nimport { gql } from '@apollo/client';\nimport { cloneDeep } from 'lodash';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addProject = (project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n      mutation AddProject($project: ProjectInput){\n        addProject(project: $project){\n          id\n          name\n          description\n          status\n        }\n      }\n    `,\n    variables: {\n      project: project\n    }\n    }).then((r) => r.data.addProject).then((r) => {\n      dispatch({type: types.ADD_PROJECT, newProject: r})\n    })\n  }\n}\n\nexport const updateProject = (projectId, project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n  mutation UpdateProject($projectId: ID, $project: ProjectInput){\n    updateProject(projectId: $projectId, project: $project){\n      id\n      name\n      description\n      status\n    }\n  }\n`, \nvariables: {\n  projectId: projectId,\n  project: project\n}}).then((r) => r.data.updateProject).then((r) => {\n  dispatch({type: types.UPDATE_PROJECT, project: project, id: projectId})\n})\n} \n  }\n\n  export const removeProject = (projectId) => {\n    return (dispatch) => {\n      return client.mutate({\n        mutation: gql`\n          mutation RemoveProject($projectId: ID){\n            removeProject(projectId: $projectId)\n          }\n        `,\n          variables: {\n            projectId: projectId\n          }\n      }).then((r) => r.data.removeProject).then((r) => {\n        if(r) dispatch({type: types.REMOVE_PROJECT, id: projectId})\n      })\n    }\n\n  }\n\nexport const getProjects = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetProjects {\n          projects{\n            id\n            name\n            description\n            status\n            files{\n              cid\n            }\n          }\n        }\n      `\n    }).then((r) => {\n      dispatch({type: types.SET_PROJECTS, projects: r.data.projects.map((x) => {\n        let y = cloneDeep(x)\n        delete y.__typename;\n        return y;\n      })})      \n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  ViewHeadline,\n  ViewModule,\n  Search,\n  Add\n} from '@material-ui/icons';\n\nimport {\n  List,\n  ListItem,\n  InputAdornment,\n  ButtonGroup,\n  Button,\n  Paper,\n  Divider,\n  TextField,\n  Fab,\n  Typography\n} from '@material-ui/core';\n\nimport MoreMenu from '../../components/more-menu';\nimport DashboardHeader from '../../components/dashboard-header';\n\nimport { useMutation } from '@apollo/client'\nimport { connect } from 'react-redux';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { updateProject, addProject, removeProject, getProjects } from '../../actions/projectActions';\nimport qs from 'qs';\n\nimport './index.css';\n\nfunction Projects(props){\n  const query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n  const [ selected, setSelected ] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getProjects() \n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[\"ALL\", ...new Set(props.projects.filter((a) => a.status != null && a.status != undefined).map((x) => x.status.trim().toUpperCase()))] || []}\n    onTabSelect={(tab) => {\n      if(tab == \"ALL\"){\n        delete query_string.status;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }else{\n        query_string.status = tab;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={query_string.status && query_string.status.toUpperCase() || 'ALL'}\n    title={\"Projects\"} />,\n    <PermissionForm\n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          delete d.id\n          props.updateProject(data.id, d)\n        }else{\n          props.addProject(data)\n        }\n      }} \n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable\n        data={props.projects.filter((a) => {\n          if(query_string.status && a.status == query_string.status){\n            return true;\n          }else if(!query_string.status){\n            return true;\n          }\n          return false;\n        }).filter((a) => a.name)}\n        renderItem={(item) => [\n          <div className=\"project-item\">\n            <ListItem button onClick={() => {\n              props.history.push(`${props.match.url}/${item.id}/plan`)\n              }}>\n              <Typography style={{flex: 1}} variant=\"subtitle1\">{item.name}</Typography>\n            </ListItem>\n            <MoreMenu onDelete={() => {\n              props.removeProject(item.id)\n            }} />\n          </div>\n        ]} />\n\n    </PermissionForm>\n\n  ]\n}\n\nexport default connect((state) => ({\n  projects: state.projects.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Projects\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Projects\")\n}), (dispatch) => ({\n  getProjects: () => dispatch(getProjects()),\n  addProject: (project) => dispatch(addProject(project)),\n  updateProject: (id, project) => dispatch(updateProject(id, project)),\n  removeProject: (id) => dispatch(removeProject(id))\n}))(Projects)\n","import React from 'react';\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    List,\n    ListItem,\n    Button,\n    InputAdornment,\n    TextField,\n    Checkbox\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nfunction FileDialog(props){\n    const [ search, setSearch ] = React.useState('')\n\n    const [ selectedFiles, setSelected ] = React.useState({})\n\n    const attachFiles = () => {\n        if(props.onAttach){\n            props.onAttach(selectedFiles)\n            setSelected({})\n            props.onClose()\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Files</DialogTitle>\n            <DialogContent>\n                <TextField \n                    fullWidth \n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    label=\"Search\" \n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }} />\n                <List>\n                    {props.files.filter((a) => a.filename && a.filename.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                        <ListItem button><Checkbox checked={selectedFiles[x.id]} onChange={(e) => {\n                            let files = selectedFiles;\n                            files[x.id] = e.target.checked;\n                            setSelected(files)\n                        }}/>{x.filename}</ListItem>\n                    ))}    \n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Close</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={attachFiles}>Attach</Button>\n            </DialogActions>\n\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    files: state.files.list\n}))(FileDialog)","import React from 'react';\n\nimport Board from '@lourenci/react-kanban'\nimport '@lourenci/react-kanban/dist/styles.css'\n\nexport default function GraphKanban(props){\n    const board = {\n        columns: [\n            {\n                id: 1,\n                title: \"Backlog\",\n                cards: props.graph.nodes.filter((a) => a.status != \"COMPLETED\" && a.status != \"BLOCKED\").map((x) => ({\n                    id: x.id,\n                    title: x.data.label,\n                }))\n            },\n            {\n                id: 2,\n                title: \"Doing\",\n                cards: []\n            },\n            {\n                id: 3,\n                title: \"Done\",\n                cards: []\n            }\n        ]\n    }\n    return (\n        <Board initialBoard={board}/>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport {\n    Add,\n    Dashboard as DashboardIcon,\n    List as ListIcon,\n    EmojiNature\n} from '@material-ui/icons';\n\nimport {\n    IconButton,\n    SvgIcon,\n    Collapse,\n    ButtonGroup,\n    Divider,\n    Button\n} from \"@material-ui/core\"\n\nimport {\n    TreeView,\n    TreeItem,\n} from '@material-ui/lab'\n\nimport HiveEditor from 'react-hive-flow'\nimport GraphKanban from '../../components/graph-kanban';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport YActions from '../../graph/yjs';\nimport './plan.css';\n\nconst ydoc = YActions()\nlet yDoc;\n\nexport default function PlanTab(props){\n  const [ selectedView, setView ] = React.useState('list')\n\n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n\n    const [ expanded, setExpanded ] = React.useState(['root'])\n\n    const [ docProject, setProject ] = React.useState({})\n    const [ doc, setDoc ] = React.useState(null)\n    \n    const observer = () => {\n      if(yDoc){\n        let obj = yDoc.toJSON()\n        console.log(\"OBSERVE\", obj)\n        if(obj.nodes != null){\n          setNodes(obj.nodes.map((x) => Object.assign({}, x)))\n        }\n        if(obj.links != null) {\n          setLinks(obj.links.map((x) => Object.assign({}, x)))\n        }\n      }\n    }\n\n    React.useEffect(() => {\n      console.log(\"YDC\", props)\n      if(props.project && ydoc && props.project.id != docProject.id){\n        if(doc) doc.unobserve(observer);\n\n        console.log(\"Setting up YDOC\")\n        let _doc = ydoc.getMap(`plan-${props.project.id}`)\n        yDoc = _doc;\n        setDoc(_doc)\n        _doc.observe(observer)\n\n        setProject(props.project)\n        \n        let init = _doc.toJSON();\n\n        if(init.nodes != null) setNodes(init.nodes)\n        if(init.links != null) setLinks(init.links)\n      }\n    }, [props.project, doc])\n\n    const _setNodes = (nodes) => {\n      if(doc){\n        doc.set('nodes', nodes)\n      }\n      setNodes(nodes)\n    }\n\n    const _setLinks = (links) => {\n      if(doc){\n        doc.set('links', links)\n      }\n      setLinks(links)\n    }\n\n    const renderTree = (tree_branch) => {\n        if(tree_branch){\n            let _links = links.filter((a) => a.source == tree_branch.id)\n            let _children = _links.map((x) => nodes.filter((a) => a.id == x.target)[0])\n\n            let parent_pos = nodes.filter((a) => a.id == tree_branch.id)[0].position\n\n            let item = (\n                <StyledTreeItem addChild={() => {\n                    let n = addNode({\n                        type: 'baseNode',\n                        data:{\n                          label: \"\"\n                        },\n                        position: {\n                          x: parent_pos.x,\n                          y: parent_pos.y + 121\n                        }\n                    })\n                    addLink({target: n.id, source: tree_branch.id})\n        \n                }} nodeId={tree_branch.id} label={tree_branch && tree_branch.data && tree_branch.data.label}>\n                    {(_children || []).map((x) => renderTree(x))}\n                </StyledTreeItem>\n            )\n            return item;\n        }\n    }\n\n    const addNode = (node) => {\n        let n = nodes.slice();\n        node.id = uuidv4()\n        if(!node.data)node.data = {};\n        if(!node.position)node.position = {x:300, y:300}\n        n.push(node)\n        _setNodes(n)\n        return node;\n    }\n\n    const addLink = (link) => {\n        let l = links.slice();\n        link.id = uuidv4()\n        l.push(link);\n        _setLinks(l)\n        return link;\n    }\n\n\n    const renderKanban = () => {\n      return (\n        <GraphKanban graph={{nodes: nodes}} />\n      )\n    }\n\n    const renderList = () => {\n      let rootNodes = nodes.filter((x) => links.filter((a) => a.target == x.id).length == 0)\n//      let rootNodes = links.filter((a) => a.source == 'root').map((x) => nodes.filter((a) =>  a.id == x.target)[0])\n\n      return (\n        <TreeView\n        multiSelect\n        defaultExpanded={['1']}\n        expanded={expanded}\n        onNodeToggle={(event, newExpanded) => {\n            console.log(event, newExpanded)\n            setExpanded(newExpanded)\n        }}\n        defaultCollapseIcon={<MinusSquare />}\n        defaultExpandIcon={<PlusSquare />}\n        defaultEndIcon={<CloseSquare />}>\n         <StyledTreeItem addChild={() => {\n            let n = addNode({\n                type: 'baseNode',\n                data: {label: ''}\n            })\n          //  addLink({target: n.id, source: 'root'})\n                        \n            console.log(nodes, links)\n         }} nodeId=\"root\" label={props.project.name}>\n             {rootNodes.map((x) => renderTree(x))}\n        </StyledTreeItem>\n     </TreeView>\n      )\n    }\n\n    const renderHive = () => {\n      return (\n        <div className=\"plan-hive\">\n      <HiveEditor\n          nodes={nodes}\n          links={links}\n          onNodeChange={(nodes) => _setNodes(nodes)}\n          onLinkChange={(links) => _setLinks(links)} />\n        </div>\n      )\n    }\n\n\n    const renderPlan = () => {\n      switch(selectedView){\n        case 'kanban':\n          return renderKanban()\n        case 'list':\n          return renderList()\n        case 'hive':\n          return renderHive()\n        default:\n          return\n      }\n    }\n\n    return (\n        <div style={{padding: 4, display: 'flex', flex: 1, flexDirection: 'column'}}>\n            <div className=\"plan-header\">\n              <div>\n\n              </div>\n              <ButtonGroup>\n                <Button variant={selectedView == 'kanban' && 'contained'} onClick={() => setView('kanban')}><DashboardIcon /></Button>\n                <Button variant={selectedView == 'list' && 'contained'} onClick={() => setView('list')}><ListIcon /></Button>\n                <Button variant={selectedView == 'hive' && 'contained'} onClick={() => setView('hive')}><EmojiNature /></Button>\n              </ButtonGroup>\n            </div>\n            <Divider />\n            {renderPlan()}\n        </div>\n    )\n}\n\nfunction MinusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function PlusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function CloseSquare(props) {\n    return (\n      <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n      </SvgIcon>\n    );\n  }\n\n\nfunction TransitionComponent(props) {\n    const style = useSpring({\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\n    });\n  \n    return (\n      <animated.div style={style}>\n        <Collapse {...props} />\n      </animated.div>\n    );\n  }\n  \n  TransitionComponent.propTypes = {\n    /**\n     * Show the component; triggers the enter or exit states\n     */\n    in: PropTypes.bool,\n  };\n  \n  const StyledTreeItem = withStyles((theme) => ({\n    iconContainer: {\n      '& .close': {\n        opacity: 0.3,\n      },\n    },\n    group: {\n      marginLeft: 7,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n    },\n\n  }))((props) => {\n      return(\n    <TreeItem {...props} label={(\n        <div className=\"tree-item\" style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n            {props.label}\n            <IconButton onClick={(e) => {\n                e.stopPropagation()\n                props.addChild()\n            }}>\n                <Add />\n            </IconButton>\n        </div>\n    )} TransitionComponent={TransitionComponent}/>\n\n  )});\n  \n  const useStyles = makeStyles({\n    root: {\n      height: 264,\n      flexGrow: 1,\n      maxWidth: 400,\n    },\n  });","import * as Y from 'yjs';\nimport { WebsocketProvider } from 'y-websocket';\n\nexport default function (){\n\n    const ydoc = new Y.Doc();\n    const host = new URL(window.location).hostname;\n    const websocketProvider = new WebsocketProvider(`wss://${host}:1234`, 'workhub', ydoc)\n  \n    const yArray = ydoc.getMap('')\n  \n    return ydoc;\n  }","import CalendarTab from './calendar';\nimport FileTab from './files';\nimport PlanTab from './plan';\nimport TeamTab from './team';\n\nexport default {\n    CalendarTab,\n    FileTab,\n    PlanTab,\n    TeamTab\n}","import React from 'react';\n\nexport default function CalendarTab(props){\n    return (\n        <div>\n            \n        </div>\n    )\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab\n} from '@material-ui/core';\n\nimport { useMutation } from '@apollo/client';\nimport { ATTACH_FILE } from '../../actions/fileActions';\nimport FileDialog from '../../components/file-dialog';\n\nexport default function FileTab(props){\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ attachFiles, ] = useMutation(ATTACH_FILE)\n    return (\n        <div>\n            <FileDialog onAttach={(selected) => {\n                for(var k in selected){\n                    attachFiles({variables: {\n                        projectId: props.project.id,\n                        fileId: k\n                    }})\n                }\n               \n    \n            }} open={dialogOpen} onClose={() => openDialog(false)} />\n            <Fab style={{position: 'absolute', bottom: 12, right: 12}} color=\"primary\" onClick={() => openDialog(true)}>\n                <Add />\n            </Fab>\n\n        </div>\n    )\n}","import React from 'react';\n\nexport default function TeamTab(props){\n    return (\n        <div>\n            \n        </div>\n    )\n}","import React from 'react'\nimport {\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    KeyboardDatePicker\n} from '@material-ui/pickers'\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport ProjectTabs from '../../tabs/project'\nimport { connect } from 'react-redux';\nimport './index.css';\n\nfunction ProjectView(props){\n    const [ project, setProject ] = React.useState({});\n    const [ selectedTab, setSelectedTab ] = React.useState(null)\n\n    React.useEffect(() => {\n        if(props.project && props.project.length > 0){\n            setProject(props.project[0])\n        }\n    }, [props.project])\n\n\n    const tabs = [\"Plan\", \"Calendar\", \"Team\", \"Files\"]\n\n    return [\n        <DashboardHeader \n            tabs={tabs}\n            onTabSelect={(tab) => {\n                setSelectedTab(tab)\n                props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n            }}\n            selectedTab={selectedTab || props.location.pathname.replace(`${props.match.url}/`, '')}\n            title={project.name} />,\n        <Paper style={{flex: 1, marginTop: 12, display: 'flex'}}>\n            <Switch>\n                <Route path={`${props.match.url}/plan`} render={(props) => {\n                    return <ProjectTabs.PlanTab {...props} y={props.y} project={project} />\n                }} />\n                <Route path={`${props.match.url}/calendar`} render={(props) => {\n                    return <ProjectTabs.CalendarTab {...props} project={project} />\n                }} />\n                <Route path={`${props.match.url}/team`} render={(props) => {\n                    return <ProjectTabs.TeamTab {...props} project={project} />\n                }} />\n                <Route path={`${props.match.url}/files`} render={(props) => {\n                    return <ProjectTabs.FileTab {...props} project={project} />\n                }} />\n            </Switch>\n        </Paper>\n\n    ]\n}\n\nexport default connect((state, ownProps) => ({\n    project: state.projects.list.filter((a) => a.id == ownProps.match.params.id)\n}))(ProjectView)","import { gql } from '@apollo/client';\nimport GClient from '../graph';\nimport * as types from './types';\n\nconst client = GClient()\n\n\nexport const addBooking = (time, projectId, booking) => {\n    return (dispatch) => {\n    client.mutate({\n        mutation: gql`\n    mutation AddBooking($time: CalendarInput, $projectId: ID, $booking: BookingInput){\n        addBooking(time: $time, projectId: $projectId, booking: $booking){\n            id\n            startTime\n            endTime\n            allDay\n            date\n            project {\n                id \n                name\n            }\n            items {\n                equipment {\n                    name\n                }\n                team {\n                    name\n                }\n            }\n        }\n    }\n  `,\n  variables: {\n      time: time,\n      projectId: projectId,\n      booking: booking\n  }\n}).then((r) => r.data.addBooking).then((r) => {\n    dispatch({type: types.ADD_BOOKING, booking: r})\n})\n    }\n}\n\n  export const getBookings = () => {\n      return (dispatch, getState) => {\n    client.query({\n        query: gql`\n            query GetBookings{\n                calendar{\n                    id\n                    startTime\n                    endTime\n                    allDay\n                    date\n                    project {\n                        id\n                        name\n                    }\n                    items {\n                        equipment{\n                            name\n                        }\n                        team {\n                            name\n\n                        }\n                    }\n                }\n            }\n        `\n    }).then((r) => r.data.calendar).then((r) => {\n        console.log(r)\n        dispatch({type: types.SET_BOOKINGS, bookings: r})\n    })\n}\n  }\n","import React from 'react';\nimport * as Y from 'yjs'\nimport { \n    Dialog,\n    DialogActions,\n    DialogTitle,\n    DialogContent,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    TextField,\n    InputAdornment,\n    Tabs,\n    Tab,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core'\n\nimport {\n    Autocomplete\n} from '@material-ui/lab'\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport { useMutation } from '@apollo/client';\nimport { addBooking } from '../../actions/calendarActions';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport { connect } from 'react-redux';\nimport YActions from '../../graph/yjs';\n\nimport moment from 'moment';\nconst doc = YActions();\n\nlet yDoc; \n\nfunction CalendarDialog(props){\n    \n    const [ step, setStep ] = React.useState(0)\n    const [ searchTab, setSearchTab ] = React.useState(0)\n    const [ search, setSearch ] = React.useState(null)\n\n    const [ date, setDate ] = React.useState(null);\n    const [ allDay, setAllDay ] = React.useState(false);\n    const [ startTime, setStart ] = React.useState(null)\n    const [ endTime, setEnd ] = React.useState(null)\n    const [ project, setProject ] = React.useState(null)\n\n    const [ selectedItems, setSelectedItems ] = React.useState({})\n\n    React.useEffect(() => {\n       yDoc = doc.getMap('calendar')    \n    }, [])\n\n    const stepButton = () => {\n        if(step == 0){\n            setStep(1)\n        }else{\n            //Book items\n            let equipment = [];\n            let team = [];\n\n            for(var k in selectedItems){\n                if(selectedItems[k].selected){\n                    switch(selectedItems[k].type){\n                        case 'team':\n                            team.push(k)\n                            break\n                        case 'equipment':\n                            equipment.push(k)\n                            break;\n                    }\n                }\n            }\n\n            let sTime, eTime;\n            if(startTime){\n                sTime = moment(date)\n                sTime.set('hour', startTime.get('hour'))\n                sTime.set('minute', startTime.get('minute'))\n\n            }\n            if(endTime){\n                eTime = moment(date)\n            \n                eTime.set('hour', endTime.get('hour'))\n                eTime.set('minute', endTime.get('minute'))\n            }\n\n\n            let booking = new Y.Map();\n            let _booking = {\n                date: date.valueOf() / 1000,\n                project: project,\n                startTime: sTime && parseInt(sTime.valueOf() / 1000),\n                endTime: eTime && parseInt(eTime.valueOf() / 1000),\n                allDay: allDay,\n                items: {\n                    team: team,\n                    equipment: equipment\n                }\n            }\n            \n            booking.set('date', _booking.date)\n            booking.set('project', _booking.project)\n\n            if(yDoc){\n                //yDoc.set('bookings', [])\n                console.log(\"Inserting into yjs\")\n                let obj = yDoc.toJSON()\n                let bookings = obj.bookings || [];\n                console.log(bookings)\n                bookings.push(_booking)\n                yDoc.set('bookings', bookings)\n                console.log(yDoc.toJSON())\n            }\n\n            \n\n            /*props.addBooking({\n                    allDay: allDay,\n                    startTime: startTime && parseInt(sTime.valueOf() / 1000),\n                    endTime: endTime && parseInt(eTime.valueOf() / 1000),\n                    date: date.valueOf() / 1000\n                },\n                project.id,\n                {\n                    equipment: equipment,\n                    team: team\n                })*/\n                props.onClose()\n        }\n    }\n\n    \n    const renderStep = () => {\n        switch(step){\n            case 0:\n                return (\n                <>\n                <Autocomplete \n                    value={project}\n                    onChange={(e, newVal) => setProject(newVal)}\n                    options={props.projects}\n                    getOptionLabel={(project) => project.name} \n                    renderInput={(params) => {\n                        return (\n                            <TextField {...params} label=\"Project\"  />\n                        )\n                    }}/>\n                <KeyboardDatePicker \n                    value={date}\n                    format=\"DD/MM/yyyy\"\n                    onChange={(e, newVal) => setDate(e)}\n                    margin=\"normal\" \n                    label=\"Date\" \n                    variant=\"inline\" ></KeyboardDatePicker>\n                <FormControlLabel \n                    control={<Checkbox checked={allDay} onChange={(e) => {\n                        setAllDay(e.target.checked)\n                    }}/>}\n                    label=\"All day\" />\n                {!allDay && <div style={{display: 'flex', marginTop: 8}}>\n                    <KeyboardTimePicker \n                        value={startTime}\n                        onChange={(e) => setStart(e)}\n                        label=\"Start Time\"\n                        fullWidth \n                        style={{marginRight: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                    <KeyboardTimePicker \n                        value={endTime}\n                        onChange={(e) => setEnd(e)}\n                        label=\"End Time\"\n                        fullWidth \n                        style={{marginLeft: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                </div>}\n                </>\n                )\n            case 1:\n                return (\n                    \n                        <List>\n                            {(searchTab == 0 ? props.team : props.equipment).filter((a) => !search || a.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                                <ListItem>\n                                    <Checkbox checked={selectedItems[x.id] && selectedItems[x.id].selected || false} onChange={(e) => {\n                                        let s = Object.assign({}, selectedItems);\n                                        s[x.id] = {\n                                            selected: e.target.checked,\n                                            type: searchTab == 0 ? \"team\" :\"equipment\"\n                                        } \n                                        console.log(s)\n                                        setSelectedItems(s)  \n                                    }}/>\n                                    {x.name}\n                                </ListItem>\n                            ))}\n                        </List>\n                    \n                )\n            default:\n                return null;\n        }\n    }\n\n    const renderStepTitle = () => {\n        switch(step){\n            case 1:\n                return (\n                    <>\n                    <TextField\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)} fullWidth InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment> \n                    }} label=\"Search\" />\n                    <Tabs value={searchTab} onChange={(e, newVal) => {\n                        if(newVal !== searchTab) setSearch('')\n                        setSearchTab(newVal)\n                    }}>\n                        <Tab label=\"Team\" />\n                        <Tab label=\"Equipment\" />\n                    </Tabs>\n                    <Divider />\n                    \n                    </>\n                )\n            case 0:\n                return \"Create a booking\"\n            default:\n                return null\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>\n                {renderStepTitle()}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 250}}>\n                {renderStep()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={step == \"0\" ? props.onClose : () => setStep(0)}>{step == \"0\" ? \"Cancel\" : \"Back\"}</Button>\n                <Button color=\"primary\" onClick={stepButton} variant=\"contained\">{step == \"1\" ? \"Book\" : \"Next\"}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    projects: state.projects.list,\n    team: state.team.list,\n    equipment: state.equipment.list\n}), (dispatch) => ({\n    addBooking: (time, project, booking) => dispatch(addBooking(time, project, booking))\n}))(CalendarDialog)","import React from 'react';\nimport {\n    Paper,\n    Fab\n} from '@material-ui/core';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport DashboardHeader from '../../components/dashboard-header'\nimport CalendarDialog from '../../components/calendar-dialog'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { getBookings } from '../../actions/calendarActions';\nimport { connect } from 'react-redux';\nimport YActions from '../../graph/yjs';\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\nconst localizer = momentLocalizer(moment)\nconst doc = YActions();\n\nlet yDoc;\n\nfunction CalendarView(props){\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ bookings, setBookings ] = React.useState([])\n\n    const myEventsList = [];\n\n    const tabs = [\"All\", \"Me\", \"Projects\"];\n    \n    const observer = () => {\n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n    }\n    React.useEffect(() => {\n        yDoc = doc.getMap('calendar')\n        yDoc.observe(observer)\n        \n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n       // props.getBookings()\n    }, [])\n\n    return [\n        <DashboardHeader \n        tabs={tabs}\n        selectedTab={\"\"}\n        onTabSelect={(tab) => {\n            //setSelectedTab(tab)\n            props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n        }}\n        title={\"Calendar\"} />,\n        <CalendarDialog y={yDoc} open={dialogOpen} onClose={() => openDialog(false)} />,\n        \n        <Paper style={{\n            position: 'relative',\n            marginTop: 12, \n            height: 'calc(100vh - 84px)', \n            flex: 1,\n            display: 'flex', \n            flexDirection: 'column', \n            padding: 4}}>\n            <Fab onClick={() => openDialog(true)} color=\"primary\" style={{zIndex: 9, position: 'absolute', right: 12, bottom: 12}}>\n                <Add />\n            </Fab>\n            <Calendar\n                localizer={localizer}\n                events={bookings.map((x) => ({\n                    id: x.id,\n                    title: x.project.name,\n                    allDay: x.allDay,\n                    start: new Date((x.startTime || x.date)*1000),\n                    end: new Date((x.endTime || x.date)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </Paper>\n    ]\n}\n\nexport default connect((state) => ({\n    bookings: state.calendar.bookings\n}), (dispatch) => ({\n    getBookings: () => dispatch(getBookings())\n}))(CalendarView)","import React from 'react';\n\nimport {\n  Paper,\n  Divider,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nexport default function Settings(props){\n  const addons = [\n    {\n      name: \"STP to GLB Converter\"\n    },\n    {\n      name: \"HexNode Replication\"\n    }\n  ]\n\n  const connections = [\n    {\n      name: \"MSSQL Server\"\n    }\n  ]\n\n  return (\n    <Paper style={{flex: 1, marginTop: 12}}>\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Add-ons</Typography>\n        <List>\n            {addons.map((x) => (\n              <ListItem button>{x.name}</ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Connections</Typography>\n        <List>\n            {connections.map((x) => (\n              <ListItem button>{x.name}</ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n    </Paper>\n  );\n}\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addTeamMember = (member) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddTeamMember($member: TeamMemberInput){\n    addTeamMember(member: $member){\n      id\n      name\n      email\n      phoneNumber\n    }\n  }\n`,\n      variables: {\n        member: member\n      }\n    }).then((r) => r.data.addTeamMember).then((r) => {\n      dispatch({type: types.ADD_TEAM_MEMBER, newMember: r})\n    })\n  }\n}\n\nexport const UPDATE_TEAM_MEMBER = gql`\n  mutation UpdateTeam($memberId: ID, $member: TeamMemberInput){\n    updateTeamMember(memberId: $memberId, member: $member){\n      name\n      email\n      phoneNumber\n    }\n  }\n`\n\nexport const getTeam = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetTeam {\n          team {\n            id\n            name\n            username\n            password\n            phoneNumber\n            email\n          }\n        }\n      `\n    }).then((r) => r.data.team).then((r) => {\n      dispatch({type: types.SET_TEAM, team: r})\n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  Paper,\n  List,\n  ListItem\n} from '@material-ui/core';\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport { useMutation } from \"@apollo/client\";\nimport { addTeamMember, UPDATE_TEAM_MEMBER, getTeam } from '../../actions/teamActions';\nimport PermissionForm from '../../components/permission-form';\nimport MoreMenu from '../../components/more-menu';\nimport { connect } from 'react-redux';\nimport './index.css';\n\nfunction Teams(props){\n  const [ selected, setSelected ] = React.useState(null)\n\n  const [ updateTeamMember ] = useMutation(UPDATE_TEAM_MEMBER)\n\n  React.useEffect(() => {\n    props.getTeam()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n       // setSelectedTab(tab)\n      //  props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Team\"} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = data;\n          delete d.id;\n          updateTeamMember({variables: {\n            memberId: data.id,\n            member: d\n          }})\n        }else{\n          props.addTeamMember(data)\n        }\n      }}\n      onClose={() => setSelected(null)} \n      selected={selected}\n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable \n        data={props.team}\n        renderItem={(item) => (\n          <div className=\"team-item\">\n          <ListItem button onClick={() => setSelected(item)}>{item.name}</ListItem>\n          <MoreMenu />\n          </div>\n        )} />\n    </PermissionForm>\n  ]\n}\n\nexport default connect((state) => ({\n  team: state.team.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Team Members\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Team Members\")\n}), (dispatch) => ({\n  getTeam: () => dispatch(getTeam()),\n  addTeamMember: (member) => dispatch(addTeamMember(member))\n}))(Teams)\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addEquipment = (equipment) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddEquipment($equipment: EquipmentInput){\n    addEquipment(equipment: $equipment){\n      id\n      name\n      type\n      description\n    }\n  }\n`,\n    variables: {\n      equipment: equipment\n    }\n  }).then((r) => r.data.addEquipment).then((r) => {\n    dispatch({type: types.ADD_EQUIPMENT, newItem: r})\n  })\n}\n}\n\nexport const updateEquipment = (id, equipment) => {\n  console.log(id, equipment)\n  return (dispatch) => {\n    return client.mutate({\n      mutation:  gql`\n      mutation UpdateEquipment($equipmentId: String, $equipment: EquipmentInput){\n        updateEquipment(equipmentId: $equipmentId, equipment: $equipment){\n          name\n          type\n          description\n        }\n      }\n    `,\n    variables: {\n      equipmentId: id,\n      equipment\n    }\n    }).then((r) => r.data.updateEquipment).then((r) => {\n      dispatch({type: types.UPDATE_EQUIPMENT, equipment, id})\n    })\n  }\n}\n\nexport const removeEquipment = (id) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n        mutation RemoveEquipment($id: String){\n          removeEquipment(equipmentId: $id)\n        }\n      `,\n      variables: {\n        id: id\n      }\n    }).then((r) => r.data.removeEquipment).then((r) => {\n      dispatch({type: types.REMOVE_EQUIPMENT, id: id})\n    })\n  }\n}\n\n\nexport const getEquipment = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetEquipment {\n          equipment {\n            id\n            name\n            type\n            description\n          }\n        }\n      `\n    }).then((r) => r.data.equipment).then((r) => {\n      dispatch({type: types.SET_EQUIPMENT, equipment: r})\n    })\n  }\n \n}\n","import React from 'react';\n\nimport {\n  Paper,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { connect } from 'react-redux';\nimport { removeEquipment, getEquipment, updateEquipment, addEquipment } from '../../actions/equipmentActions';\nimport MoreMenu from '../../components/more-menu';\nimport './index.css';\n\nfunction Equipment(props){\n  const [ selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getEquipment()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[...new Set(props.equipment.filter((a) => a.type).map((x) => x.type))]}\n    onTabSelect={(tab) => {\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={'Equipment'} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          console.log(data)\n          delete d.id;\n          props.updateEquipment(data.id, d)\n        }else{\n          props.addEquipment(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n    <SearchTable\n      data={props.equipment}\n      renderItem={(item) => (\n        <div className=\"equipment-item\">\n        <ListItem button onClick={(e) => {\n          setSelected(item)\n        }}>\n          {item.name}\n        </ListItem>\n          <MoreMenu onDelete={() => {\n            props.removeEquipment(item.id)\n          }} />\n        </div>\n\n      )} />\n      </PermissionForm>\n  ]\n}\nexport default connect((state) => ({\n  equipment: state.equipment.list,\n  type: state.dashboard.types.filter((a) => a.name ==\"Equipment\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Equipment\")\n}), (dispatch) => ({\n  getEquipment: () => dispatch(getEquipment()),\n  addEquipment: (equipment) => dispatch(addEquipment(equipment)),\n  updateEquipment: (id, equipment) => dispatch(updateEquipment(id, equipment)),\n  removeEquipment: (id) => dispatch(removeEquipment(id))\n}))(Equipment)\n","import React from 'react'\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\nimport  ReactJson from 'react-json-view'\nexport const type = 'typeDef'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{flex: 1}}>\n      <ReactJson src={props.node.data.typedef} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"type-def\">\n        {props.data.label}\n     </div>\n    </NodeWrapper>\n    )\n})","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPDATE_INTEGRATION_MAP = gql`\n  mutation UpdateIntegrationMap($nodes: [MapNodeInput], $links: [MapLinkInput]){\n    updateIntegrationMap(nodes: $nodes, links: $links){\n      nodes{\n        id\n        type\n        data\n        position{\n          x\n          y\n        }\n      }\n      links{\n        id\n        target\n        source\n      }\n    }\n  }\n`\n\nexport const getPermissions = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n      query GetPermissions{\n        typePermissions{\n          type\n          create\n          read\n          update\n          delete\n        }\n      }\n      `\n    }).then((r) => r.data.typePermissions).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_PERMS, perms: r})\n    })\n  }\n}\n\nexport const getIntegrationMap = () => {\n  return client.query({\n    query: gql`\n      query GetIntegrations{\n        integrationMap{\n          nodes{\n            id\n            type\n            data\n            position{\n              x\n              y\n            }\n          }\n          links{\n            id\n            target\n            source\n          }\n        }\n      }\n    `\n  }).then((r) => r.data.integrationMap)\n}\n\nexport const getTypes = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetTypes{\n          adminTypes{\n            name\n            typeDef\n          }\n        }\n      `\n    }).then((r) => r.data.adminTypes).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_TYPES, types: r})\n    })\n  }\n \n}\n\nexport const getTables = (store) => {\n    return client.query({\n      query: gql`\n        query GetLayout{\n          connectionLayout(storeId: \"${store}\"){\n            name\n          }\n        }\n      `\n    }).then((r) => {\n      return r.data.connectionLayout;\n    })\n}\n\nexport const getColumns = (store, table) => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            bucketLayout(storeId: \"${store}\", bucketId: \"${table}\"){\n              name\n              datatype\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.bucketLayout;\n      })\n}\n\nexport const getViews = () => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            getSQLViews{\n              name\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.getSQLViews;\n      })\n}\n","import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <div className=\"adapter-header\">\n        {props.data.label || \"MSSQL Adapter\"}\n        </div>\n        <div className=\"adapter-info\">\n          {props.data && props.data.table && props.data.table.name}\n        </div>\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nexport const type = 'mssql server'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        {props.data.label || \"MSSQL Server\"}\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react';\n\nimport { cloneDeep } from 'lodash';\nimport * as TypeDefNode from '../../nodes/TypeDefNode'\nimport * as MSSQLNode from '../../nodes/MSSQLNode';\nimport * as MSSQLServer from '../../nodes/MSSQLServerNode';\n\nimport { useMutation } from '@apollo/client';\nimport { getTypes, getIntegrationMap, UPDATE_INTEGRATION_MAP} from '../../actions/adminActions'\nimport { connect } from 'react-redux';\nimport HiveEditor from 'react-hive-flow';\nimport 'react-hive-flow/dist/index.css';\nimport './index.css'\n\nfunction Admin(props){\n\n    React.useEffect(() => {\n        props.getTypes()\n        \n    }, [])\n\n\n    const [ updateIntegrationMap, {data}] = useMutation(UPDATE_INTEGRATION_MAP)\n       \n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n\n    React.useEffect(() => {\n        getIntegrationMap().then((integrations) => {\n            if(integrations.nodes) setNodes(integrations.nodes.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                delete y.position.__typename;\n                return y;\n            }).slice());\n            if(integrations.links) setLinks(integrations.links.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                return y;\n            }).slice());\n        })\n    }, [])\n\n    return (\n        <div className=\"admin-view\">\n        <HiveEditor\n            nodeTypes={[TypeDefNode, MSSQLNode, MSSQLServer]}\n            nodes={(props.types||[]).concat(nodes)}\n            links={links}\n            onNodeChange={(nodes) => {\n                let n = nodes.filter((a) => props.types.map((x) => x.id).indexOf(a.id) < 0)\n                updateIntegrationMap({variables: {\n                    nodes: n,\n                    links: links\n                }})\n                setNodes(n)\n            }}\n            onLinkChange={(link) => {\n                updateIntegrationMap({variables: {\n                    nodes: nodes,\n                    links: link\n                }})\n                setLinks(link)\n            }} />\n        </div>\n    )\n}\n\nexport default connect(\n    (state) => ({\n        types: (state.dashboard.types||[]).map((x, ix) => ({\n            id: x.name.toLowerCase(),\n            type: 'typeDef',\n            data: {\n                label: x.name,\n                typedef: x.typeDef\n            },\n            position: {\n                x: 200 + (ix * 200),\n                y: 300\n            },\n            draggable: false\n        }))\n    }),\n    (dispatch) => ({\n        getTypes: () => dispatch(getTypes())\n    })\n)(Admin)","import React from 'react';\n\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItem,\n  Paper,\n  Typography,\n  Tabs,\n  Tab\n} from '@material-ui/core';\n\nimport {\n  Notifications,\n  AccountTree,\n  Dashboard,\n  CalendarToday,\n  SupervisorAccount,\n  BusinessCenter,\n  Description,\n  Settings\n} from '@material-ui/icons';\n\nimport { connect } from 'react-redux';\n\nimport Projects from '../../views/Projects';\nimport ProjectView from '../../views/ProjectView';\n\nimport Files from '../../views/Files';\nimport Calendar from '../../views/Calendar';\nimport SettingsView from '../../views/Settings';\nimport Teams from '../../views/Team';\nimport Equipment from '../../views/Equipment';\nimport AdminView from '../../views/Admin';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\nimport { Switch, Route } from 'react-router-dom';\n\nimport IPFS from 'ipfs';\n\nimport { getTypes, getPermissions } from '../../actions/adminActions'\n\nimport YActions from '../../graph/yjs';\n\nimport './index.css';\n\nconst doc = YActions()\n\nfunction DashboardController(props){\n  let query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n  const currentPath = window.location.pathname.replace(/\\/dashboard/g, '')\n\n  const [ ipfsNode, setIPFS ] = React.useState(null)\n\n  const menu = [\n    {\n      icon: <Dashboard />,\n      label: \"Dashboard\",\n      path: \"\"\n    },\n    {\n      icon: <CalendarToday />,\n      label: \"Calendar\",\n      path: \"/calendar\"\n    },\n    {\n      icon: <AccountTree />,\n      label: \"Projects\",\n      path: \"/projects\"\n    },\n    {\n      icon: <SupervisorAccount />,\n      label: \"Team\",\n      path: \"/team\"\n    },\n    {\n      icon: <BusinessCenter /> ,\n      label: \"Equipment\",\n      path: \"/equipment\"\n    },\n    {\n      icon: <Description />,\n      label: \"Files\",\n      path: \"/files\"\n    },\n  ]\n\n  React.useEffect(async () => {\n    props.getTypes()\n    props.getPermissions()\n    let node;\n    if(!ipfsNode){\n      node = await IPFS.create()\n    setIPFS(node)\n    }\n  \n    //console.log(await node.id())\n\n    return async () => {\n      await (ipfsNode || node).stop()\n    }\n  }, [])\n\n  const renderTitle = () => {\n    switch(currentPath){\n      case '':\n      case '/':\n        return \"Dashboard\";\n      case '/calendar':\n        return \"Calendar\"\n      case '/projects':\n        return \"Projects\"\n      case '/team':\n        return \"Team\";\n      case '/equipment':\n        return \"Equipment\"\n      case '/files':\n        return \"Files\";\n    }\n  }\n\n  const renderActionBlock = () => {\n    console.log(currentPath)\n    switch(currentPath){\n      case '/projects':\n        let project_set = [...new Set(props.projects.map((x) => x.status))]\n        console.log(project_set)\n        return (\n        <Tabs value={project_set.indexOf(query_string.status)}>\n          {project_set.map((x) => (\n            <Tab label={x} onClick={() => {\n              query_string.status = x;\n            props.history.push(`${props.location.pathname}?${qs.stringify(query_string)}`)\n          }}/>\n          ))}\n        </Tabs>\n        )\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <div className=\"dashapp\">\n      <Drawer variant=\"permanent\" style={{width: 200}}>\n        <List style={{flex: 1, width: 200}}> \n          <ListItem style={{fontWeight: 'bold', padding: 12, fontSize: 20}}>\n            WorkHub\n          </ListItem>\n          <Divider />\n          {menu.map((x, ix) => (\n            <ListItem \n              className={menu.map((x) => x.path).indexOf(window.location.pathname.split(props.match.url)[1]) == ix ? 'selected menu-item': 'menu-item'}\n              onClick={() => props.history.push(`${props.match.url}${x.path}`)}\n              button >{x.icon} {x.label}</ListItem>\n          ))}\n          </List>\n          <Divider />\n          <ListItem button onClick={() => props.history.push(`${props.match.url}/settings`)}>\n            <Settings style={{marginRight: 12}} />\n              Settings\n          </ListItem>\n      </Drawer>\n      <div className=\"dashapp-body\">\n\n        <Switch>\n          <Route path={`${props.match.url}/calendar`} render={(props) => (\n            <Calendar {...props} y={doc} />\n          )} />\n          <Route path={`${props.match.url}/projects`} component={Projects} exact />\n          <Route path={`${props.match.url}/projects/:id`} render={(props) => (\n            <ProjectView {...props} y={doc}/>\n          )} />\n          <Route path={`${props.match.url}/files`} render={(props) => {\n            return <Files {...props} ipfs={ipfsNode} />\n          }} />\n          <Route path={`${props.match.url}/team`} component={Teams} />\n          <Route path={`${props.match.url}/equipment`} component={Equipment} />\n          <Route path={`${props.match.url}/settings`} component={SettingsView} />\n          <Route path={`${props.match.url}/admin`} component={AdminView} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  projects: state.projects.list,\n  user: jwt_decode(state.auth.token)\n}), (dispatch) => ({\n  getTypes: () => dispatch(getTypes()),\n  getPermissions: () => dispatch(getPermissions())\n}))(DashboardController)\n","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n    mutation Login($username: String, $password: String){\n        login(username: $username, password: $password){\n            token\n            error\n        }\n    }\n`\n\nexport const setToken = (token) => {\n    return (dispatch) => {\n        dispatch({type: types.SET_TOKEN, token: token})\n    }\n}","import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN, setToken } from '../../actions/authActions';\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Login(props){\n    const [ error, setError ] = React.useState(null)\n    const [ username, setUsername ] = React.useState('')\n    const [ password, setPassword ] = React.useState('')\n\n    const [ doLogin ] = useMutation(LOGIN)\n\n    const login = () => {\n        doLogin({variables: {\n            username: username,\n            password: password\n        }}).then((r) => {\n            if(r.data.login && r.data.login.token){\n                props.setToken(r.data.login.token)\n                props.history.push('/dashboard')\n            }else if(r.data.login && r.data.login.error){\n                setError(r.data.login.error)\n            }\n        })\n    }\n\n    return (\n        <div className=\"login-view\">\n            <div className=\"image-banner\">\n            </div>\n            <Paper style={{display: 'flex', flex: 0.3, flexDirection: 'column', padding: 8}}>\n                <Typography variant=\"h6\">WorkHub</Typography>\n                <Divider />\n            <TextField \n                error={error}\n                label=\"Username\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)}/>\n            <TextField \n                error={error}\n                label=\"Password\" \n                type=\"password\" \n                value={password} \n                onKeyDown={(e) => {if(e.keyCode == 13) {login()}}}\n                onChange={(e) => setPassword(e.target.value)}/>\n            <Button \n                onClick={login}\n                style={{marginTop: 12}} \n                color=\"primary\" \n                variant=\"contained\">Login</Button>\n            </Paper>\n\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch) => ({\n    setToken: (token) => dispatch(setToken(token))\n}))(Login)","import * as types from '../actions/types';\n\nconst init = {\n  list: []\n}\n\nlet updated;\n\nexport default function projectReducer(state = init, action={}){\n  switch(action.type){\n    case types.SET_PROJECTS:\n      return {\n        ...state,\n        list: action.projects\n      }\n    case types.REMOVE_PROJECT:\n      updated = state.list.slice()\n      let pIx = updated.map((x) => x.id).indexOf(action.id)\n      updated.splice(pIx, 1)\n      return {\n        ...state,\n        list: updated\n      }\n    case types.ADD_PROJECT:\n      return {\n        ...state,\n        list: state.list.concat([action.newProject])\n      }\n    case types.UPDATE_PROJECT:\n      updated = state.list.slice()\n      let ix = updated.map((x) => x.id).indexOf(action.id)\n      updated[ix] = {\n        ...updated[ix],\n        ...action.project\n      }\n      return {\n        ...state,\n        list: updated\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    permissions: [],\n    types: []\n}\n\nexport default function dashboardReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_DASHBOARD_PERMS:\n            return {\n                ...state,\n                permissions: action.perms\n            }\n        case types.SET_DASHBOARD_TYPES:\n            return {\n                ...state,\n                types: action.types\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n  list: []\n}\n\nexport default function fileReducer(state = INIT, action = {}){\n  switch(action.type){\n    case types.SET_FILES:\n      return {\n        ...state,\n        list: action.files\n      }\n    case types.ADD_FILE:\n      return {\n        ...state,\n        list: state.list.concat([action.file])\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    token: null\n}\n\nexport default function authReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_TOKEN:\n            return {\n                token: action.token\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    list: []\n}\n\nlet updated;\nexport default function equipmentReducer(state = INIT, action={}){\n    switch(action.type){\n        case types.SET_EQUIPMENT:\n            return {\n                ...state,\n                list: action.equipment\n            }\n        case types.ADD_EQUIPMENT:\n            return {\n                ...state,\n                list: state.list.concat([action.newItem])\n            }\n        case types.UPDATE_EQUIPMENT:\n            updated = state.list.slice()\n            let ix = updated.map((x) => x.id).indexOf(action.id)\n            updated[ix] = {\n                ...updated[ix],\n                ...action.equipment\n            }\n            return {\n                ...state,\n                list: updated\n            }\n        case types.REMOVE_EQUIPMENT:\n            updated = state.list.slice()\n            let eIx = updated.map((x) => x.id).indexOf(action.id)\n            updated.splice(eIx, 1)\n            return {\n                ...state,\n                list: updated\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types'\n\nconst INIT = {\n    list: []\n}\n\nexport default function teamReducer(state = INIT, action = {} ){\n    switch(action.type){\n        case types.SET_TEAM:\n            return {\n                ...state,\n                list: action.team\n            }\n        case types.ADD_TEAM_MEMBER:\n            return {\n                ...state,\n                list: state.list.concat([action.newMember])\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    bookings: []\n}\n\nexport default function calendarReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_BOOKINGS:\n            return {\n                ...state,\n                bookings: action.bookings\n            }\n        case types.ADD_BOOKING:\n            return {\n                ...state,\n                bookings: state.bookings.concat([action.booking])\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport projects from './projects';\nimport dashboard from './dashboard';\nimport files from './files';\nimport auth from './auth';\nimport equipment from './equipment';\nimport team from './team';\nimport calendar from './calendar';\n\nexport default combineReducers({\n  projects,\n  auth,\n  files,\n  calendar,\n  dashboard,\n  equipment,\n  team\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk))\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { Provider } from 'react-redux';\nimport DashboardController from './controllers/DashboardController';\nimport Login from './views/Login';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider\n} from '@material-ui/pickers'\n\nimport GClient from './graph';\nimport configureStore from './configureStore';\n\nimport './App.css';\n\nconst { store, persistor } = configureStore();\nconst client = GClient();\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Provider store={store}>\n      <ApolloProvider client={client}>\n      <Router>\n      <PersistGate loading={null} persistor={persistor}>\n\n      <div className=\"App\">\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/dashboard\" render={(props) => {\n          if(store.getState().auth.token){\n            return <DashboardController {...props} />\n          }else{\n            return <Redirect to=\"/\" />\n          }\n        }} />\n      </div>\n      </PersistGate>\n    </Router>\n      </ApolloProvider>\n    </Provider>\n  </MuiPickersUtilsProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as types from './types';\nimport { gql, useMutation } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPLOAD_FILE = gql`\n    mutation UploadFile($file: Upload!){\n      uploadFile(file: $file) {\n        duplicate\n        file{\n          id\n          filename\n          cid\n          extension\n        }\n      }\n    }\n  `\n\nexport const ATTACH_FILE = gql`\n    mutation AttachFile($projectId: ID, $fileId: ID){\n      attachFileToProject(projectId: $projectId, fileId: $fileId){\n        files{\n          cid\n        }\n      }\n    }\n`\n\nexport const CONVERT_FILE = gql`\n    mutation ConvertFile($fileId: ID, $targetFormat:String){\n      convertFile(fileId: $fileId, targetFormat: $targetFormat){\n        msg\n        error\n      }\n    }\n`\n\nexport const addFile = (file) => {\n  return (dispatch) => {\n    dispatch({type: types.ADD_FILE, file: file})\n  }\n}\n\nexport const getFiles = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetFiles{\n          files{\n            id\n            filename\n            cid\n            extension\n          }\n        }\n      `\n    }).then((r) => r.data.files).then((r) => {\n      dispatch({type: types.SET_FILES, files: r})\n    })\n  }\n}\n\n","//Projects\nexport const SET_PROJECTS = \"SET_PROJECTS\";\nexport const ADD_PROJECT = \"ADD_PROJECT\"\nexport const REMOVE_PROJECT = \"REMOVE_PROJECT\"\nexport const UPDATE_PROJECT = \"UPDATE_PROJECT\"\n\n//Team\nexport const SET_TEAM = 'SET_TEAM';\nexport const ADD_TEAM_MEMBER = \"ADD_TEAM_MEMBER\";\n\n//Equipment\nexport const SET_EQUIPMENT = \"SET_EQUIPMENT\";\nexport const ADD_EQUIPMENT = \"ADD_EQUIPMENT\";\nexport const UPDATE_EQUIPMENT = \"UPDATE_EQUIPMENT\"\nexport const REMOVE_EQUIPMENT = \"REMOVE_EQUIPMENT\"\n\nexport const SET_FILES = \"SET_FILES\";\n\n//Calendar things\nexport const SET_BOOKINGS = \"SET_BOOKINGS\";\nexport const ADD_BOOKING = \"ADD_BOOKING\";\n\nexport const SET_TOKEN = 'SET_TOKEN';\n\nexport const ADD_FILE = 'ADD_FILE';\n\nexport const SET_DASHBOARD_TYPES = 'SET_DASHBOARD_TYPES';\nexport const SET_DASHBOARD_PERMS = 'SET_DASHBOARD_PERMS';\n","import React from 'react';\n\nimport { Document, Page } from 'react-pdf';\n\nexport default function PDFCard(props){\n    \n    const [ numPages, setNumPages ] = React.useState(null)\n    const [ pageNumber, setPageNumber ] = React.useState(1)\n\n    const onDocumentLoad = ({numPages}) => {\n        setNumPages(numPages)\n    }\n\n    return (\n        <Document\n            file={props.file}\n            onLoadSuccess={onDocumentLoad}>\n             {\n              Array.from(\n                new Array(numPages),\n                (el, index) => (\n                  <Page\n                    key={`page_${index + 1}`}\n                    pageNumber={index + 1}\n                  />\n                ),\n              )\n            }\n        </Document>\n    )\n}","import React, {useCallback} from 'react';\n\nimport {\n  Add,\n  MoreVert\n} from '@material-ui/icons';\n\nimport {\n  Paper,\n  Fab,\n  List,\n  IconButton,\n  ListItem,\n  Divider,\n  Checkbox\n} from '@material-ui/core';\nimport DashboardHeader from '../../components/dashboard-header';\nimport PDFCard from '../../components/pdf-card';\nimport FilePreview from '../../components/file-preview-dialog';\nimport { useMutation } from '@apollo/client';\nimport { addFile, CONVERT_FILE, getFiles, UPLOAD_FILE } from '../../actions/fileActions';\nimport {useDropzone} from 'react-dropzone'\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Files(props){\n  const [ uploadFile, {data} ] = useMutation(UPLOAD_FILE)\n  const [ convertFile ] = useMutation(CONVERT_FILE)\n  const [ selectedData, setData ] = React.useState(null)\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if(acceptedFiles && acceptedFiles.length > 0){\n      console.log(acceptedFiles)\n      uploadFile({variables: {file: acceptedFiles[0]}}).then((r) => {\n        if(r.data && r.data.uploadFile && !r.data.uploadFile.duplicate){\n          props.addFile(r.data.uploadFile.file)\n        }\n      })\n     \n    }\n    // Do something with the files\n  }, [data])\n\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  const [ files, setFiles ] = React.useState([])\n\n  React.useEffect(() => {\n    props.getFiles()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Files\"} />,\n    <Paper style={{marginTop: 12, flex: 1, position: 'relative', display: 'flex', flexDirection: 'column'}}>\n      <FilePreview open={selectedData} onClose={() => setData(null)} file={selectedData} />\n      <div {...getRootProps()} style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n        <input {...getInputProps()} />\n      <List className={isDragActive ? 'file-list selected' : 'file-list'}>\n        {props.files.map((x) => [\n          <ListItem button onClick={(e) => {\n            e.stopPropagation();\n            let vars = {\n              fileId: x.id,\n              targetFormat: \"glb\"\n            }\n            console.log(vars)\n            if(props.ipfs){\n              const get = async (x) => {\n                if(props.ipfs){\n                  console.log(x)\n                  let file =  props.ipfs.cat(x.cid)\n                  let data = Buffer.from('')\n                  for await (const chunk of file){\n                    data = Buffer.concat([data, chunk])\n                  }\n                  setData({\n                    filename: x.filename,\n                    extension: x.extension,\n                    content: data\n                  })\n                 // console.log(data)\n                }\n                \n              }\n              get(x)\n            }\n            //convertFile({variables: vars})\n          }}>\n            <Checkbox onClick={(e) => {\n              e.stopPropagation();\n            }}/>  \n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column'}}>\n              <div>{x.filename}</div>\n              <span style={{fontSize: 10}}>{x.cid}</span>\n            </div>\n            <IconButton onClick={(e) => {\n              e.stopPropagation()\n            }}>\n              <MoreVert />\n            </IconButton>\n          </ListItem>,\n          <Divider />\n        ])}\n        </List>\n      </div>\n      <Fab style={{position: 'absolute', right: 8, bottom: 8}} color=\"primary\" >\n        <Add />\n      </Fab>\n    </Paper>\n  ]\n}\n\nexport default connect((state) => ({\n  files: state.files.list\n}), (dispatch) => ({\n  addFile: (file) => dispatch(addFile(file)),\n  getFiles: () => dispatch(getFiles())\n}))(Files)\n","import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button\n} from '@material-ui/core';\n\nimport PDFCard from '../pdf-card';\n\nexport default function FilePreviewDialog(props){\n\n    const file = props.file || {}\n\n    const renderContent = () => {\n        switch(file.extension){\n            case 'pdf':\n                return (\n                    <PDFCard file={{data:file.content}}/>\n                )\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>{file.name}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}"],"sourceRoot":""}