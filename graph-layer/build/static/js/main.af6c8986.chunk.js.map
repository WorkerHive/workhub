{"version":3,"sources":["components/more-menu/index.js","components/dashboard-header/index.js","components/search-table/index.js","components/permission-form/index.js","actions/types.js","graph/index.js","actions/projectActions.js","views/Projects/index.js","tabs/project/calendar.js","graph/yjs.js","actions/fileActions.js","components/file-dialog/index.js","components/plan-dialog/index.js","components/graph-kanban/index.js","tabs/project/plan.js","tabs/project/index.js","tabs/project/files.js","tabs/project/team.js","views/ProjectView/index.js","components/converter-dialog/index.js","views/Files/index.js","actions/calendarActions.js","components/calendar-dialog/index.js","views/Calendar/index.js","views/Settings/index.js","actions/teamActions.js","views/Team/index.js","actions/equipmentActions.js","views/Equipment/index.js","nodes/TypeDefNode.js","actions/adminActions.js","nodes/MSSQLNode.js","nodes/MSSQLServerNode.js","views/Admin/index.js","components/sidebar/index.js","controllers/DashboardController/index.js","actions/authActions.js","views/Login/index.js","reducers/projects.js","reducers/dashboard.js","reducers/files.js","reducers/auth.js","reducers/equipment.js","reducers/team.js","reducers/calendar.js","reducers/index.js","configureStore.js","App.js","reportWebVitals.js","index.js","components/file-preview-dialog/index.js","components/glb-card/index.js","components/pdf-card/index.js"],"names":["MoreMenu","props","React","useState","menuOpen","openMenu","IconButton","className","onClick","e","preventDefault","stopPropagation","currentTarget","MoreVert","Menu","open","menu","length","onClose","anchorEl","map","x","MenuItem","action","style","color","icon","Typography","marginLeft","label","connect","state","user","jwt_decode","auth","token","dispatch","Paper","variant","title","Tabs","value","tabs","toLowerCase","indexOf","selectedTab","onChange","newVal","onTabSelect","Tab","Notifications","name","SearchTable","flex","marginTop","TextField","InputProps","startAdornment","InputAdornment","position","Search","size","ButtonGroup","Button","ViewHeadline","ViewModule","Divider","List","data","ListItem","renderItem","PermissionForm","dialogOpen","openDialog","changes","setChanges","dataObj","setDataObj","permissions","type","useEffect","selected","Dialog","fullWidth","DialogTitle","DialogContent","display","flexDirection","fields","typeKey","k","typeDef","push","d","Object","assign","changed","target","FormControlLabel","control","Checkbox","checked","renderFields","DialogActions","onSave","children","create","Fab","bottom","right","Add","SET_PROJECTS","ADD_PROJECT","REMOVE_PROJECT","UPDATE_PROJECT","SET_TEAM","ADD_TEAM_MEMBER","REMOVE_TEAM_MEMBER","UPDATE_TEAM_MEMBER","SET_EQUIPMENT","ADD_EQUIPMENT","UPDATE_EQUIPMENT","REMOVE_EQUIPMENT","SET_FILES","SET_BOOKINGS","ADD_BOOKING","SET_TOKEN","ADD_FILE","SET_DASHBOARD_TYPES","SET_DASHBOARD_PERMS","ApolloClient","link","createUploadLink","uri","process","REACT_APP_GRAPH_URL","cache","InMemoryCache","addTypename","client","GClient","yDoc","projects","list","dashboard","types","filter","a","getProjects","query","gql","then","r","y","cloneDeep","__typename","addProject","project","mutate","mutation","variables","newProject","updateProject","id","projectId","removeProject","query_string","qs","parse","location","search","ignoreQueryPrefix","setSelected","Set","status","undefined","trim","toUpperCase","tab","history","window","pathname","stringify","obj","item","button","match","url","concat","admin","ydoc","Y","WebsocketProvider","getMap","YActions","localizer","momentLocalizer","moment","UPLOAD_FILE","files","setSearch","selectedFiles","filename","onAttach","ID","setID","setTitle","description","setDescription","dueDate","setDueDate","members","setMembers","plan","Date","rows","multiline","rowsMax","m","slice","splice","format","valueOf","GraphKanban","cards","graph","nodes","columns","setColumns","renderCard","card","onCardDragEnd","source","destination","console","log","cols","fromIx","fromColumnId","toIx","toColumnId","spliced","fromPosition","toPosition","onStatusChange","template","onColumnDragEnd","col","links","parents","getColumns","MinusSquare","SvgIcon","fontSize","width","height","PlusSquare","CloseSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","div","Collapse","StyledTreeItem","withStyles","theme","iconContainer","group","paddingLeft","borderLeft","fade","palette","text","primary","TreeItem","alignItems","justifyContent","editChild","Edit","addChild","makeStyles","root","flexGrow","maxWidth","setNodes","doc","setDoc","docProject","setProject","observer","toJSON","unobserve","_doc","observe","init","events","allDay","start","end","startAccessor","endAccessor","fileId","attachFileToProject","selectedCard","setSelectedCard","setLinks","expanded","setExpanded","_setNodes","set","_setLinks","renderTree","tree_branch","_children","parent_pos","n","addNode","addLink","nodeId","node","uuidv4","l","columnMap","renderList","rootNodes","TreeView","multiSelect","defaultExpanded","onNodeToggle","event","newExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","setView","view","padding","ix","Dashboard","EmojiNature","onNodeChange","onLinkChange","renderPlan","ownProps","params","setSelectedTab","replace","path","render","ConverterDialog","outputFormat","setOutputFormat","formats","setFormats","converters","sourceFormat","targetFormat","disabled","extension","Forward","marginRight","FormControl","InputLabel","Select","convertFile","addFile","file","getFiles","getState","useMutation","uploadFile","convertDoc","setConvertDoc","selectedData","setData","onDrop","useCallback","acceptedFiles","duplicate","useDropzone","noClick","getRootProps","getInputProps","isDragActive","viewable","ipfs","conversion","cid","Contactless","Info","team","equipment","addBooking","time","booking","step","setStep","searchTab","setSearchTab","date","setDate","setAllDay","startTime","setStart","endTime","setEnd","selectedItems","setSelectedItems","renderStepTitle","minHeight","Autocomplete","options","getOptionLabel","renderInput","margin","s","renderStep","sTime","eTime","get","_booking","parseInt","items","bookings","calendar","getBookings","setBookings","zIndex","Settings","getTeam","addTeamMember","member","newMember","removeTeamMember","memberId","updateTeamMember","Schedule","SupervisorAccount","SupervisedUserCircle","Share","Delete","getEquipment","addEquipment","newItem","updateEquipment","equipmentId","removeEquipment","modal","withEditor","src","typedef","UPDATE_INTEGRATION_MAP","getTypes","adminTypes","tables","setTables","store","getSource","connectionLayout","editor","error","table","updateNode","bucketLayout","availableColumns","provides","autoHighlight","ret","changeKey","host","db","username","password","draggable","updateIntegrationMap","integrationMap","integrations","nodeTypes","TypeDefNode","MSSQLNode","MSSQLServer","withRouter","CalendarToday","AccountTree","BusinessCenter","Description","Drawer","fontWeight","split","getPermissions","typePermissions","perms","ipfsNode","setIPFS","IPFS","stop","Calendar","component","Projects","exact","Teams","Equipment","SettingsView","AdminView","LOGIN","updated","setToken","quote","setQuote","setError","setUsername","setPassword","doLogin","login","fetch","json","q","paddingBottom","marginBottom","onKeyDown","keyCode","INIT","tIx","combineReducers","pIx","eIx","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","App","utils","MomentUtils","loading","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","pdfjs","GlobalWorkerOptions","workerSrc","version","ReactDOM","StrictMode","document","getElementById","FilePreviewDialog","URL","revokeObjectURL","cat","Buffer","chunk","createObjectURL","Blob","renderContent","GLBCard","canvas","scene","engine","onResizeWindow","resize","BABYLON","Engine","Scene","createDefaultEnvironment","camera","ArcRotateCamera","Math","PI","Vector3","setTarget","Zero","minZ","wheelPrecision","speed","SceneLoader","ImportMesh","attachControl","addEventListener","runRenderLoop","stopRenderLoop","dispose","removeEventListener","ref","c","PDFCard","numPages","setNumPages","onLoadSuccess","Array","el","index","pageNumber"],"mappings":"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","file":"static/js/main.af6c8986.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    MoreVert\n} from '@material-ui/icons'\n\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    Typography\n} from '@material-ui/core';\n\nexport default function MoreMenu(props){\n    const [ menuOpen, openMenu ] = React.useState(null);\n\n    const toggleMenu = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        openMenu(e.currentTarget)\n    }\n\n    return [\n        <IconButton className=\"more-menu\" onClick={toggleMenu}>\n            <MoreVert />\n        </IconButton>,\n        <Menu open={props.menu.length > 0 && menuOpen} onClose={() => openMenu(null)} anchorEl={menuOpen}>\n            {props.menu.map((x) => {\n                return (\n                    <MenuItem onClick={(e) => {\n                        e.stopPropagation()\n                        openMenu(null)\n                        x.action()\n                    }} style={{color: x.color || 'black'}}>\n                        {x.icon}\n                        <Typography style={{marginLeft: 8}}>\n                            {x.label}\n                        </Typography>\n                    </MenuItem>\n                )\n            })}\n        </Menu>\n    ]\n}","import React from 'react';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n    Notifications\n} from \"@material-ui/icons\"\n\nimport {\n    Paper,\n    Typography,\n    Tabs,\n    Tab\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nfunction DashboardHeader(props){\n    return (\n        <Paper className=\"dashapp-header\">\n        <Typography variant=\"h6\">{props.title}</Typography>\n        <div className=\"dashapp-header__tabs\">\n            <Tabs value={props.tabs.map((x) => x.toLowerCase()).indexOf(props.selectedTab.toLowerCase())} onChange={(e, newVal) => {\n                props.onTabSelect(props.tabs[newVal])\n            }}>\n            {(props.tabs || []).map((x) => (\n                <Tab label={x} />\n            ))}\n            </Tabs>\n\n        </div>\n        <div className=\"actions-col\">\n          <Notifications />\n          <div className=\"user-info\">\n            <Typography variant=\"subtitle1\">{props.user.name}</Typography>\n            <span>Online</span>\n          </div>\n        </div>\n        </Paper>\n    )\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token)\n}), (dispatch) => ({\n\n}))(DashboardHeader)","import React from 'react';\n\nimport {\n    Search,\n    ViewHeadline,\n    ViewModule\n} from '@material-ui/icons';\n\nimport {\n    Paper,\n    TextField,\n    ButtonGroup,\n    Button,\n    Divider,\n    List,\n    ListItem,\n    InputAdornment\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function SearchTable(props){\n    return (\n        <Paper style={{flex: 1, marginTop: 12}}>\n            <div className=\"options-bar\">\n                <TextField\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }}\n                    label=\"Search\"\n                    variant=\"outlined\"\n                    size=\"small\" />\n                <ButtonGroup>\n                    <Button><ViewHeadline /></Button>\n                    <Button><ViewModule /></Button>\n                </ButtonGroup>\n            </div>\n            <Divider />\n            <div className=\"grid-list\">\n                <List>\n                    {props.data.map((x) => (\n                    <ListItem>\n                        {props.renderItem(x)}\n                    </ListItem>\n                    ))}\n                </List>\n            </div>\n        </Paper>\n    )\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    Dialog,\n    DialogTitle,\n    TextField,\n    DialogActions,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    DialogContent\n} from '@material-ui/core';\n\nimport './index.css';\n\nexport default function PermissionForm(props){\n    const [dialogOpen, openDialog] = React.useState(false)\n\n    const [ changes, setChanges ] = React.useState({})\n    const [ dataObj, setDataObj ] = React.useState({})\n\n    const permissions = props.permissions && props.permissions[0] || {}\n    const type = props.type && props.type[0] || {}\n\n    React.useEffect(() => {\n        if(props.selected){\n            setDataObj(props.selected)\n        }\n    }, [props.selected])\n\n    const renderFields = (type) => {\n        let fields = [];\n    \n        for(var k in type.typeDef){\n            const typeKey = k;\n            switch(type.typeDef[k]){\n                case \"String\":\n                fields.push((\n                    <TextField value={dataObj[typeKey]} onChange={(e) => {\n                        let d = Object.assign({}, dataObj);\n                        let changed = Object.assign({}, changes)\n                        d[typeKey] = e.target.value;\n                        changed[typeKey] = e.target.value;\n                        setDataObj(d)\n                        setChanges(changed)\n                    }} label={typeKey} ></TextField>\n                ))\n                break;\n                case \"Boolean\":\n                    fields.push((\n                        <FormControlLabel\n                            control={(\n                                <Checkbox checked={dataObj[typeKey]} onChange={(e) => {\n                                    let d = Object.assign({}, dataObj)\n                                    let changed = Object.assign({}, changes)\n                                    d[typeKey] = e.target.checked;\n                                    changed[typeKey] = e.target.checked;\n                                    setDataObj(d)\n                                    setChanges(changed)\n                                }}/>\n                            )}\n                            label={typeKey} />\n\n                    ))\n            }\n        }\n        return fields;\n    }\n\n    const onClose = () => {\n        props.onClose()\n        openDialog(false)\n        setDataObj({})\n    }\n\n    const onSave = () => {\n        props.onSave(dataObj, changes)\n        onClose();\n    }\n\n    return (\n        <div className=\"permission-form\">\n            <Dialog fullWidth open={props.selected || dialogOpen} onClose={() => {\n               onClose()\n            }}>\n                <DialogTitle>{type.name}</DialogTitle>\n                <DialogContent style={{display: 'flex', flexDirection: \"column\"}}>\n                    {renderFields(type)}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => {onClose()}}>Cancel</Button>\n                    <Button onClick={() => onSave()} color=\"primary\" variant=\"contained\">Save</Button>\n                </DialogActions>\n            </Dialog>\n            <div className=\"permission-form__inner\">\n                {props.children}\n            </div>\n            {permissions.create && (\n                <Fab onClick={() => openDialog(true)} color=\"primary\" style={{position: 'absolute', bottom: 12, right: 12}}>\n                    <Add />\n                </Fab>\n            )}\n        </div>\n    )\n}","//Projects\nexport const SET_PROJECTS = \"SET_PROJECTS\";\nexport const ADD_PROJECT = \"ADD_PROJECT\"\nexport const REMOVE_PROJECT = \"REMOVE_PROJECT\"\nexport const UPDATE_PROJECT = \"UPDATE_PROJECT\"\n\n//Team\nexport const SET_TEAM = 'SET_TEAM';\nexport const ADD_TEAM_MEMBER = \"ADD_TEAM_MEMBER\";\nexport const REMOVE_TEAM_MEMBER = \"REMOVE_TEAM_MEMBER\"\nexport const UPDATE_TEAM_MEMBER = \"UPDATE_TEAM_MEMBER\"\n\n//Equipment\nexport const SET_EQUIPMENT = \"SET_EQUIPMENT\";\nexport const ADD_EQUIPMENT = \"ADD_EQUIPMENT\";\nexport const UPDATE_EQUIPMENT = \"UPDATE_EQUIPMENT\"\nexport const REMOVE_EQUIPMENT = \"REMOVE_EQUIPMENT\"\n\nexport const SET_FILES = \"SET_FILES\";\n\n//Calendar things\nexport const SET_BOOKINGS = \"SET_BOOKINGS\";\nexport const ADD_BOOKING = \"ADD_BOOKING\";\n\nexport const SET_TOKEN = 'SET_TOKEN';\n\nexport const ADD_FILE = 'ADD_FILE';\n\nexport const SET_DASHBOARD_TYPES = 'SET_DASHBOARD_TYPES';\nexport const SET_DASHBOARD_PERMS = 'SET_DASHBOARD_PERMS';\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client'\n\nexport default () => {\n  return new ApolloClient({\n    link: createUploadLink({\n      uri: (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? \n        'https://thetechcompany.workhub.services/graphql' || 'http://localhost:4000/graphql' : \n        process.env.REACT_APP_GRAPH_URL || '/graphql',\n    }),\n    cache: new InMemoryCache({\n      addTypename: false\n    })\n  })\n}\n","import * as types from './types';\nimport { gql } from '@apollo/client';\nimport { cloneDeep } from 'lodash';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addProject = (project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n      mutation AddProject($project: ProjectInput){\n        addProject(project: $project){\n          id\n          name\n          description\n          status\n        }\n      }\n    `,\n    variables: {\n      project: project\n    }\n    }).then((r) => r.data.addProject).then((r) => {\n      dispatch({type: types.ADD_PROJECT, newProject: r})\n    })\n  }\n}\n\nexport const updateProject = (projectId, project) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n  mutation UpdateProject($projectId: ID, $project: ProjectInput){\n    updateProject(projectId: $projectId, project: $project){\n      id\n      name\n      description\n      status\n    }\n  }\n`, \nvariables: {\n  projectId: projectId,\n  project: project\n}}).then((r) => r.data.updateProject).then((r) => {\n  dispatch({type: types.UPDATE_PROJECT, project: project, id: projectId})\n})\n} \n  }\n\n  export const removeProject = (projectId) => {\n    return (dispatch) => {\n      return client.mutate({\n        mutation: gql`\n          mutation RemoveProject($projectId: ID){\n            removeProject(projectId: $projectId)\n          }\n        `,\n          variables: {\n            projectId: projectId\n          }\n      }).then((r) => r.data.removeProject).then((r) => {\n        if(r) dispatch({type: types.REMOVE_PROJECT, id: projectId})\n      })\n    }\n\n  }\n\nexport const getProjects = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetProjects {\n          projects{\n            id\n            name\n            description\n            status\n            files{\n              filename\n              cid\n            }\n          }\n        }\n      `\n    }).then((r) => {\n      dispatch({type: types.SET_PROJECTS, projects: r.data.projects.map((x) => {\n        let y = cloneDeep(x)\n        delete y.__typename;\n        return y;\n      })})      \n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  ViewHeadline,\n  ViewModule,\n  Search,\n  Add\n} from '@material-ui/icons';\n\nimport {\n  List,\n  ListItem,\n  InputAdornment,\n  ButtonGroup,\n  Button,\n  Paper,\n  Divider,\n  TextField,\n  Fab,\n  Typography\n} from '@material-ui/core';\n\nimport MoreMenu from '../../components/more-menu';\nimport DashboardHeader from '../../components/dashboard-header';\n\nimport { useMutation } from '@apollo/client'\nimport { connect } from 'react-redux';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { updateProject, addProject, removeProject,   getProjects } from '../../actions/projectActions';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\n\nimport './index.css';\n\nfunction Projects(props){\n  const query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n  const [ selected, setSelected ] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getProjects() \n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[\"ALL\", ...new Set(props.projects.filter((a) => a.status != null && a.status != undefined).map((x) => x.status.trim().toUpperCase()))] || []}\n    onTabSelect={(tab) => {\n      if(tab == \"ALL\"){\n        delete query_string.status;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }else{\n        query_string.status = tab;\n        props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n      }\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={query_string.status && query_string.status.toUpperCase() || 'ALL'}\n    title={\"Projects\"} />,\n    <PermissionForm\n      onSave={(obj, data) => {\n        if(obj.id){\n          let d = Object.assign({}, data);\n          delete d.id\n          props.updateProject(obj.id, d)\n        }else{\n          props.addProject(data)\n        }\n      }} \n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable\n        data={props.projects.filter((a) => {\n          if(query_string.status && a.status == query_string.status){\n            return true;\n          }else if(!query_string.status){\n            return true;\n          }\n          return false;\n        }).filter((a) => a.name)}\n        renderItem={(item) => [\n          <div className=\"project-item\">\n            <ListItem button onClick={() => {\n              props.history.push(`${props.match.url}/${item.id}/plan`)\n              }}>\n              <Typography style={{flex: 1}} variant=\"subtitle1\">{item.name}</Typography>\n            </ListItem>\n            <MoreMenu \n              menu={[\n              ].concat(props.user.admin ? [\n                {\n                  label: \"Edit\",\n                  action: () => setSelected(item)\n                },\n                {\n                  label: \"Delete\",\n                  color: 'red',\n                  action: () => props.removeProject(item.id)\n                }\n              ] : [])} />\n          </div>\n        ]} />\n\n    </PermissionForm>\n\n  ]\n}\n\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  projects: state.projects.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Projects\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Projects\")\n}), (dispatch) => ({\n  getProjects: () => dispatch(getProjects()),\n  addProject: (project) => dispatch(addProject(project)),\n  updateProject: (id, project) => dispatch(updateProject(id, project)),\n  removeProject: (id) => dispatch(removeProject(id))\n}))(Projects)\n","import React from 'react';\nimport YActions from '../../graph/yjs';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport './calendar.css';\n\nconst ydoc = YActions()\nlet yDoc;\n\nconst localizer = momentLocalizer(moment)\nexport default function CalendarTab(props){\n    const [ bookings, setBookings ] = React.useState([])\n    const [ nodes, setNodes ] = React.useState([])\n    const [ doc, setDoc ] = React.useState(null)\n    const [ docProject, setProject ] = React.useState({})\n\n    const observer = () => {\n        if(yDoc){\n          let obj = yDoc.toJSON()\n          console.log(\"OBSERVE\", obj)\n          if(obj.nodes != null){\n            setNodes(obj.nodes.map((x) => Object.assign({}, x)))\n          }\n        \n        }\n      }\n  \n      React.useEffect(() => {\n        console.log(\"YDC\", props)\n        if(props.project && ydoc && props.project.id != docProject.id){\n          if(doc) doc.unobserve(observer);\n  \n          console.log(\"Setting up YDOC\")\n          let _doc = ydoc.getMap(`plan-${props.project.id}`)\n          yDoc = _doc;\n            setDoc(_doc)\n          _doc.observe(observer)\n  \n          setProject(props.project)\n          \n          let init = _doc.toJSON();\n  \n          if(init.nodes != null) setNodes(init.nodes)\n        }\n      }, [props.project, doc])\n\n    return (\n        <div className=\"calendar-tab\">\n            <Calendar\n                localizer={localizer}\n                events={nodes.filter((a) => a.data && a.data.dueDate).map((x) => ({\n                    id: x.id,\n                    title: x.data.label,\n                    allDay: false,\n                    start: new Date(((x.data.dueDate)*1000) -( 5 * 1000 * 60)),\n                    end: new Date((x.data.dueDate)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </div>\n    )\n}","import * as Y from 'yjs';\nimport { WebsocketProvider } from 'y-websocket';\n\nexport default function (){\n\n    const ydoc = new Y.Doc();\n    const host = \"thetechcompany.workhub.services\";\n    //const host = new URL(window.location).hostname;\n    const websocketProvider = new WebsocketProvider(`wss://${host}:1234`, 'workhub', ydoc)\n  \n    const yArray = ydoc.getMap('')\n  \n    return ydoc;\n  }","import * as types from './types';\nimport { gql, useMutation } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPLOAD_FILE = gql`\n    mutation UploadFile($file: Upload!){\n      uploadFile(file: $file) {\n        duplicate\n        file{\n          id\n          filename\n          cid\n          extension\n        }\n      }\n    }\n  `\n\nexport const attachFile = (projectId, fileId) => {\n  client.mutate({\n    mutation: gql`\n    mutation AttachFile($projectId: ID, $fileId: ID){\n      attachFileToProject(projectId: $projectId, fileId: $fileId){\n        files{\n          cid\n        }\n      }\n    }\n    `,\n    variables: {\n      projectId: projectId,\n      fileId: fileId\n    }\n  }).then((r) => r.data.attachFileToProject).then((r) => {\n      console.log(r)\n  }) \n}\n\nexport const convertFile = (fileId, targetFormat) => {\n  client.mutate({\n    mutation: gql`\n    mutation ConvertFile($fileId: ID, $targetFormat:String){\n      convertFile(fileId: $fileId, targetFormat: $targetFormat){\n        msg\n        error\n      }\n    }\n  `,\n    variables: {\n      fileId,\n      targetFormat\n    }\n  }).then((r) => r.data.convertFile)\n}\n\nexport const getConverters = () => {\n  return client.query({\n    query: gql`\n      query GetConverters{\n        converters{\n          sourceFormat\n          targetFormat\n        }\n      }\n    `\n  }).then((r) => r.data.converters)\n}\n\nexport const addFile = (file) => {\n  return (dispatch) => {\n    dispatch({type: types.ADD_FILE, file: file})\n  }\n}\n\nexport const getFiles = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetFiles{\n          files{\n            id\n            filename\n            cid\n            extension\n            conversion{\n              extension\n              cid\n            }\n          }\n        }\n      `\n    }).then((r) => r.data.files).then((r) => {\n      dispatch({type: types.SET_FILES, files: r})\n    })\n  }\n}\n\n","import React from 'react';\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    List,\n    ListItem,\n    Button,\n    InputAdornment,\n    TextField,\n    Checkbox\n} from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nfunction FileDialog(props){\n    const [ search, setSearch ] = React.useState('')\n\n    const [ selectedFiles, setSelected ] = React.useState({})\n\n    const attachFiles = () => {\n        if(props.onAttach){\n            props.onAttach(selectedFiles)\n            setSelected({})\n            props.onClose()\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Files</DialogTitle>\n            <DialogContent>\n                <TextField \n                    fullWidth \n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    label=\"Search\" \n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>\n                    }} />\n                <List>\n                    {props.files.filter((a) => a.filename && a.filename.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                        <ListItem button><Checkbox checked={selectedFiles[x.id]} onChange={(e) => {\n                            let files = selectedFiles;\n                            files[x.id] = e.target.checked;\n                            setSelected(files)\n                        }}/>{x.filename}</ListItem>\n                    ))}    \n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Close</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={attachFiles}>Attach</Button>\n            </DialogActions>\n\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    files: state.files.list\n}))(FileDialog)","import React from 'react';\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    TextField,\n    Button\n} from '@material-ui/core';\n\nimport { KeyboardDateTimePicker } from '@material-ui/pickers'\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport './index.css';\n\nfunction PlanDialog(props){\n    const [ ID, setID ] = React.useState('')\n    const [ title, setTitle ] = React.useState('')\n    const [ description, setDescription ] = React.useState('')\n    const [ dueDate, setDueDate ] = React.useState(null);\n    const [ members, setMembers ] = React.useState([])\n\n    React.useEffect(() => {\n        if(props.plan){\n            setID(props.plan.id)\n            setTitle(props.plan.title)\n            setDescription(props.plan.description)\n            setMembers(props.plan.members || [])\n            if(props.plan.dueDate) setDueDate(moment(new Date(props.plan.dueDate * 1000)))\n        }\n    }, [props.plan])\n\n    const onSave = () => {\n        let plan = {\n            id: ID,\n            title: title,\n            description: description,\n            dueDate: dueDate && dueDate.valueOf() / 1000,\n            members: members\n        }\n\n        if(props.onSave){\n            props.onSave(plan)\n            props.onClose();\n        }\n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>\n                <TextField value={title} onChange={(e) => setTitle(e.target.value)} fullWidth label=\"Title\" />\n            </DialogTitle>\n            <DialogContent className=\"plan-dialog__content\">\n                <div className=\"plan-info\">\n                    <TextField \n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        fullWidth \n                        label=\"Description\" \n                        rows={3} multiline rowsMax={6} />\n\n                </div>\n                <div className=\"plan-actions\">\n                    <Button \n                        onClick={() => {\n                            let m = members.slice();\n                            if(members.indexOf(props.user.id) > -1){\n                                m.splice(members.indexOf(props.user.id), 1)\n                            }else{\n                                m.push(props.user.id)\n                            }\n                            setMembers(m)\n                        }}\n                        color={members.indexOf(props.user.id) > -1 ? \"\" : \"primary\"}\n                        variant=\"contained\">{members.indexOf(props.user.id) > -1 ? \"Leave\" : \"Join\"}</Button>\n                    <Button color=\"primary\" variant=\"contained\">Members</Button>\n                    <KeyboardDateTimePicker\n                        label=\"Due Date\"\n                        value={dueDate}\n                        onChange={(e) => {\n                            setDueDate(e)\n                        }}\n                        format={\"DD/MM/yyyy\"} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={onSave} color=\"primary\" variant=\"contained\">Save</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token)\n}))(PlanDialog)","import React from 'react';\n\nimport Board from '@lourenci/react-kanban'\nimport '@lourenci/react-kanban/dist/styles.css'\nimport './index.css';\n\nexport default function GraphKanban(props){\n    const [ columns, setColumns ] = React.useState([\n        {\n            id: 0,\n            title: 'Blocked',\n            cards: []\n        },\n        {\n            id: 1,\n            title: 'Backlog',\n            cards: props.graph.nodes.filter((a) => a.status != \"COMPLETED\" && a.status != \"BLOCKED\").map((x) => ({\n                id: x.id,\n                title: x.data.label,\n            }))\n        },\n        {\n            id: 2,\n            title: 'Doing',\n            cards: []\n        },\n        {\n            id: 3,\n            title: 'Done',\n            cards: []\n        }\n    ])\n\n    const getColumns = () => {\n        let template = []\n        if(props.template){\n            template = props.template || [];\n        }\n\n        return template.map((col) => {\n            let col_id = col.id;\n            console.log(props.graph.nodes)\n            let cards = props.graph.nodes.filter((a) => {\n                return a.data.status == col.status\n            }) || []\n\n            console.log(props.graph.links)\n            return {\n                ...col,\n                cards: cards.map((x) => {\n                    let parents = props.graph.links.filter((a) => a.target == x.id).map((y) => props.graph.nodes.filter((a) => a.id == y.source)[0])\nreturn {\n                    id: x.id,\n                    title: x.data.label,\n                    description: parents.length > 0 && parents[0].data.label,\n                    dueDate: x.data.dueDate,\n                    members: x.members || []\n}\n                })\n            }\n        })\n    }\n\n  \n    return (\n        <Board \n            renderCard={(card) => {\n                return (\n                    <div onClick={() => {\n                        if(props.onClick){\n                            props.onClick(card)\n                        }\n                    }} className=\"react-kanban-card\">\n                        <div className=\"react-kanban-card__title\">\n                            {card.title}\n                        </div>\n                        <div>\n                            {card.description}    \n                        </div>\n                    </div>\n                )\n            }}\n            onCardDragEnd={(card, source, destination) => {\n                console.log(source, destination)\n                let cols = columns.slice()\n\n                let fromIx = cols.map((x) => x.id).indexOf(source.fromColumnId);\n                let toIx = cols.map((x) => x.id).indexOf(destination.toColumnId)\n\n                let spliced = cols[fromIx].cards.splice(source.fromPosition, 1)\n                cols[toIx].cards.splice(destination.toPosition, 0, spliced[0])\n\n\n                if(props.onStatusChange) props.onStatusChange(card, props.template.filter((a) => a.id == destination.toColumnId)[0].status)\n                if(props.onChange)props.onChange(cols)\n                setColumns(cols)\n            }}\n            onColumnDragEnd={(obj, source, destination) => {\n                let cols = columns.slice()\n\n                let spliced = cols.splice(source.fromPosition, 1)[0]\n                cols.splice(destination.toPosition, 0, spliced)\n                if(props.onChange)props.onChange(cols)\n                setColumns(cols)\n            }}\n            children={{columns: getColumns()}} />\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport {\n    Add,\n    Dashboard as DashboardIcon,\n    List as ListIcon,\n    EmojiNature,\n    Edit\n} from '@material-ui/icons';\n\nimport {\n    IconButton,\n    SvgIcon,\n    Collapse,\n    ButtonGroup,\n    Divider,\n    Button\n} from \"@material-ui/core\"\n\nimport {\n    TreeView,\n    TreeItem,\n} from '@material-ui/lab'\n\nimport PlanDialog from '../../components/plan-dialog';\nimport HiveEditor from 'react-hive-flow'\nimport GraphKanban from '../../components/graph-kanban';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport YActions from '../../graph/yjs';\nimport qs from 'qs';\nimport './plan.css';\n\nconst ydoc = YActions()\nlet yDoc;\n\nexport default function PlanTab(props){\n  const [ selectedCard , setSelectedCard ] = React.useState(null)\n  let query = qs.parse(window.location.search, {ignoreQueryPrefix: true})\n  const [ selectedView, _setView ] = React.useState('list')\n\n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n\n    const [ expanded, setExpanded ] = React.useState(['root'])\n\n    const [ docProject, setProject ] = React.useState({})\n    const [ doc, setDoc ] = React.useState(null)\n    \n    const observer = () => {\n      if(yDoc){\n        let obj = yDoc.toJSON()\n        console.log(\"OBSERVE\", obj)\n        if(obj.nodes != null){\n          setNodes(obj.nodes.map((x) => Object.assign({}, x)))\n        }\n        if(obj.links != null) {\n          setLinks(obj.links.map((x) => Object.assign({}, x)))\n        }\n      }\n    }\n\n    React.useEffect(() => {\n      console.log(\"YDC\", props)\n      if(props.project && ydoc && props.project.id != docProject.id){\n        if(doc) doc.unobserve(observer);\n\n        console.log(\"Setting up YDOC\")\n        let _doc = ydoc.getMap(`plan-${props.project.id}`)\n        yDoc = _doc;\n        setDoc(_doc)\n        _doc.observe(observer)\n\n        setProject(props.project)\n        \n        let init = _doc.toJSON();\n\n        if(init.nodes != null) setNodes(init.nodes)\n        if(init.links != null) setLinks(init.links)\n      }\n    }, [props.project, doc])\n\n    const _setNodes = (nodes) => {\n      if(doc){\n        doc.set('nodes', nodes)\n      }\n      setNodes(nodes)\n    }\n\n    const _setLinks = (links) => {\n      if(doc){\n        doc.set('links', links)\n      }\n      setLinks(links)\n    }\n\n    const renderTree = (tree_branch) => {\n        if(tree_branch){\n            let _links = links.filter((a) => a.source == tree_branch.id)\n            let _children = _links.map((x) => nodes.filter((a) => a.id == x.target)[0])\n\n            let parent_pos = nodes.filter((a) => a.id == tree_branch.id)[0].position\n\n            let item = (\n                <StyledTreeItem \n                  editChild={() => {\n                    setSelectedCard({\n                      id: tree_branch.id,\n                      title: tree_branch.data.label,\n                      description: tree_branch.data.description,\n                      dueDate: tree_branch.dueDate,\n                      members: tree_branch.members})\n                  }}\n                  addChild={() => {\n                    let n = addNode({\n                        type: 'baseNode',\n                        data:{\n                          label: \"\"\n                        },\n                        position: {\n                          x: parent_pos.x,\n                          y: parent_pos.y + 121\n                        }\n                    })\n                    addLink({target: n.id, source: tree_branch.id})\n\n                    setSelectedCard({\n                      id: n.id,\n                      title: \"\",\n                      dueDate: null,\n                      members: []\n                    })\n        \n                }} nodeId={tree_branch.id} label={tree_branch && tree_branch.data && tree_branch.data.label}>\n                    {(_children || []).map((x) => renderTree(x))}\n                </StyledTreeItem>\n            )\n            return item;\n        }\n    }\n\n    const addNode = (node) => {\n        let n = nodes.slice();\n        node.id = uuidv4()\n        if(!node.data)node.data = {};\n        if(!node.position)node.position = {x:300, y:300}\n        n.push(node)\n        _setNodes(n)\n        return node;\n    }\n\n    const addLink = (link) => {\n        let l = links.slice();\n        link.id = uuidv4()\n        l.push(link);\n        _setLinks(l)\n        return link;\n    }\n\n    const [ columnMap, setColumnMap ] = React.useState([])\n\n    const renderKanban = () => {\n      return (\n        <GraphKanban \n          onClick={(card) => {\n            setSelectedCard({\n              id: card.id,\n              title: card.title,\n              dueDate: card.dueDate,\n              members: card.members\n            })\n          }}\n          onStatusChange={(card, status) => {\n            let n = nodes.slice()\n            let ix = n.map((x) => x.id).indexOf(card.id)\n            n[ix].data.status = status;\n            _setNodes(n)\n           // console.log(card, status)\n          }}\n          onChange={(cols) => {\n            //Add column -> node mapping to yjs\n            /*let output = cols.map((x) => ({\n              id: x.id,\n              title: x.title,\n              cards: x.cards.map((x) => x.id)\n            }))\n            setColumnMap(output)*/\n          }}\n          template={[\n            {\n              id: 0,\n              title: \"Blocked\",\n              status: \"BLOCKED\"\n            },\n            {\n              id: 1,\n              title: \"Ready to be Done\",\n              status: \"UNFINISHED\"\n            },\n            {\n              id: 2,\n              title: \"Doing\",\n              status: \"IN PROGRESS\"\n            },\n            {\n              id: 3,\n              title: \"Done\",\n              status: \"COMPLETE\"\n            }\n          ]}\n          map={columnMap}\n          graph={{nodes: nodes, links: links}} />\n      )\n    }\n\n    const renderList = () => {\n      let rootNodes = nodes.filter((x) => links.filter((a) => a.target == x.id).length == 0)\n//      let rootNodes = links.filter((a) => a.source == 'root').map((x) => nodes.filter((a) =>  a.id == x.target)[0])\n\n      return (\n        <TreeView\n        multiSelect\n        defaultExpanded={['1']}\n        expanded={expanded}\n        onNodeToggle={(event, newExpanded) => {\n            console.log(event, newExpanded)\n            setExpanded(newExpanded)\n        }}\n        defaultCollapseIcon={<MinusSquare />}\n        defaultExpandIcon={<PlusSquare />}\n        defaultEndIcon={<CloseSquare />}>\n         <StyledTreeItem \n          addChild={() => {\n            let n = addNode({\n                type: 'baseNode',\n                data: {label: ''}\n            })\n            setSelectedCard({\n              id: n.id,\n              title: \"\",\n              dueDate: null,\n              members: []\n            })\n          //  addLink({target: n.id, source: 'root'})\n                        \n            console.log(nodes, links)\n         }} nodeId=\"root\" label={props.project.name}>\n             {rootNodes.map((x) => renderTree(x))}\n        </StyledTreeItem>\n     </TreeView>\n      )\n    }\n\n    const renderHive = () => {\n      return (\n        <div className=\"plan-hive\">\n      <HiveEditor\n          nodes={nodes}\n          links={links}\n          onNodeChange={(nodes) => _setNodes(nodes)}\n          onLinkChange={(links) => _setLinks(links)} />\n        </div>\n      )\n    }\n\n\n    const renderPlan = () => {\n      let view = query.view || 'kanban'\n      switch(view){\n        case 'kanban':\n          return renderKanban()\n        case 'list':\n          return renderList()\n        case 'hive':\n          return renderHive()\n        default:\n          return\n      }\n    }\n\n    const setView = (view) => {\n      if(!query) query = {};\n      query.view = view;\n      props.history.push(`${props.location.pathname}?${qs.stringify(query)}`)\n    }\n\n    let view = query.view || 'kanban';\n\n    return (\n        <div style={{padding: 4, display: 'flex', flex: 1, position: 'relative', flexDirection: 'column', width: 'calc(100% - 8px)'}}>\n            <PlanDialog \n              onSave={(plan) => {\n                console.log(plan)\n                let n = nodes.slice()\n                let ix = n.map((x) => x.id).indexOf(plan.id)\n                let data = {}\n\n                if(plan.title) data.label = plan.title;\n                if(plan.description) data.description = plan.description\n                if(plan.dueDate) data.dueDate = plan.dueDate;\n                \n                n[ix] = {\n                  ...n[ix],\n                  data: {\n                    ...n[ix].data,\n                    ...data\n                  },\n                  members: plan.members\n                };\n                _setNodes(n)\n              }}\n              open={selectedCard} \n              plan={selectedCard} \n              onClose={() => setSelectedCard(null)}/>\n            <div className=\"plan-header\">\n              <div>\n      \n              </div>\n              <ButtonGroup>\n                <Button variant={view == 'kanban' && 'contained'} onClick={() => setView('kanban')}><DashboardIcon /></Button>\n                <Button variant={view == 'list' && 'contained'} onClick={() => setView('list')}><ListIcon /></Button>\n                <Button variant={view == 'hive' && 'contained'} onClick={() => setView('hive')}><EmojiNature /></Button>\n              </ButtonGroup>\n            </div>\n            <Divider />\n            <div className=\"plan-container\">\n            {renderPlan()}\n            </div>\n        </div>\n    )\n}\n\nfunction MinusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function PlusSquare(props) {\n    return (\n      <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n      </SvgIcon>\n    );\n  }\n  \n  function CloseSquare(props) {\n    return (\n      <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n        {/* tslint:disable-next-line: max-line-length */}\n        <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n      </SvgIcon>\n    );\n  }\n\n\nfunction TransitionComponent(props) {\n    const style = useSpring({\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\n    });\n  \n    return (\n      <animated.div style={style}>\n        <Collapse {...props} />\n      </animated.div>\n    );\n  }\n  \n  TransitionComponent.propTypes = {\n    /**\n     * Show the component; triggers the enter or exit states\n     */\n    in: PropTypes.bool,\n  };\n  \n  const StyledTreeItem = withStyles((theme) => ({\n    iconContainer: {\n      '& .close': {\n        opacity: 0.3,\n      },\n    },\n    group: {\n      marginLeft: 7,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n    },\n\n  }))((props) => {\n      return(\n    <TreeItem {...props} label={(\n        <div className=\"tree-item\" style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n            {props.label}\n            <div style={{display: 'flex'}}>\n            <IconButton onClick={(e) => {\n                e.stopPropagation();\n                if(props.editChild) props.editChild()\n            }}>\n              <Edit />\n            </IconButton>\n            <IconButton onClick={(e) => {\n                e.stopPropagation()\n                props.addChild()\n            }}>\n                <Add />\n            </IconButton>\n            </div>\n        </div>\n    )} TransitionComponent={TransitionComponent}/>\n\n  )});\n  \n  const useStyles = makeStyles({\n    root: {\n      height: 264,\n      flexGrow: 1,\n      maxWidth: 400,\n    },\n  });","import CalendarTab from './calendar';\nimport FileTab from './files';\nimport PlanTab from './plan';\nimport TeamTab from './team';\n\nexport default {\n    CalendarTab,\n    FileTab,\n    PlanTab,\n    TeamTab\n}","import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    List,\n    ListItem\n} from '@material-ui/core';\n\nimport { useMutation } from '@apollo/client';\nimport { attachFile } from '../../actions/fileActions';\nimport FileDialog from '../../components/file-dialog';\n\nexport default function FileTab(props){\n    const [ dialogOpen, openDialog ] = React.useState(false)\n\n    React.useEffect(() => {\n        console.log(props.project)\n    })\n    return (\n        <div>\n            <List>\n                {props.project && props.project.files && props.project.files.map((x) => (\n                    <ListItem>{x.filename}</ListItem>\n                ))}\n            </List>\n            <FileDialog onAttach={(selected) => {\n                for(var k in selected){\n                    attachFile(props.project.id, k);\n                    \n                }\n    \n            }} open={dialogOpen} onClose={() => openDialog(false)} />\n            <Fab style={{position: 'absolute', bottom: 12, right: 12}} color=\"primary\" onClick={() => openDialog(true)}>\n                <Add />\n            </Fab>\n\n        </div>\n    )\n}","import React from 'react';\n\nexport default function TeamTab(props){\n    return (\n        <div>\n            \n        </div>\n    )\n}","import React from 'react'\nimport {\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    KeyboardDatePicker\n} from '@material-ui/pickers'\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport ProjectTabs from '../../tabs/project'\nimport { connect } from 'react-redux';\nimport './index.css';\n\nfunction ProjectView(props){\n    const [ project, setProject ] = React.useState({});\n    const [ selectedTab, setSelectedTab ] = React.useState(null)\n\n    React.useEffect(() => {\n        if(props.project && props.project.length > 0){\n            setProject(props.project[0])\n        }\n    }, [props.project])\n\n\n    const tabs = [\"Plan\", \"Calendar\", \"Team\", \"Files\"]\n\n    return [\n        <DashboardHeader \n            tabs={tabs}\n            onTabSelect={(tab) => {\n                setSelectedTab(tab)\n                props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n            }}\n            selectedTab={selectedTab || props.location.pathname.replace(`${props.match.url}/`, '')}\n            title={project.name} />,\n        <Paper style={{flex: 1, width: '100%', height: 'calc(100vh - 76px)', marginTop: 12, display: 'flex'}}>\n            <Switch>\n                <Route path={`${props.match.url}/plan`} render={(props) => {\n                    return <ProjectTabs.PlanTab {...props} y={props.y} project={project} />\n                }} />\n                <Route path={`${props.match.url}/calendar`} render={(props) => {\n                    return <ProjectTabs.CalendarTab {...props} y={props.y} project={project} />\n                }} />\n                <Route path={`${props.match.url}/team`} render={(props) => {\n                    return <ProjectTabs.TeamTab {...props} project={project} />\n                }} />\n                <Route path={`${props.match.url}/files`} render={(props) => {\n                    return <ProjectTabs.FileTab {...props} project={project} />\n                }} />\n            </Switch>\n        </Paper>\n\n    ]\n}\n\nexport default connect((state, ownProps) => ({\n    project: state.projects.list.filter((a) => a.id == ownProps.match.params.id)\n}))(ProjectView)","import React from 'react';\n\nimport {\n    Forward\n} from '@material-ui/icons'\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\nimport { getConverters, convertFile } from '../../actions/fileActions';\n\nexport default function ConverterDialog(props){\n    const [ outputFormat, setOutputFormat ] = React.useState('')\n\n    const [ formats, setFormats ] = React.useState([])\n\n    React.useEffect(() => {\n        getConverters().then((converters) => {\n            setFormats(converters.map((x) => ({\n                from: x.sourceFormat,\n                to: [x.targetFormat]\n            })))\n        })\n    }, [])\n\n    const convert = () => {\n        convertFile(props.selected.id, outputFormat.toLowerCase())\n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Convert {props.selected && props.selected.filename}</DialogTitle>\n            <DialogContent style={{display: 'flex', alignItems: 'center'}}>\n                <TextField \n                    fullWidth \n                    disabled\n                    label=\"From\" \n                    value={props.selected && props.selected.extension.toUpperCase()}/>\n                <Forward style={{marginLeft: 8, marginRight: 8}}/>\n                <FormControl fullWidth>\n                    <InputLabel>To</InputLabel>\n                    <Select value={outputFormat} onChange={(e) => {\n                        setOutputFormat(e.target.value) \n                    }} fullWidth>\n                        {props.selected && (formats.filter((a) => a.from == props.selected.extension)[0] || {to: []}).to.map((x) => (\n                            <MenuItem value={x}>{x.toUpperCase()}</MenuItem>\n\n                        ))}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={convert} color=\"primary\" variant=\"contained\">Start</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, {useCallback} from 'react';\n\nimport {\n  Add,\n  MoreVert,\n  Contactless,\n  Info\n} from '@material-ui/icons';\n\nimport {\n  Paper,\n  Fab,\n  List,\n  IconButton,\n  ListItem,\n  Divider,\n  Checkbox\n} from '@material-ui/core';\nimport MoreMenu from '../../components/more-menu'\nimport DashboardHeader from '../../components/dashboard-header';\nimport PermissionForm from '../../components/permission-form';\nimport SearchTable from '../../components/search-table';\n\nimport FilePreviewDialog from '../../components/file-preview-dialog';\n\nimport ConverterDialog from '../../components/converter-dialog';\n\nimport { useMutation } from '@apollo/client';\nimport { addFile, CONVERT_FILE, getFiles, UPLOAD_FILE } from '../../actions/fileActions';\nimport {useDropzone} from 'react-dropzone'\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Files(props){\n  const [ uploadFile, {data} ] = useMutation(UPLOAD_FILE)\n  const [ convertDoc, setConvertDoc ] = React.useState(null)\n  const [ selectedData, setData ] = React.useState(null)\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    if(acceptedFiles && acceptedFiles.length > 0){\n      console.log(acceptedFiles)\n      uploadFile({variables: {file: acceptedFiles[0]}}).then((r) => {\n        if(r.data && r.data.uploadFile && !r.data.uploadFile.duplicate){\n          props.addFile(r.data.uploadFile.file)\n        }\n      })\n     \n    }\n    // Do something with the files\n  }, [data])\n\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, noClick: true})\n\n  const [ files, setFiles ] = React.useState([])\n  const [ viewable ] = React.useState([\"pdf\", \"glb\", \"png\"])\n  React.useEffect(() => {\n    props.getFiles()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Files\"} />,\n\n    <PermissionForm\n      type={props.type}\n      permissions={props.permissions}\n      >\n        <FilePreviewDialog ipfs={props.ipfs} open={selectedData} file={selectedData} onClose={() => setData(null)} />\n        <ConverterDialog open={convertDoc} selected={convertDoc} onClose={() => setConvertDoc(null)}/>\n        <div className={isDragActive ? 'file-list selected' : 'file-list'} {...getRootProps()} >\n        <input {...getInputProps()} />\n\n        <SearchTable \n          data={props.files}\n          renderItem={(x) => (\n            <div className=\"file-item\">\n              <ListItem button onClick={(e) => {\n                e.stopPropagation();\n                if(viewable.indexOf(x.extension) > -1 ||(x.conversion && viewable.indexOf(x.conversion.extension) > -1)){\n               //   alert(\"Viewable\")\n                  let file = {}\n                  if(viewable.indexOf(x.extension) > -1){\n                    file = {\n                      filename: x.filename,\n                      cid: x.cid,\n                      extension: x.extension\n                    }\n                  }else if(x.conversion && viewable.indexOf(x.conversion.extension) > -1){\n                    file = {\n                      filename: x.filename,\n                      cid: x.conversion.cid,\n                      extension: x.conversion.extension\n                    }\n                  }\n                  setData(file)\n                }\n         \n                /*\n                if(props.ipfs){\n                  const get = async (x) => {\n                    if(props.ipfs){\n                      console.log(x)\n                      let file =  props.ipfs.cat(x.cid)\n                      let data = Buffer.from('')\n                      for await (const chunk of file){\n                        data = Buffer.concat([data, chunk])\n                      }\n                      setData({\n                        filename: x.filename,\n                        extension: x.extension,\n                        content: data\n                      })\n                     // console.log(data)\n                    }\n                    \n                  }\n                  //get(x)*/\n\n                \n              }}>\n                 <Checkbox onClick={(e) => {\n              e.stopPropagation();\n            }}/>  \n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column'}}>\n              <div>{x.filename}</div>\n              <span style={{fontSize: 10}}>{x.cid}</span>\n            </div>\n              </ListItem>\n              <MoreMenu \n              menu={[\n                {\n                  label: \"Convert\",\n                  icon: <Contactless />,\n                  action: () => {\n                    setConvertDoc(x)\n                  }\n                },\n                {\n                  label: \"Get Info\",\n                  icon: <Info />,\n                  action: () => {}\n                }\n              ]} />\n            </div>\n          )}/>\n          </div>\n    </PermissionForm>\n  ]\n}\n\nexport default connect((state) => ({\n  files: state.files.list\n}), (dispatch) => ({\n  addFile: (file) => dispatch(addFile(file)),\n  getFiles: () => dispatch(getFiles())\n}))(Files)\n","import { gql } from '@apollo/client';\nimport GClient from '../graph';\nimport * as types from './types';\n\nconst client = GClient()\n\n\nexport const addBooking = (time, projectId, booking) => {\n    return (dispatch) => {\n    client.mutate({\n        mutation: gql`\n    mutation AddBooking($time: CalendarInput, $projectId: ID, $booking: BookingInput){\n        addBooking(time: $time, projectId: $projectId, booking: $booking){\n            id\n            startTime\n            endTime\n            allDay\n            date\n            project {\n                id \n                name\n            }\n            items {\n                equipment {\n                    name\n                }\n                team {\n                    name\n                }\n            }\n        }\n    }\n  `,\n  variables: {\n      time: time,\n      projectId: projectId,\n      booking: booking\n  }\n}).then((r) => r.data.addBooking).then((r) => {\n    dispatch({type: types.ADD_BOOKING, booking: r})\n})\n    }\n}\n\n  export const getBookings = () => {\n      return (dispatch, getState) => {\n    client.query({\n        query: gql`\n            query GetBookings{\n                calendar{\n                    id\n                    startTime\n                    endTime\n                    allDay\n                    date\n                    project {\n                        id\n                        name\n                    }\n                    items {\n                        equipment{\n                            name\n                        }\n                        team {\n                            name\n\n                        }\n                    }\n                }\n            }\n        `\n    }).then((r) => r.data.calendar).then((r) => {\n        console.log(r)\n        dispatch({type: types.SET_BOOKINGS, bookings: r})\n    })\n}\n  }\n","import React from 'react';\nimport * as Y from 'yjs'\nimport { \n    Dialog,\n    DialogActions,\n    DialogTitle,\n    DialogContent,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    TextField,\n    InputAdornment,\n    Tabs,\n    Tab,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core'\n\nimport {\n    Autocomplete\n} from '@material-ui/lab'\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport { useMutation } from '@apollo/client';\nimport { addBooking } from '../../actions/calendarActions';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport { connect } from 'react-redux';\nimport YActions from '../../graph/yjs';\n\nimport moment from 'moment';\nconst doc = YActions();\n\nlet yDoc; \n\nfunction CalendarDialog(props){\n    \n    const [ step, setStep ] = React.useState(0)\n    const [ searchTab, setSearchTab ] = React.useState(0)\n    const [ search, setSearch ] = React.useState(null)\n\n    const [ date, setDate ] = React.useState(null);\n    const [ allDay, setAllDay ] = React.useState(false);\n    const [ startTime, setStart ] = React.useState(null)\n    const [ endTime, setEnd ] = React.useState(null)\n    const [ project, setProject ] = React.useState(null)\n\n    const [ selectedItems, setSelectedItems ] = React.useState({})\n\n    React.useEffect(() => {\n       yDoc = doc.getMap('calendar')    \n    }, [])\n\n    const stepButton = () => {\n        if(step == 0){\n            setStep(1)\n        }else{\n            //Book items\n            let equipment = [];\n            let team = [];\n\n            for(var k in selectedItems){\n                if(selectedItems[k].selected){\n                    switch(selectedItems[k].type){\n                        case 'team':\n                            team.push(k)\n                            break\n                        case 'equipment':\n                            equipment.push(k)\n                            break;\n                    }\n                }\n            }\n\n            let sTime, eTime;\n            if(startTime){\n                sTime = moment(date)\n                sTime.set('hour', startTime.get('hour'))\n                sTime.set('minute', startTime.get('minute'))\n\n            }\n            if(endTime){\n                eTime = moment(date)\n            \n                eTime.set('hour', endTime.get('hour'))\n                eTime.set('minute', endTime.get('minute'))\n            }\n\n\n            let booking = new Y.Map();\n            let _booking = {\n                date: date.valueOf() / 1000,\n                project: project,\n                startTime: sTime && parseInt(sTime.valueOf() / 1000),\n                endTime: eTime && parseInt(eTime.valueOf() / 1000),\n                allDay: allDay,\n                items: {\n                    team: team,\n                    equipment: equipment\n                }\n            }\n            \n            booking.set('date', _booking.date)\n            booking.set('project', _booking.project)\n\n            if(yDoc){\n                //yDoc.set('bookings', [])\n                console.log(\"Inserting into yjs\")\n                let obj = yDoc.toJSON()\n                let bookings = obj.bookings || [];\n                console.log(bookings)\n                bookings.push(_booking)\n                yDoc.set('bookings', bookings)\n                console.log(yDoc.toJSON())\n            }\n\n            \n\n            /*props.addBooking({\n                    allDay: allDay,\n                    startTime: startTime && parseInt(sTime.valueOf() / 1000),\n                    endTime: endTime && parseInt(eTime.valueOf() / 1000),\n                    date: date.valueOf() / 1000\n                },\n                project.id,\n                {\n                    equipment: equipment,\n                    team: team\n                })*/\n                props.onClose()\n        }\n    }\n\n    \n    const renderStep = () => {\n        switch(step){\n            case 0:\n                return (\n                <>\n                <Autocomplete \n                    value={project}\n                    onChange={(e, newVal) => setProject(newVal)}\n                    options={props.projects}\n                    getOptionLabel={(project) => project.name} \n                    renderInput={(params) => {\n                        return (\n                            <TextField {...params} label=\"Project\"  />\n                        )\n                    }}/>\n                <KeyboardDatePicker \n                    value={date}\n                    format=\"DD/MM/yyyy\"\n                    onChange={(e, newVal) => setDate(e)}\n                    margin=\"normal\" \n                    label=\"Date\" \n                    variant=\"inline\" ></KeyboardDatePicker>\n                <FormControlLabel \n                    control={<Checkbox checked={allDay} onChange={(e) => {\n                        setAllDay(e.target.checked)\n                    }}/>}\n                    label=\"All day\" />\n                {!allDay && <div style={{display: 'flex', marginTop: 8}}>\n                    <KeyboardTimePicker \n                        value={startTime}\n                        onChange={(e) => setStart(e)}\n                        label=\"Start Time\"\n                        fullWidth \n                        style={{marginRight: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                    <KeyboardTimePicker \n                        value={endTime}\n                        onChange={(e) => setEnd(e)}\n                        label=\"End Time\"\n                        fullWidth \n                        style={{marginLeft: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                </div>}\n                </>\n                )\n            case 1:\n                return (\n                    \n                        <List>\n                            {(searchTab == 0 ? props.team : props.equipment).filter((a) => !search || a.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                                <ListItem>\n                                    <Checkbox checked={selectedItems[x.id] && selectedItems[x.id].selected || false} onChange={(e) => {\n                                        let s = Object.assign({}, selectedItems);\n                                        s[x.id] = {\n                                            selected: e.target.checked,\n                                            type: searchTab == 0 ? \"team\" :\"equipment\"\n                                        } \n                                        console.log(s)\n                                        setSelectedItems(s)  \n                                    }}/>\n                                    {x.name}\n                                </ListItem>\n                            ))}\n                        </List>\n                    \n                )\n            default:\n                return null;\n        }\n    }\n\n    const renderStepTitle = () => {\n        switch(step){\n            case 1:\n                return (\n                    <>\n                    <TextField\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)} fullWidth InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment> \n                    }} label=\"Search\" />\n                    <Tabs value={searchTab} onChange={(e, newVal) => {\n                        if(newVal !== searchTab) setSearch('')\n                        setSearchTab(newVal)\n                    }}>\n                        <Tab label=\"Team\" />\n                        <Tab label=\"Equipment\" />\n                    </Tabs>\n                    <Divider />\n                    \n                    </>\n                )\n            case 0:\n                return \"Create a booking\"\n            default:\n                return null\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>\n                {renderStepTitle()}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 250}}>\n                {renderStep()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={step == \"0\" ? props.onClose : () => setStep(0)}>{step == \"0\" ? \"Cancel\" : \"Back\"}</Button>\n                <Button color=\"primary\" onClick={stepButton} variant=\"contained\">{step == \"1\" ? \"Book\" : \"Next\"}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default connect((state) => ({\n    projects: state.projects.list,\n    team: state.team.list,\n    equipment: state.equipment.list\n}), (dispatch) => ({\n    addBooking: (time, project, booking) => dispatch(addBooking(time, project, booking))\n}))(CalendarDialog)","import React from 'react';\nimport {\n    Paper,\n    Fab\n} from '@material-ui/core';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport DashboardHeader from '../../components/dashboard-header'\nimport CalendarDialog from '../../components/calendar-dialog'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { getBookings } from '../../actions/calendarActions';\nimport { connect } from 'react-redux';\nimport YActions from '../../graph/yjs';\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\nconst localizer = momentLocalizer(moment)\nconst doc = YActions();\n\nlet yDoc;\n\nfunction CalendarView(props){\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ bookings, setBookings ] = React.useState([])\n\n    const myEventsList = [];\n\n    const tabs = [\"All\", \"Me\", \"Projects\"];\n    \n    const observer = () => {\n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n    }\n    React.useEffect(() => {\n        yDoc = doc.getMap('calendar')\n        yDoc.observe(observer)\n        \n        let obj = yDoc.toJSON()\n        if(obj.bookings && obj.bookings.length > 0){\n            setBookings(obj.bookings)\n        }\n       // props.getBookings()\n    }, [])\n\n    return [\n        <DashboardHeader \n        tabs={tabs}\n        selectedTab={\"\"}\n        onTabSelect={(tab) => {\n            //setSelectedTab(tab)\n            props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n        }}\n        title={\"Calendar\"} />,\n        <CalendarDialog y={yDoc} open={dialogOpen} onClose={() => openDialog(false)} />,\n        \n        <Paper style={{\n            position: 'relative',\n            marginTop: 12, \n            height: 'calc(100vh - 84px)', \n            flex: 1,\n            display: 'flex', \n            flexDirection: 'column', \n            padding: 4}}>\n            <Fab onClick={() => openDialog(true)} color=\"primary\" style={{zIndex: 9, position: 'absolute', right: 12, bottom: 12}}>\n                <Add />\n            </Fab>\n            <Calendar\n                localizer={localizer}\n                events={bookings.map((x) => ({\n                    id: x.id,\n                    title: x.project.name,\n                    allDay: x.allDay,\n                    start: new Date((x.startTime || x.date)*1000),\n                    end: new Date((x.endTime || x.date)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </Paper>\n    ]\n}\n\nexport default connect((state) => ({\n    bookings: state.calendar.bookings\n}), (dispatch) => ({\n    getBookings: () => dispatch(getBookings())\n}))(CalendarView)","import React from 'react';\n\nimport {\n  Paper,\n  Divider,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nexport default function Settings(props){\n  const addons = [\n    {\n      name: \"STP to GLB Converter\"\n    },\n    {\n      name: \"HexNode Replication\"\n    }\n  ]\n\n  const connections = [\n    {\n      name: \"MSSQL Server\"\n    }\n  ]\n\n  return (\n    <Paper style={{flex: 1, marginTop: 12}}>\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Add-ons</Typography>\n        <List>\n            {addons.map((x) => (\n              <ListItem button>{x.name}</ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <Typography variant=\"h6\" style={{display: 'flex'}}>Connections</Typography>\n        <List>\n            {connections.map((x) => (\n              <ListItem button>{x.name}</ListItem>\n            ))}\n        </List>\n    \n      </div>\n      <Divider />\n    </Paper>\n  );\n}\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addTeamMember = (member) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddTeamMember($member: TeamMemberInput){\n    addTeamMember(member: $member){\n      id\n      name\n      username\n      email\n      status\n      phoneNumber\n      admin\n    }\n  }\n`,\n      variables: {\n        member: member\n      }\n    }).then((r) => r.data.addTeamMember).then((r) => {\n      dispatch({type: types.ADD_TEAM_MEMBER, newMember: r})\n    })\n  }\n}\n\nexport const updateTeamMember = (memberId, member) => {\n  return (dispatch) => {\n     client.mutate({\n       mutation: gql`\n  mutation UpdateTeam($memberId: String, $member: TeamMemberInput){\n    updateTeamMember(memberId: $memberId, member: $member){\n      name\n      email\n      phoneNumber\n      admin\n    }\n  }\n`,\n    variables: {\n      memberId: memberId,\n      member: member\n    }\n  }).then((r) => r.data.updateTeamMember).then((r) => {\n    dispatch({type: types.UPDATE_TEAM_MEMBER, member: member, id: memberId})\n  })\n  }\n}\n\nexport const removeTeamMember = (id) => {\n  return (dispatch, getState) => {\n    return client.mutate({\n      mutation: gql`\n        mutation RemoveMember($memberId: ID){\n          removeTeamMember(memberId: $memberId)\n        }\n      `,\n      variables: {\n        memberId: id\n      }\n    }).then((r) => r.data.removeTeamMember).then((r) => {\n      dispatch({type: types.REMOVE_TEAM_MEMBER, id: id})\n    })\n  }\n}\n\nexport const getTeam = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetTeam {\n          team {\n            id\n            status\n            name\n            username\n            password\n            phoneNumber\n            email\n            admin\n          }\n        }\n      `\n    }).then((r) => r.data.team).then((r) => {\n      dispatch({type: types.SET_TEAM, team: r})\n    })\n  }\n}\n","import React from 'react';\n\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport {\n  SupervisedUserCircle,\n  SupervisorAccount,\n  Schedule,\n  Edit,\n  Delete,\n  Share\n} from '@material-ui/icons';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport { useMutation } from \"@apollo/client\";\nimport { removeTeamMember, addTeamMember, updateTeamMember, getTeam } from '../../actions/teamActions';\nimport PermissionForm from '../../components/permission-form';\nimport MoreMenu from '../../components/more-menu';\nimport { connect } from 'react-redux';\nimport jwt_decode from 'jwt-decode'\nimport './index.css';\n\nfunction Teams(props){\n  const [ selected, setSelected ] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getTeam()\n  }, [])\n\n  console.log(props.user)\n\n  return [\n    <DashboardHeader \n    tabs={[]}\n    onTabSelect={(tab) => {\n       // setSelectedTab(tab)\n      //  props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={\"Team\"} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          delete d.id;\n          props.updateTeamMember(data.id, d)\n      \n        }else{\n          props.addTeamMember(data)\n        }\n      }}\n      onClose={() => setSelected(null)} \n      selected={selected}\n      type={props.type} \n      permissions={props.permissions}>\n      <SearchTable \n        data={props.team}\n        renderItem={(item) => (\n          <div className=\"team-item\">\n          <ListItem button >\n            {item.status == \"pending\" ? <Schedule /> : item.admin ? <SupervisorAccount /> : <SupervisedUserCircle />}\n            <Typography style={{marginLeft: 12}}>\n              {item.name}\n            </Typography>\n          </ListItem>\n          <MoreMenu \n            menu={[\n            ].concat(item.status == \"pending\" ? [\n              {\n                icon: <Share />,\n                label: \"Share Signup\",\n                action: () => {}\n              }\n            ] : []).concat(props.user.admin ? [{\n              label: \"Edit\",\n              icon: <Edit />,\n              action: () => setSelected(item)\n            },\n            {\n              label: \"Delete\",\n              color: 'red',\n              icon: <Delete />,\n              action: () => props.removeTeamMember(item.id)\n            }] : [])} />\n          </div>\n        )} />\n    </PermissionForm>\n  ]\n}\n\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  team: state.team.list,\n  type: state.dashboard.types.filter((a) => a.name == \"Team Members\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Team Members\")\n}), (dispatch) => ({\n  getTeam: () => dispatch(getTeam()),\n  addTeamMember: (member) => dispatch(addTeamMember(member)),\n  removeTeamMember: (id) => dispatch(removeTeamMember(id)),\n  updateTeamMember: (id, member) => dispatch(updateTeamMember(id, member))\n}))(Teams)\n","import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const addEquipment = (equipment) => {\n  return (dispatch) => {\n    client.mutate({\n      mutation: gql`\n  mutation AddEquipment($equipment: EquipmentInput){\n    addEquipment(equipment: $equipment){\n      id\n      name\n      type\n      description\n    }\n  }\n`,\n    variables: {\n      equipment: equipment\n    }\n  }).then((r) => r.data.addEquipment).then((r) => {\n    dispatch({type: types.ADD_EQUIPMENT, newItem: r})\n  })\n}\n}\n\nexport const updateEquipment = (id, equipment) => {\n  console.log(id, equipment)\n  return (dispatch) => {\n    return client.mutate({\n      mutation:  gql`\n      mutation UpdateEquipment($equipmentId: String, $equipment: EquipmentInput){\n        updateEquipment(equipmentId: $equipmentId, equipment: $equipment){\n          name\n          type\n          description\n        }\n      }\n    `,\n    variables: {\n      equipmentId: id,\n      equipment\n    }\n    }).then((r) => r.data.updateEquipment).then((r) => {\n      dispatch({type: types.UPDATE_EQUIPMENT, equipment, id})\n    })\n  }\n}\n\nexport const removeEquipment = (id) => {\n  return (dispatch) => {\n    return client.mutate({\n      mutation: gql`\n        mutation RemoveEquipment($id: String){\n          removeEquipment(equipmentId: $id)\n        }\n      `,\n      variables: {\n        id: id\n      }\n    }).then((r) => r.data.removeEquipment).then((r) => {\n      dispatch({type: types.REMOVE_EQUIPMENT, id: id})\n    })\n  }\n}\n\n\nexport const getEquipment = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n        query GetEquipment {\n          equipment {\n            id\n            name\n            type\n            description\n          }\n        }\n      `\n    }).then((r) => r.data.equipment).then((r) => {\n      dispatch({type: types.SET_EQUIPMENT, equipment: r})\n    })\n  }\n \n}\n","import React from 'react';\n\nimport {\n  Paper,\n  List,\n  ListItem,\n  Typography\n} from '@material-ui/core';\n\nimport DashboardHeader from '../../components/dashboard-header';\nimport SearchTable from '../../components/search-table';\nimport PermissionForm from '../../components/permission-form';\nimport { connect } from 'react-redux';\nimport { removeEquipment, getEquipment, updateEquipment, addEquipment } from '../../actions/equipmentActions';\nimport MoreMenu from '../../components/more-menu';\nimport jwt_decode from 'jwt-decode';\nimport './index.css';\n\nfunction Equipment(props){\n  const [ selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getEquipment()\n  }, [])\n\n  return [\n    <DashboardHeader \n    tabs={[...new Set(props.equipment.filter((a) => a.type).map((x) => x.type))]}\n    onTabSelect={(tab) => {\n        //setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={''}\n    title={'Equipment'} />,\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          console.log(data)\n          delete d.id;\n          props.updateEquipment(data.id, d)\n        }else{\n          props.addEquipment(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n    <SearchTable\n      data={props.equipment}\n      renderItem={(item) => (\n        <div className=\"equipment-item\">\n        <ListItem button onClick={(e) => {\n        }}>\n          <Typography variant=\"subtitle1\" style={{flex: 1}}>{item.name}</Typography>\n        </ListItem>\n          <MoreMenu\n            menu={[\n            ].concat(props.user.admin ? [\n              {\n                label: \"Edit\",\n                action: () => setSelected(item)\n              },\n              {\n                label: \"Delete\",\n                color: 'red',\n                action: () => props.removeEquipment(item.id)\n              }\n            ] : [])} />\n        </div>\n\n      )} />\n      </PermissionForm>\n  ]\n}\nexport default connect((state) => ({\n  user: jwt_decode(state.auth.token),\n  equipment: state.equipment.list,\n  type: state.dashboard.types.filter((a) => a.name ==\"Equipment\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Equipment\")\n}), (dispatch) => ({\n  getEquipment: () => dispatch(getEquipment()),\n  addEquipment: (equipment) => dispatch(addEquipment(equipment)),\n  updateEquipment: (id, equipment) => dispatch(updateEquipment(id, equipment)),\n  removeEquipment: (id) => dispatch(removeEquipment(id))\n}))(Equipment)\n","import React from 'react'\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\nimport  ReactJson from 'react-json-view'\nexport const type = 'typeDef'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{flex: 1}}>\n      <ReactJson src={props.node.data.typedef} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"type-def\">\n        {props.data.label}\n     </div>\n    </NodeWrapper>\n    )\n})","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nimport GClient from '../graph';\n\nconst client = GClient()\n\nexport const UPDATE_INTEGRATION_MAP = gql`\n  mutation UpdateIntegrationMap($nodes: [MapNodeInput], $links: [MapLinkInput]){\n    updateIntegrationMap(nodes: $nodes, links: $links){\n      nodes{\n        id\n        type\n        data\n        position{\n          x\n          y\n        }\n      }\n      links{\n        id\n        target\n        source\n      }\n    }\n  }\n`\n\nexport const getPermissions = () => {\n  return (dispatch) => {\n    return client.query({\n      query: gql`\n      query GetPermissions{\n        typePermissions{\n          type\n          create\n          read\n          update\n          delete\n        }\n      }\n      `\n    }).then((r) => r.data.typePermissions).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_PERMS, perms: r})\n    })\n  }\n}\n\nexport const getIntegrationMap = () => {\n  return client.query({\n    query: gql`\n      query GetIntegrations{\n        integrationMap{\n          nodes{\n            id\n            type\n            data\n            position{\n              x\n              y\n            }\n          }\n          links{\n            id\n            target\n            source\n          }\n        }\n      }\n    `\n  }).then((r) => r.data.integrationMap)\n}\n\nexport const getTypes = () => {\n  return (dispatch, getState) => {\n    return client.query({\n      query: gql`\n        query GetTypes{\n          adminTypes{\n            name\n            typeDef\n          }\n        }\n      `\n    }).then((r) => r.data.adminTypes).then((r) => {\n      console.log(r)\n      dispatch({type: types.SET_DASHBOARD_TYPES, types: r})\n    })\n  }\n \n}\n\nexport const getTables = (store) => {\n    return client.query({\n      query: gql`\n        query GetLayout{\n          connectionLayout(storeId: \"${store}\"){\n            name\n          }\n        }\n      `\n    }).then((r) => {\n      return r.data.connectionLayout;\n    })\n}\n\nexport const getColumns = (store, table) => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            bucketLayout(storeId: \"${store}\", bucketId: \"${table}\"){\n              name\n              datatype\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.bucketLayout;\n      })\n}\n\nexport const getViews = () => {\n    return client.query({\n        query: gql`\n          query GetProjects {\n            getSQLViews{\n              name\n            }\n          }\n        `\n      }).then((r) => {\n        return r.data.getSQLViews;\n      })\n}\n","import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <div className=\"adapter-header\">\n        {props.data.label || \"MSSQL Adapter\"}\n        </div>\n        <div className=\"adapter-info\">\n          {props.data && props.data.table && props.data.table.name}\n        </div>\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from 'react-hive-flow';\n\nexport const type = 'mssql server'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        {props.data.label || \"MSSQL Server\"}\n     </div>\n    </NodeWrapper>\n    )\n})","import React from 'react';\n\nimport { cloneDeep } from 'lodash';\nimport * as TypeDefNode from '../../nodes/TypeDefNode'\nimport * as MSSQLNode from '../../nodes/MSSQLNode';\nimport * as MSSQLServer from '../../nodes/MSSQLServerNode';\n\nimport { useMutation } from '@apollo/client';\nimport { getTypes, getIntegrationMap, UPDATE_INTEGRATION_MAP} from '../../actions/adminActions'\nimport { connect } from 'react-redux';\nimport HiveEditor from 'react-hive-flow';\nimport 'react-hive-flow/dist/index.css';\nimport './index.css'\n\nfunction Admin(props){\n\n    React.useEffect(() => {\n        props.getTypes()\n        \n    }, [])\n\n\n    const [ updateIntegrationMap, {data}] = useMutation(UPDATE_INTEGRATION_MAP)\n       \n    const [ nodes, setNodes ] = React.useState([])\n    const [ links, setLinks ] = React.useState([])\n\n    React.useEffect(() => {\n        getIntegrationMap().then((integrations) => {\n            if(integrations.nodes) setNodes(integrations.nodes.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                delete y.position.__typename;\n                return y;\n            }).slice());\n            if(integrations.links) setLinks(integrations.links.map((x) => {\n                let y = cloneDeep(x)\n                delete y.__typename;\n                return y;\n            }).slice());\n        })\n    }, [])\n\n    return (\n        <div className=\"admin-view\">\n        <HiveEditor\n            nodeTypes={[TypeDefNode, MSSQLNode, MSSQLServer]}\n            nodes={(props.types||[]).concat(nodes)}\n            links={links}\n            onNodeChange={(nodes) => {\n                let n = nodes.filter((a) => props.types.map((x) => x.id).indexOf(a.id) < 0)\n                updateIntegrationMap({variables: {\n                    nodes: n,\n                    links: links\n                }})\n                setNodes(n)\n            }}\n            onLinkChange={(link) => {\n                updateIntegrationMap({variables: {\n                    nodes: nodes,\n                    links: link\n                }})\n                setLinks(link)\n            }} />\n        </div>\n    )\n}\n\nexport default connect(\n    (state) => ({\n        types: (state.dashboard.types||[]).map((x, ix) => ({\n            id: x.name.toLowerCase(),\n            type: 'typeDef',\n            data: {\n                label: x.name,\n                typedef: x.typeDef\n            },\n            position: {\n                x: 200 + (ix * 200),\n                y: 300\n            },\n            draggable: false\n        }))\n    }),\n    (dispatch) => ({\n        getTypes: () => dispatch(getTypes())\n    })\n)(Admin)","import React from 'react';\n\nimport {\n    Drawer,\n    List,\n    ListItem,\n    Divider,\n} from '@material-ui/core';\n\nimport {\n    Notifications,\n    AccountTree,\n    Dashboard,\n    CalendarToday,\n    SupervisorAccount,\n    BusinessCenter,\n    Description,\n    Settings\n  } from '@material-ui/icons';\n\nimport { withRouter } from 'react-router-dom'\n\nfunction Sidebar(props){\n    const menu = [\n        {\n          icon: <Dashboard />,\n          label: \"Dashboard\",\n          path: \"\"\n        },\n        {\n          icon: <CalendarToday />,\n          label: \"Calendar\",\n          path: \"/calendar\"\n        },\n        {\n          icon: <AccountTree />,\n          label: \"Projects\",\n          path: \"/projects\"\n        },\n        {\n          icon: <SupervisorAccount />,\n          label: \"Team\",\n          path: \"/team\"\n        },\n        {\n          icon: <BusinessCenter /> ,\n          label: \"Equipment\",\n          path: \"/equipment\"\n        },\n        {\n          icon: <Description />,\n          label: \"Files\",\n          path: \"/files\"\n        },\n      ]\n\n    return (\n        <Drawer variant=\"permanent\" style={{width: 200}}>\n        <List style={{flex: 1, width: 200}}> \n        <ListItem style={{fontWeight: 'bold', padding: 12, fontSize: 20}}>\n            WorkHub\n        </ListItem>\n        <Divider />\n        {menu.map((x, ix) => (\n            <ListItem \n            className={menu.map((x) => x.path).indexOf(window.location.pathname.split(props.match.url)[1]) == ix ? 'selected menu-item': 'menu-item'}\n            onClick={() => props.history.push(`${props.match.url}${x.path}`)}\n            button >{x.icon} {x.label}</ListItem>\n        ))}\n        </List>\n        <Divider />\n        <ListItem button onClick={() => props.history.push(`${props.match.url}/settings`)}>\n            <Settings style={{marginRight: 12}} />\n            Settings\n        </ListItem>\n        </Drawer>\n    )\n}\n\nexport default withRouter(Sidebar)","import React from 'react';\n\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItem,\n  Paper,\n  Typography,\n  Tabs,\n  Tab\n} from '@material-ui/core';\n\nimport {\n  Notifications,\n  AccountTree,\n  Dashboard,\n  CalendarToday,\n  SupervisorAccount,\n  BusinessCenter,\n  Description,\n  Settings\n} from '@material-ui/icons';\n\nimport { connect } from 'react-redux';\n\nimport Projects from '../../views/Projects';\nimport ProjectView from '../../views/ProjectView';\n\nimport Files from '../../views/Files';\nimport Calendar from '../../views/Calendar';\nimport SettingsView from '../../views/Settings';\nimport Teams from '../../views/Team';\nimport Equipment from '../../views/Equipment';\nimport AdminView from '../../views/Admin';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\nimport { Switch, Route } from 'react-router-dom';\n\nimport IPFS from 'ipfs';\n\nimport { getTypes, getPermissions } from '../../actions/adminActions'\nimport Sidebar from '../../components/sidebar';\nimport YActions from '../../graph/yjs';\n\nimport './index.css';\n\nconst doc = YActions()\n\nfunction DashboardController(props){\n  let query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n  const currentPath = window.location.pathname.replace(/\\/dashboard/g, '')\n\n  const [ ipfsNode, setIPFS ] = React.useState(null)\n\n  React.useEffect(async () => {\n    props.getTypes()\n    props.getPermissions()\n    let node;\n    if(!ipfsNode){\n      node = await IPFS.create()\n    setIPFS(node)\n    }\n  \n    //console.log(await node.id())\n\n    return async () => {\n      await (ipfsNode || node).stop()\n    }\n  }, [])\n\n  const renderTitle = () => {\n    switch(currentPath){\n      case '':\n      case '/':\n        return \"Dashboard\";\n      case '/calendar':\n        return \"Calendar\"\n      case '/projects':\n        return \"Projects\"\n      case '/team':\n        return \"Team\";\n      case '/equipment':\n        return \"Equipment\"\n      case '/files':\n        return \"Files\";\n    }\n  }\n\n  const renderActionBlock = () => {\n    console.log(currentPath)\n    switch(currentPath){\n      case '/projects':\n        let project_set = [...new Set(props.projects.map((x) => x.status))]\n        console.log(project_set)\n        return (\n        <Tabs value={project_set.indexOf(query_string.status)}>\n          {project_set.map((x) => (\n            <Tab label={x} onClick={() => {\n              query_string.status = x;\n            props.history.push(`${props.location.pathname}?${qs.stringify(query_string)}`)\n          }}/>\n          ))}\n        </Tabs>\n        )\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <div className=\"dashapp\">\n      <Sidebar match={props.match} />\n      <div className=\"dashapp-body\">\n\n        <Switch>\n          <Route path={`${props.match.url}/calendar`} render={(props) => (\n            <Calendar {...props} y={doc} />\n          )} />\n          <Route path={`${props.match.url}/projects`} component={Projects} exact />\n          <Route path={`${props.match.url}/projects/:id`} render={(props) => (\n            <ProjectView {...props} y={doc}/>\n          )} />\n          <Route path={`${props.match.url}/files`} render={(props) => {\n            return <Files {...props} ipfs={ipfsNode} />\n          }} />\n          <Route path={`${props.match.url}/team`} component={Teams} />\n          <Route path={`${props.match.url}/equipment`} component={Equipment} />\n          <Route path={`${props.match.url}/settings`} component={SettingsView} />\n          <Route path={`${props.match.url}/admin`} component={AdminView} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  projects: state.projects.list,\n  user: jwt_decode(state.auth.token)\n}), (dispatch) => ({\n  getTypes: () => dispatch(getTypes()),\n  getPermissions: () => dispatch(getPermissions())\n}))(DashboardController)\n","import * as types from './types';\nimport { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n    mutation Login($username: String, $password: String){\n        login(username: $username, password: $password){\n            token\n            error\n        }\n    }\n`\n\nexport const getQuote = () => {\n    return fetch('https://zenquotes.io/api/today').then((r) => r.json())\n}\n\nexport const setToken = (token) => {\n    return (dispatch) => {\n        dispatch({type: types.SET_TOKEN, token: token})\n    }\n}","import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/client';\nimport { getQuote, LOGIN, setToken } from '../../actions/authActions';\nimport { connect } from 'react-redux';\n\nimport './index.css';\n\nfunction Login(props){\n    const [ quote, setQuote ] = React.useState({})\n    const [ error, setError ] = React.useState(null)\n    const [ username, setUsername ] = React.useState('')\n    const [ password, setPassword ] = React.useState('')\n\n    const [ doLogin ] = useMutation(LOGIN)\n\n    const login = () => {\n        doLogin({variables: {\n            username: username,\n            password: password\n        }}).then((r) => {\n            if(r.data.login && r.data.login.token){\n                props.setToken(r.data.login.token)\n                props.history.push('/dashboard')\n            }else if(r.data.login && r.data.login.error){\n                setError(r.data.login.error)\n            }\n        })\n    }\n\n    React.useEffect(() => {\n        getQuote().then((quote) => {\n            setQuote(quote)\n        })\n    })\n\n    return (\n        <div className=\"login-view\">\n            <div className=\"image-banner\">\n                <div className=\"quotes\">\n                <span>\n                    {quote.q}\n                </span>\n                <span>{quote.a}</span>\n                </div>\n            </div>\n            <Paper style={{display: 'flex', flex: 0.3, flexDirection: 'column', padding: 8}}>\n                <div style={{display: 'flex', alignItems: 'center', paddingBottom: 8}}>\n                    <img style={{height: 70, marginRight: 12}} src=\"/assets/teal.png\" />\n                    <Typography style={{color: 'teal'}} variant=\"h4\">WorkHub</Typography>\n\n                </div>\n                <Divider style={{marginBottom: 22}} />\n            <TextField \n                error={error}\n                label=\"Username\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)}/>\n            <TextField \n                error={error}\n                label=\"Password\" \n                type=\"password\" \n                value={password} \n                onKeyDown={(e) => {if(e.keyCode == 13) {login()}}}\n                onChange={(e) => setPassword(e.target.value)}/>\n            <Button \n                onClick={login}\n                style={{marginTop: 33}} \n                color=\"primary\" \n                variant=\"contained\">Login</Button>\n            </Paper>\n\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch) => ({\n    setToken: (token) => dispatch(setToken(token))\n}))(Login)","import * as types from '../actions/types';\n\nconst init = {\n  list: []\n}\n\nlet updated;\n\nexport default function projectReducer(state = init, action={}){\n  switch(action.type){\n    case types.SET_PROJECTS:\n      return {\n        ...state,\n        list: action.projects\n      }\n    case types.REMOVE_PROJECT:\n      updated = state.list.slice()\n      let pIx = updated.map((x) => x.id).indexOf(action.id)\n      updated.splice(pIx, 1)\n      return {\n        ...state,\n        list: updated\n      }\n    case types.ADD_PROJECT:\n      return {\n        ...state,\n        list: state.list.concat([action.newProject])\n      }\n    case types.UPDATE_PROJECT:\n      updated = state.list.slice()\n      let ix = updated.map((x) => x.id).indexOf(action.id)\n      updated[ix] = {\n        ...updated[ix],\n        ...action.project\n      }\n      return {\n        ...state,\n        list: updated\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    permissions: [],\n    types: []\n}\n\nexport default function dashboardReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_DASHBOARD_PERMS:\n            return {\n                ...state,\n                permissions: action.perms\n            }\n        case types.SET_DASHBOARD_TYPES:\n            return {\n                ...state,\n                types: action.types\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n  list: []\n}\n\nexport default function fileReducer(state = INIT, action = {}){\n  switch(action.type){\n    case types.SET_FILES:\n      return {\n        ...state,\n        list: action.files\n      }\n    case types.ADD_FILE:\n      return {\n        ...state,\n        list: state.list.concat([action.file])\n      }\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nconst INIT = {\n    token: null\n}\n\nexport default function authReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_TOKEN:\n            return {\n                token: action.token\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    list: []\n}\n\nlet updated;\nexport default function equipmentReducer(state = INIT, action={}){\n    switch(action.type){\n        case types.SET_EQUIPMENT:\n            return {\n                ...state,\n                list: action.equipment\n            }\n        case types.ADD_EQUIPMENT:\n            return {\n                ...state,\n                list: state.list.concat([action.newItem])\n            }\n        case types.UPDATE_EQUIPMENT:\n            updated = state.list.slice()\n            let ix = updated.map((x) => x.id).indexOf(action.id)\n            updated[ix] = {\n                ...updated[ix],\n                ...action.equipment\n            }\n            return {\n                ...state,\n                list: updated\n            }\n        case types.REMOVE_EQUIPMENT:\n            updated = state.list.slice()\n            let eIx = updated.map((x) => x.id).indexOf(action.id)\n            updated.splice(eIx, 1)\n            return {\n                ...state,\n                list: updated\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types'\n\nconst INIT = {\n    list: []\n}\n\nlet updated, tIx;\n\nexport default function teamReducer(state = INIT, action = {} ){\n    switch(action.type){\n        case types.SET_TEAM:\n            return {\n                ...state,\n                list: action.team\n            }\n        case types.ADD_TEAM_MEMBER:\n            return {\n                ...state,\n                list: state.list.concat([action.newMember])\n            }\n        case types.UPDATE_TEAM_MEMBER:\n            updated = state.list.slice()\n            tIx = updated.map((x) => x.id).indexOf(action.id)\n            updated[tIx] = {\n                ...updated[tIx],\n                ...action.member\n            }\n            return {\n                ...state,\n                list: updated\n            }\n        case types.REMOVE_TEAM_MEMBER:\n            updated = state.list.slice()\n            tIx = updated.map((x) => x.id).indexOf(action.id)\n            updated.splice(tIx, 1)\n            return {\n                ...state,\n                list: updated\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/types';\n\nconst INIT = {\n    bookings: []\n}\n\nexport default function calendarReducer(state = INIT, action = {}){\n    switch(action.type){\n        case types.SET_BOOKINGS:\n            return {\n                ...state,\n                bookings: action.bookings\n            }\n        case types.ADD_BOOKING:\n            return {\n                ...state,\n                bookings: state.bookings.concat([action.booking])\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport projects from './projects';\nimport dashboard from './dashboard';\nimport files from './files';\nimport auth from './auth';\nimport equipment from './equipment';\nimport team from './team';\nimport calendar from './calendar';\n\nexport default combineReducers({\n  projects,\n  auth,\n  files,\n  calendar,\n  dashboard,\n  equipment,\n  team\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk))\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { Provider } from 'react-redux';\nimport DashboardController from './controllers/DashboardController';\nimport Login from './views/Login';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider\n} from '@material-ui/pickers'\n\nimport GClient from './graph';\nimport configureStore from './configureStore';\n\nimport './App.css';\n\nconst { store, persistor } = configureStore();\nconst client = GClient();\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Provider store={store}>\n      <ApolloProvider client={client}>\n      <Router>\n      <PersistGate loading={null} persistor={persistor}>\n\n      <div className=\"App\">\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/dashboard\" render={(props) => {\n          if(store.getState().auth.token){\n            return <DashboardController {...props} />\n          }else{\n            return <Redirect to=\"/\" />\n          }\n        }} />\n      </div>\n      </PersistGate>\n    </Router>\n      </ApolloProvider>\n    </Provider>\n  </MuiPickersUtilsProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button\n} from '@material-ui/core';\n\nimport GLBCard from '../glb-card'\nimport PDFCard from '../pdf-card';\n\nexport default function FilePreviewDialog(props){\n\n    const file = props.file || {}\n    const [data, setData] = React.useState(null)\n\n    const renderContent = () => {\n        if(data){\n        switch(file.extension){\n            case 'pdf':\n                return (\n                    <PDFCard data={data}/>\n                )\n            case 'glb':\n                return (\n                    <GLBCard data={data}/>\n                )\n            case 'png':\n                return (\n                    <img style={{width: '33%', height: '100%'}} src={data} />\n                )\n            default:\n                return null;\n        }\n    }\n    }\n\n    React.useEffect( async () => {\n        if(data) URL.revokeObjectURL(data)\n        if(props.file && props.ipfs){\n            console.log(\"Fetching\", props.file.cid)\n            let file =  props.ipfs.cat(props.file.cid)\n            let data = Buffer.from('')\n            for await (const chunk of file){\n              data = Buffer.concat([data, chunk])\n            }\n            console.log(\"Setting data\")\n            setData(URL.createObjectURL(new Blob([data])))\n        }\n    }, [props.file, props.ipfs])\n\n    const onClose = () => {\n        if(data) URL.revokeObjectURL(data)\n        if(props.onClose) props.onClose();\n    }\n\n    return (\n        <Dialog fullWidth maxWidth=\"lg\" open={props.open} onClose={onClose}>\n            <DialogTitle>{file.name}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React from 'react';\n\n\nexport default function GLBCard(props){\n    let canvas;\n    let scene;\n    let engine;\n\n  \n    React.useEffect(() => {\n        const onResizeWindow = () => {\n            if (engine) {\n              engine.resize();\n            }\n        }\n        if(props.data){\n\n        \n        if(!engine){\n        engine = new window.BABYLON.Engine(\n            canvas,\n            true\n        )\n        }\n\n        if(!scene){\n        scene = new window.BABYLON.Scene(engine)\n        scene.createDefaultEnvironment();\n        }\n\n        var camera = new window.BABYLON.ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 2.5, 3, new window.BABYLON.Vector3(0, 0, 10), scene);\n      \n        camera.setTarget(window.BABYLON.Vector3.Zero());\n        camera.minZ = 0;\n        camera.wheelPrecision = 7;\n        camera.speed = 0.5;\n\n        console.log(props.data)\n\n        window.BABYLON.SceneLoader.ImportMesh(null, \"\", props.data, scene, (e) => {\n            console.log(e)   \n        }, null, null, \".glb\")\n      \n        camera.attachControl(canvas, false);\n        window.addEventListener(\"resize\", onResizeWindow);\n        engine.runRenderLoop(function(){\n            scene.render();\n        });\n\n   \n    }\n    return () => {\n        if(engine){\n            engine.stopRenderLoop()\n        }\n        if(scene) {\n            scene.dispose()\n            scene = null\n        }\n\n        window.removeEventListener('resize', onResizeWindow)\n    }\n    }, [props.data])\n\n    const onCanvasLoad = (c) => {\n        if(c !== null){\n            canvas = c;\n        }\n    }\n\n    return (\n        <canvas style={{width: '100%'}} ref={onCanvasLoad}/>\n    )\n}","import React from 'react';\n\nimport { Document, Page } from 'react-pdf';\n\nexport default function PDFCard(props){\n    \n    const [ numPages, setNumPages ] = React.useState(null)\n    const [ pageNumber, setPageNumber ] = React.useState(1)\n\n    const onDocumentLoad = ({numPages}) => {\n        setNumPages(numPages)\n    }\n\n    return (\n        <Document\n            file={{data: props.data}}\n            onLoadSuccess={onDocumentLoad}>\n             {\n              Array.from(\n                new Array(numPages),\n                (el, index) => (\n                  <Page\n                    key={`page_${index + 1}`}\n                    pageNumber={index + 1}\n                  />\n                ),\n              )\n            }\n        </Document>\n    )\n}"],"sourceRoot":""}